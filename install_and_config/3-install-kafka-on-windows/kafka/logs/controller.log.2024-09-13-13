[2024-09-06 15:45:39,026] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:45:39,029] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:45:39,029] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:45:39,031] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2024-09-06 15:45:39,032] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-09-06 15:45:39,032] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 15:45:39,033] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:45:39,035] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2024-09-06 15:46:25,686] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:46:25,702] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-06 15:46:34,050] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2024-09-06 15:46:34,052] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-06 15:46:34,056] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-06 15:46:34,059] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-06 15:46:34,061] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-06 15:46:34,072] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 359) (kafka.controller.KafkaController)
[2024-09-06 15:46:34,086] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-06 15:46:34,125] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-06 15:46:34,137] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-06 15:46:34,139] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-06 15:46:34,139] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-06 15:46:34,140] INFO [Controller id=0] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2024-09-06 15:46:34,140] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-06 15:46:34,147] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-06 15:46:34,148] INFO [Controller id=0] List of topics ineligible for deletion: multi-broker-topic,test-topic,__consumer_offsets (kafka.controller.KafkaController)
[2024-09-06 15:46:34,148] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-06 15:46:34,149] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2024-09-06 15:46:34,151] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-06 15:46:34,164] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:46:34,171] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:46:34,172] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 15:46:34,198] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:46:34,272] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:46:34,272] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 15:46:34,277] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 15:46:34,372] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OnlinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, multi-broker-topic-5 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, multi-broker-topic-4 -> OnlinePartition, test-topic-1 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, test-topic-4 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, multi-broker-topic-2 -> OfflinePartition, test-topic-3 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 15:46:34,373] INFO [Controller id=0] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2024-09-06 15:46:34,379] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 15:46:34,379] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 15:46:34,380] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-06 15:46:34,380] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-06 15:46:34,383] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-06 15:46:34,397] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-06 15:46:36,568] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2024-09-06 15:46:36,569] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-06 15:46:36,583] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-06 15:46:36,584] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2024-09-06 15:46:36,602] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:46:36,648] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-09-06 15:46:36,649] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:46:36,650] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 359, 1 -> 440) (kafka.controller.KafkaController)
[2024-09-06 15:46:36,674] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-06 15:46:36,737] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:46:36,860] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:46:36,976] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 15:46:39,409] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:46:39,409] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:46:39,413] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:46:39,414] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:46:39,414] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:46:39,414] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:46:39,415] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), multi-broker-topic-2 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-06 15:46:39,415] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 15:46:39,417] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 15:46:42,490] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-09-06 15:46:42,490] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-06 15:46:42,501] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2024-09-06 15:46:42,513] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-06 15:46:42,518] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:46:42,543] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2024-09-06 15:46:42,547] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 359, 1 -> 440, 2 -> 475) (kafka.controller.KafkaController)
[2024-09-06 15:46:42,559] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:46:42,578] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-06 15:46:42,641] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:46:42,767] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:46:42,881] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 15:47:43,045] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2024-09-06 15:47:43,046] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2024-09-06 15:47:43,048] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-06 15:47:43,050] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-06 15:47:43,052] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2024-09-06 15:47:43,061] INFO [Controller id=2] Initialized broker epochs cache: HashMap(1 -> 440, 2 -> 475) (kafka.controller.KafkaController)
[2024-09-06 15:47:43,071] DEBUG [Controller id=2] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2024-09-06 15:47:43,099] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-06 15:47:43,109] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-06 15:47:43,115] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-09-06 15:47:43,115] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-09-06 15:47:43,117] INFO [Controller id=2] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2024-09-06 15:47:43,117] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-06 15:47:43,118] INFO [Controller id=2] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2024-09-06 15:47:43,118] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-06 15:47:43,123] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-06 15:47:43,123] INFO [Controller id=2] List of topics ineligible for deletion: multi-broker-topic,test-topic,__consumer_offsets (kafka.controller.KafkaController)
[2024-09-06 15:47:43,123] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-06 15:47:43,124] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2024-09-06 15:47:43,125] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-06 15:47:43,133] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:47:43,137] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 15:47:43,140] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:47:43,140] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:43,162] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:47:43,198] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:47:43,198] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 15:47:43,203] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 15:47:43,233] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, multi-broker-topic-5 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, multi-broker-topic-0 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, test-topic-4 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, multi-broker-topic-3 -> OnlinePartition, test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, multi-broker-topic-2 -> OnlinePartition, test-topic-3 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 15:47:43,234] INFO [Controller id=2] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2024-09-06 15:47:43,237] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 15:47:43,237] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 15:47:43,237] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-06 15:47:43,238] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-06 15:47:43,239] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-06 15:47:43,247] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-06 15:47:43,258] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:43,365] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:43,471] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:43,579] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:43,687] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:43,796] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:43,902] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:44,016] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:44,133] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:44,240] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:44,350] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:44,456] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:44,562] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:44,670] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:44,780] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:44,888] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:44,994] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:45,103] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:45,209] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:45,316] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:45,423] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:45,530] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:45,639] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:45,746] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:45,853] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:45,960] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:46,069] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:46,178] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:46,288] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:46,394] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:46,502] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:46,608] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:46,716] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:46,824] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:46,933] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:47,041] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:47,149] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:47,254] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:47,363] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:47,471] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:47,577] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:47,687] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:47,795] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:47,900] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:48,011] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:48,118] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:48,226] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:48,254] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:47:48,254] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:47:48,258] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-06 15:47:48,259] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 15:47:48,261] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 15:47:48,261] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:47:48,261] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:47:48,261] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:47:48,261] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:47:48,333] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:48,442] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:48,549] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:48,658] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:48,766] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:48,874] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:48,982] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:49,037] INFO [Controller id=2] Newly added brokers: , deleted brokers: 1, bounced brokers: , all live brokers: 2 (kafka.controller.KafkaController)
[2024-09-06 15:47:49,038] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 15:47:49,039] WARN [RequestSendThread controllerId=2] Controller 2 epoch 4 fails to send request (type: UpdateMetadataRequest=, controllerId=2, controllerEpoch=4, kraftController=false, type=UNKNOWN, brokerEpoch=440, partitionStates=[], liveBrokers=UpdateMetadataBroker(id=1, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9093, host='localhost', listener='PLAINTEXT', securityProtocol=0)], rack=null), UpdateMetadataBroker(id=2, v0Host='', v0Port=0, endpoints=[UpdateMetadataEndpoint(port=9094, host='localhost', listener='PLAINTEXT', securityProtocol=0)], rack=null)) to broker localhost:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:276)
	at org.apache.kafka.server.util.ShutdownableThread.pause(ShutdownableThread.java:121)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:240)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:47:49,040] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2024-09-06 15:47:49,040] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 15:47:49,040] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 15:47:49,043] INFO [Controller id=2] Broker failure callback for 1 (kafka.controller.KafkaController)
[2024-09-06 15:47:49,084] DEBUG [Controller id=2] Unregister BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-09-06 15:47:49,085] INFO [Controller id=2] Updated broker epochs cache: HashMap(2 -> 475) (kafka.controller.KafkaController)
[2024-09-06 15:48:18,799] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:48:18,821] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2024-09-06 15:48:18,825] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-06 15:48:18,831] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-06 15:48:18,833] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-06 15:48:18,835] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-06 15:48:18,858] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 557) (kafka.controller.KafkaController)
[2024-09-06 15:48:18,874] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-06 15:48:18,914] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-06 15:48:18,923] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-06 15:48:18,925] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-06 15:48:18,925] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-06 15:48:18,925] INFO [Controller id=0] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2024-09-06 15:48:18,925] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-06 15:48:18,933] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-06 15:48:18,934] INFO [Controller id=0] List of topics ineligible for deletion: multi-broker-topic,test-topic,__consumer_offsets (kafka.controller.KafkaController)
[2024-09-06 15:48:18,934] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-06 15:48:18,935] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2024-09-06 15:48:18,937] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-06 15:48:18,950] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:48:18,960] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:48:18,968] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:48:18,990] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:48:19,080] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:48:19,081] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 15:48:19,086] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 15:48:19,087] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 15:48:19,171] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OnlinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, multi-broker-topic-5 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, multi-broker-topic-4 -> OnlinePartition, test-topic-1 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, test-topic-4 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, multi-broker-topic-2 -> OfflinePartition, test-topic-3 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 15:48:19,172] INFO [Controller id=0] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2024-09-06 15:48:19,177] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 15:48:19,178] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 15:48:19,178] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-06 15:48:19,178] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-06 15:48:19,180] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-06 15:48:19,195] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-06 15:48:24,203] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:48:24,203] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:48:24,207] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:48:24,208] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:48:24,208] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(multi-broker-topic-0 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-32 -> List(1), multi-broker-topic-3 -> List(1), __consumer_offsets-8 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1)) (kafka.controller.KafkaController)
[2024-09-06 15:48:24,208] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 15:48:24,210] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 15:48:24,210] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), multi-broker-topic-2 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-06 15:48:24,210] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 15:48:24,211] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 15:48:27,039] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2024-09-06 15:48:27,039] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-06 15:48:27,045] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-06 15:48:27,046] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2024-09-06 15:48:27,052] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:48:27,086] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-09-06 15:48:27,088] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:48:27,089] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 557, 1 -> 636) (kafka.controller.KafkaController)
[2024-09-06 15:48:27,111] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-06 15:48:27,178] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:48:27,292] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 15:48:30,676] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-09-06 15:48:30,676] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-06 15:48:30,682] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-06 15:48:30,682] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2024-09-06 15:48:30,687] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:48:30,702] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2024-09-06 15:48:30,704] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 557, 1 -> 636, 2 -> 671) (kafka.controller.KafkaController)
[2024-09-06 15:48:30,726] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:48:30,738] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-06 15:48:30,812] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 15:48:30,933] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 15:49:02,568] DEBUG [Controller id=0] Read current producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=3000, size=1000), Zk path version 4 (kafka.controller.KafkaController)
[2024-09-06 15:49:02,580] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=4000, size=1000) by writing to Zk with path version 5 (kafka.controller.KafkaController)
[2024-09-06 15:49:19,059] DEBUG [Controller id=0] Read current producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=4000, size=1000), Zk path version 5 (kafka.controller.KafkaController)
[2024-09-06 15:49:19,062] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=5000, size=1000) by writing to Zk with path version 6 (kafka.controller.KafkaController)
[2024-09-06 15:49:19,178] DEBUG [Controller id=0] Read current producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=5000, size=1000), Zk path version 6 (kafka.controller.KafkaController)
[2024-09-06 15:49:19,184] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=6000, size=1000) by writing to Zk with path version 7 (kafka.controller.KafkaController)
[2024-09-06 15:53:24,216] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:53:24,216] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:53:24,217] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:53:24,217] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:53:24,218] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:53:24,218] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:53:24,218] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:53:24,218] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:58:24,225] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:58:24,225] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:58:24,228] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:58:24,228] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:58:24,228] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:58:24,228] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:58:24,228] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:58:24,228] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:03:24,241] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 16:03:24,244] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 16:03:24,245] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:03:24,245] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:03:24,245] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:03:24,245] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:03:24,245] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:03:24,245] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:08:24,260] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 16:08:24,260] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 16:08:24,260] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:08:24,260] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:08:24,260] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:08:24,260] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:08:24,260] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:08:24,260] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:13:24,262] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 16:13:24,262] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 16:13:24,265] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:13:24,265] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:13:24,265] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:13:24,265] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:13:24,265] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:13:24,265] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:18:24,275] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 16:18:24,275] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 16:18:24,278] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:18:24,278] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:18:24,279] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:18:24,279] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:18:24,279] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:18:24,279] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:23:24,289] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 16:23:24,289] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 16:23:24,291] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:23:24,291] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:23:24,291] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:23:24,291] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:23:24,291] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:23:24,291] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:28:24,298] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 16:28:24,298] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 16:28:24,299] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:28:24,299] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:28:24,299] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:28:24,299] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:28:24,299] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:28:24,299] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:33:24,308] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 16:33:24,308] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 16:33:24,310] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:33:24,310] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:33:24,310] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:33:24,310] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:33:24,310] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:33:24,310] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:38:24,321] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 16:38:24,321] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 16:38:24,321] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:38:24,321] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:38:24,321] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:38:24,321] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:38:24,322] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:38:24,322] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:43:24,324] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 16:43:24,324] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 16:43:24,325] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:43:24,325] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:43:24,325] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:43:24,325] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:43:24,325] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:43:24,325] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:48:24,326] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 16:48:24,326] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 16:48:24,326] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:48:24,326] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:48:24,326] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:48:24,326] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:48:24,327] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:48:24,327] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:53:24,327] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 16:53:24,327] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 16:53:24,328] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:53:24,328] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:53:24,328] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:53:24,328] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:53:24,328] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:53:24,328] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:58:24,330] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 16:58:24,330] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 16:58:24,332] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:58:24,332] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:58:24,332] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:58:24,332] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 16:58:24,332] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 16:58:24,332] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:03:24,347] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 17:03:24,347] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 17:03:24,347] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:03:24,347] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:03:24,347] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:03:24,347] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:03:24,347] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:03:24,347] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:08:24,366] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 17:08:24,366] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 17:08:24,367] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:08:24,367] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:08:24,367] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:08:24,367] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:08:24,367] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:08:24,367] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:13:24,376] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 17:13:24,376] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 17:13:24,377] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:13:24,377] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:13:24,378] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:13:24,378] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:13:24,378] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:13:24,378] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:18:24,390] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 17:18:24,391] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 17:18:24,391] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:18:24,391] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:18:24,391] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:18:24,391] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:18:24,392] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:18:24,392] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:23:24,403] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 17:23:24,403] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 17:23:24,404] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:23:24,405] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:23:24,405] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:23:24,405] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:23:24,405] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:23:24,405] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:28:24,415] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 17:28:24,415] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 17:28:24,415] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:28:24,415] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:28:24,415] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:28:24,415] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:28:24,415] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:28:24,415] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:33:24,419] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 17:33:24,419] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 17:33:24,421] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:33:24,421] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:33:24,421] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:33:24,421] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:33:24,421] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:33:24,421] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:38:24,422] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 17:38:24,423] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 17:38:24,423] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:38:24,423] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:38:24,423] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:38:24,423] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:38:24,423] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:38:24,423] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:43:24,427] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 17:43:24,427] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 17:43:24,427] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:43:24,427] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:43:24,427] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:43:24,427] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:43:24,427] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:43:24,427] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:48:24,440] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 17:48:24,440] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 17:48:24,440] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:48:24,440] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:48:24,440] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:48:24,441] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:48:24,441] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:48:24,441] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:53:24,444] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 17:53:24,444] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 17:53:24,445] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:53:24,445] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:53:24,445] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:53:24,445] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:53:24,446] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:53:24,446] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:58:24,462] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 17:58:24,462] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 17:58:24,462] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:58:24,462] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:58:24,462] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:58:24,463] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 17:58:24,463] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 17:58:24,463] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:03:24,471] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 18:03:24,476] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 18:03:24,477] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:03:24,477] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:03:24,477] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:03:24,477] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:03:24,477] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:03:24,477] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:08:24,483] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 18:08:24,483] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 18:08:24,483] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:08:24,483] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:08:24,483] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:08:24,483] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:08:24,483] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:08:24,483] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:13:24,492] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 18:13:24,492] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 18:13:24,492] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:13:24,492] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:13:24,492] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:13:24,492] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:13:24,492] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:13:24,493] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:18:24,498] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 18:18:24,498] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 18:18:24,498] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:18:24,498] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:18:24,498] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:18:24,498] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:18:24,498] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:18:24,498] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:23:24,502] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 18:23:24,502] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 18:23:24,503] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:23:24,503] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:23:24,503] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:23:24,503] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:23:24,503] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:23:24,503] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:28:24,509] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 18:28:24,509] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 18:28:24,510] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:28:24,510] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:28:24,510] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:28:24,510] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:28:24,510] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:28:24,510] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:33:24,523] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 18:33:24,523] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 18:33:24,526] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:33:24,526] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:33:24,526] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:33:24,526] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:33:24,526] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:33:24,526] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:38:24,535] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 18:38:24,535] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 18:38:24,535] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:38:24,535] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:38:24,536] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:38:24,536] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:38:24,536] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:38:24,536] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:56:33,214] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-09-06 18:56:33,219] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2024-09-06 18:56:33,230] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 18:56:33,234] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 18:56:33,241] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 18:56:33,242] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 18:56:33,242] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 18:56:33,272] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 18:56:33,273] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 18:56:33,273] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 18:56:33,276] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 18:56:33,277] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 18:56:33,280] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 18:56:33,308] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-09-06 18:56:33,563] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2024-09-06 18:56:33,644] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2024-09-06 18:56:33,647] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-06 18:56:33,654] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-06 18:56:33,658] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-06 18:56:33,660] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-06 18:56:33,663] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2024-09-06 18:56:33,672] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-09-06 18:56:33,675] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 699) (kafka.controller.KafkaController)
[2024-09-06 18:56:33,676] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 18:56:33,679] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 18:56:33,688] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2024-09-06 18:56:33,689] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-06 18:56:33,713] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-06 18:56:33,755] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-09-06 18:56:33,760] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 18:56:33,761] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 18:56:33,766] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2024-09-06 18:56:33,806] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-06 18:56:34,201] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-06 18:56:34,526] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-06 18:56:34,526] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-06 18:56:34,526] INFO [Controller id=0] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2024-09-06 18:56:34,526] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-06 18:56:34,529] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-06 18:56:34,530] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-06 18:56:34,530] INFO [Controller id=0] List of topics ineligible for deletion: multi-broker-topic,test-topic,__consumer_offsets (kafka.controller.KafkaController)
[2024-09-06 18:56:34,530] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-06 18:56:34,530] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2024-09-06 18:56:34,530] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-06 18:56:34,586] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 18:56:34,586] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 18:56:34,588] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 18:56:34,592] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 18:56:34,636] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 18:56:34,636] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 18:56:34,636] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 18:56:34,678] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OnlinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, multi-broker-topic-5 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, multi-broker-topic-4 -> OnlinePartition, test-topic-1 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, test-topic-4 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, multi-broker-topic-2 -> OfflinePartition, test-topic-3 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 18:56:34,678] INFO [Controller id=0] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2024-09-06 18:56:34,681] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 18:56:34,681] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 18:56:34,681] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-06 18:56:34,681] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-06 18:56:34,681] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-06 18:56:34,684] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-06 18:56:34,701] INFO [Controller id=0] Newly added brokers: 1,2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-09-06 18:56:34,701] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-06 18:56:34,794] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-06 18:56:34,797] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-06 18:56:34,810] INFO [Controller id=0] New broker startup callback for 1,2 (kafka.controller.KafkaController)
[2024-09-06 18:56:34,816] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 18:56:34,916] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-06 18:56:34,966] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 18:56:35,003] DEBUG [Controller id=0] Register BrokerModifications handler for List(1, 2) (kafka.controller.KafkaController)
[2024-09-06 18:56:35,010] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 699, 1 -> 704, 2 -> 702) (kafka.controller.KafkaController)
[2024-09-06 18:56:39,687] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 18:56:39,687] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 18:56:39,688] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:56:39,688] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:56:39,688] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:56:39,688] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 18:56:39,688] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 18:56:39,688] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:01:39,689] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 19:01:39,691] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 19:01:39,692] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:01:39,692] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:01:39,692] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:01:39,692] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:01:39,692] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:01:39,692] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:06:39,709] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 19:06:39,709] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 19:06:39,711] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:06:39,711] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:06:39,711] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:06:39,711] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:06:39,711] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:06:39,711] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:11:39,724] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 19:11:39,724] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 19:11:39,725] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:11:39,725] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:11:39,725] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:11:39,725] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:11:39,725] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:11:39,725] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:16:39,735] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 19:16:39,735] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 19:16:39,736] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:16:39,736] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:16:39,736] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:16:39,736] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:16:39,736] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:16:39,736] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:21:39,745] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 19:21:39,746] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 19:21:39,746] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:21:39,746] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:21:39,746] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:21:39,746] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:21:39,746] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:21:39,746] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:26:39,747] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 19:26:39,749] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 19:26:39,750] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:26:39,750] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:26:39,750] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:26:39,750] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:26:39,750] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:26:39,750] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:31:39,764] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 19:31:39,764] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 19:31:39,764] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:31:39,764] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:31:39,764] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:31:39,764] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:31:39,764] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:31:39,764] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:36:39,781] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 19:36:39,781] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 19:36:39,781] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:36:39,781] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:36:39,782] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:36:39,782] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:36:39,782] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:36:39,782] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:41:39,793] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 19:41:39,793] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 19:41:39,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:41:39,797] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:41:39,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:41:39,797] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:41:39,797] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:41:39,797] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:46:39,806] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 19:46:39,806] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 19:46:39,806] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:46:39,806] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:46:39,807] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:46:39,807] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:46:39,807] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:46:39,807] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:51:39,811] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 19:51:39,811] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 19:51:39,812] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:51:39,812] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:51:39,812] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:51:39,812] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:51:39,812] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:51:39,812] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:56:39,815] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 19:56:39,816] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 19:56:39,817] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:56:39,818] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:56:39,818] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:56:39,818] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 19:56:39,818] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 19:56:39,818] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:01:39,832] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 20:01:39,833] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 20:01:39,833] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:01:39,833] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:01:39,833] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:01:39,833] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:01:39,833] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:01:39,833] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:05:51,514] INFO [Controller id=0] New topics: [Set(multi-broker-topic-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(multi-broker-topic-topic,Some(aYIxc9hSSxGE5Gq1jHxC7g),HashMap(multi-broker-topic-topic-0 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), multi-broker-topic-topic-4 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), multi-broker-topic-topic-3 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), multi-broker-topic-topic-6 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=), multi-broker-topic-topic-5 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), multi-broker-topic-topic-2 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), multi-broker-topic-topic-1 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-06 20:05:51,515] INFO [Controller id=0] New partition creation callback for multi-broker-topic-topic-0,multi-broker-topic-topic-4,multi-broker-topic-topic-3,multi-broker-topic-topic-6,multi-broker-topic-topic-5,multi-broker-topic-topic-2,multi-broker-topic-topic-1 (kafka.controller.KafkaController)
[2024-09-06 20:05:51,541] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 20:05:51,541] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 20:05:51,541] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 20:06:39,843] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 20:06:39,843] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 20:06:39,843] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:06:39,843] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:06:39,843] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:06:39,843] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:06:39,843] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:06:39,843] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:10:10,113] INFO [Controller id=0] New topics: [HashSet(multi-replica-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(multi-replica-topic,Some(H40zMuVKTnuMcQVoka9dnQ),HashMap(multi-replica-topic-4 -> ReplicaAssignment(replicas=2,0,1, addingReplicas=, removingReplicas=), multi-replica-topic-0 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), multi-replica-topic-3 -> ReplicaAssignment(replicas=0,1,2, addingReplicas=, removingReplicas=), multi-replica-topic-6 -> ReplicaAssignment(replicas=0,2,1, addingReplicas=, removingReplicas=), multi-replica-topic-2 -> ReplicaAssignment(replicas=1,0,2, addingReplicas=, removingReplicas=), multi-replica-topic-5 -> ReplicaAssignment(replicas=1,2,0, addingReplicas=, removingReplicas=), multi-replica-topic-1 -> ReplicaAssignment(replicas=2,1,0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-06 20:10:10,113] INFO [Controller id=0] New partition creation callback for multi-replica-topic-4,multi-replica-topic-0,multi-replica-topic-3,multi-replica-topic-6,multi-replica-topic-2,multi-replica-topic-5,multi-replica-topic-1 (kafka.controller.KafkaController)
[2024-09-06 20:11:39,845] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 20:11:39,845] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 20:11:39,847] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:11:39,847] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:11:39,847] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:11:39,848] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:11:39,848] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:11:39,848] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:16:39,849] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 20:16:39,849] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 20:16:39,849] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:16:39,849] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:16:39,849] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:16:39,849] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:16:39,849] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:16:39,849] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:21:39,851] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 20:21:39,851] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 20:21:39,855] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:21:39,855] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:21:39,855] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:21:39,855] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:21:39,855] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:21:39,855] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:26:39,856] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 20:26:39,857] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 20:26:39,858] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:26:39,858] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:26:39,858] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:26:39,859] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:26:39,859] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:26:39,859] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:31:39,863] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 20:31:39,863] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 20:31:39,864] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:31:39,864] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:31:39,864] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:31:39,864] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:31:39,864] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:31:39,864] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:36:39,868] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 20:36:39,868] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 20:36:39,870] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:36:39,870] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:36:39,870] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:36:39,870] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:36:39,870] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:36:39,870] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:41:39,874] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 20:41:39,875] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 20:41:39,876] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:41:39,876] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:41:39,876] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:41:39,877] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:41:39,877] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:41:39,877] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:46:39,883] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 20:46:39,883] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 20:46:39,885] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:46:39,885] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:46:39,885] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:46:39,885] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:46:39,885] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:46:39,885] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:51:39,887] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 20:51:39,888] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 20:51:39,889] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:51:39,889] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:51:39,889] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:51:39,889] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:51:39,889] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:51:39,889] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:55:09,941] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-09-06 20:55:09,943] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-09-06 20:55:09,943] DEBUG [Controller id=0] Live brokers: 1,2 (kafka.controller.KafkaController)
[2024-09-06 20:55:09,983] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 20:55:09,986] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 20:55:09,989] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 20:55:10,002] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-1 -> (Leader:1,ISR:1,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),multi-broker-topic-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),test-topic-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),multi-replica-topic-5 -> (Leader:1,ISR:1,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),multi-broker-topic-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:4,ControllerEpoch:5),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),multi-replica-topic-1 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),multi-broker-topic-topic-5 -> (Leader:1,ISR:1,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),multi-broker-topic-topic-2 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),multi-replica-topic-4 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),multi-broker-topic-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),test-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-0 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-6 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),test-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),multi-broker-topic-3 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),test-topic-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-3 -> (Leader:1,ISR:1,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),multi-broker-topic-topic-3 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-0 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-6 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),multi-broker-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),test-topic-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),multi-replica-topic-2 -> (Leader:1,ISR:1,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),multi-broker-topic-topic-4 -> (Leader:1,ISR:1,2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:6),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:5),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) (kafka.controller.KafkaController)
[2024-09-06 20:55:10,029] WARN [RequestSendThread controllerId=0] Controller 0 epoch 6 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=6, brokerEpoch=699, deletePartitions=false, topicStates=StopReplicaTopicState(topicName='multi-broker-topic-topic', partitionStates=[StopReplicaPartitionState(partitionIndex=0, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=1, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=3, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=4, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=6, leaderEpoch=0, deletePartition=false)]),StopReplicaTopicState(topicName='multi-replica-topic', partitionStates=[StopReplicaPartitionState(partitionIndex=4, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=5, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=2, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=1, leaderEpoch=0, deletePartition=false)])) to broker localhost:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:259)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 20:55:10,146] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 20:55:10,253] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 20:55:10,359] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 20:55:10,465] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 20:55:10,576] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 20:55:10,694] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 20:55:10,803] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 20:55:10,913] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 20:55:11,022] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 20:55:11,127] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 20:55:11,200] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 20:55:11,200] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 20:55:11,200] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 20:55:11,200] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-09-06 20:55:11,200] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2024-09-06 20:55:11,201] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 20:55:11,201] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 20:55:11,201] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,201] WARN [RequestSendThread controllerId=0] Controller 0 epoch 6 fails to send request (type=StopReplicaRequest, controllerId=0, controllerEpoch=6, brokerEpoch=699, deletePartitions=false, topicStates=StopReplicaTopicState(topicName='multi-broker-topic-topic', partitionStates=[StopReplicaPartitionState(partitionIndex=0, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=1, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=3, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=4, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=6, leaderEpoch=0, deletePartition=false)]),StopReplicaTopicState(topicName='multi-replica-topic', partitionStates=[StopReplicaPartitionState(partitionIndex=4, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=5, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=2, leaderEpoch=0, deletePartition=false), StopReplicaPartitionState(partitionIndex=1, leaderEpoch=0, deletePartition=false)])) to broker localhost:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:276)
	at org.apache.kafka.server.util.ShutdownableThread.pause(ShutdownableThread.java:121)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:240)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 20:55:11,203] TRACE [RequestSendThread controllerId=0] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,203] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,203] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,204] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,204] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,204] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,205] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,205] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,205] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,206] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-09-06 20:55:11,253] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 7 and epoch zk version is now 7 (kafka.controller.KafkaController)
[2024-09-06 20:55:11,258] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2024-09-06 20:55:11,260] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-06 20:55:11,263] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-06 20:55:11,265] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2024-09-06 20:55:11,268] DEBUG [Controller id=2] Broker 1 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2024-09-06 20:55:11,276] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 704, 2 -> 702) (kafka.controller.KafkaController)
[2024-09-06 20:55:11,292] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2024-09-06 20:55:11,322] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-06 20:55:11,334] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-06 20:55:11,341] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,341] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,341] INFO [Controller id=1] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2024-09-06 20:55:11,341] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-06 20:55:11,342] INFO [Controller id=1] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, multi-broker-topic-topic, multi-replica-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2024-09-06 20:55:11,342] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-06 20:55:11,347] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-06 20:55:11,348] INFO [Controller id=1] List of topics ineligible for deletion: multi-broker-topic,test-topic,multi-broker-topic-topic,__consumer_offsets,multi-replica-topic (kafka.controller.KafkaController)
[2024-09-06 20:55:11,348] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-06 20:55:11,349] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, multi-broker-topic-topic, __consumer_offsets, multi-replica-topic) (kafka.controller.TopicDeletionManager)
[2024-09-06 20:55:11,349] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-06 20:55:11,360] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 20:55:11,360] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,360] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 20:55:11,371] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 20:55:11,402] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 20:55:11,487] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 20:55:11,488] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 20:55:11,492] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 20:55:11,523] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, multi-broker-topic-topic-1 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, multi-replica-topic-5 -> OnlinePartition, multi-broker-topic-5 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, multi-replica-topic-1 -> OnlinePartition, multi-broker-topic-topic-5 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, multi-broker-topic-topic-2 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, multi-broker-topic-0 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, multi-replica-topic-4 -> OnlinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, multi-replica-topic-0 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, multi-broker-topic-topic-6 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, test-topic-4 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, multi-broker-topic-3 -> OnlinePartition, test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, multi-replica-topic-3 -> OnlinePartition, multi-broker-topic-topic-3 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, multi-broker-topic-topic-0 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, multi-replica-topic-6 -> OnlinePartition, multi-broker-topic-2 -> OnlinePartition, test-topic-3 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, multi-replica-topic-2 -> OnlinePartition, __consumer_offsets-39 -> OfflinePartition, multi-broker-topic-topic-4 -> OnlinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 20:55:11,523] INFO [Controller id=1] Ready to serve as the new controller with epoch 7 (kafka.controller.KafkaController)
[2024-09-06 20:55:11,526] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 20:55:11,526] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 20:55:11,526] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-06 20:55:11,527] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-06 20:55:11,528] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-06 20:55:11,537] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-06 20:55:16,552] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 20:55:16,553] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 20:55:16,564] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), multi-replica-topic-0 -> List(0, 2, 1), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), multi-replica-topic-3 -> List(0, 1, 2), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-replica-topic-6 -> List(0, 2, 1), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-06 20:55:16,568] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 20:55:16,574] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 20:55:16,574] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:55:16,574] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 20:55:16,574] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 20:55:16,574] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:00:16,579] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 21:00:16,580] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 21:00:16,582] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), multi-replica-topic-0 -> List(0, 2, 1), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), multi-replica-topic-3 -> List(0, 1, 2), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-replica-topic-6 -> List(0, 2, 1), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-06 21:00:16,582] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 21:00:16,582] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 21:00:16,583] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:00:16,583] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:00:16,583] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:00:16,583] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:05:16,587] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 21:05:16,587] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 21:05:16,589] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), multi-replica-topic-0 -> List(0, 2, 1), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), multi-replica-topic-3 -> List(0, 1, 2), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-replica-topic-6 -> List(0, 2, 1), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-06 21:05:16,589] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 21:05:16,590] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 21:05:16,590] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:05:16,590] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:05:16,590] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:05:16,590] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:10:16,600] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 21:10:16,600] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 21:10:16,601] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), multi-replica-topic-0 -> List(0, 2, 1), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), multi-replica-topic-3 -> List(0, 1, 2), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-replica-topic-6 -> List(0, 2, 1), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-06 21:10:16,601] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 21:10:16,602] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 21:10:16,602] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:10:16,602] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:10:16,602] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:10:16,602] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:15:16,613] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 21:15:16,615] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 21:15:16,619] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), multi-replica-topic-0 -> List(0, 2, 1), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), multi-replica-topic-3 -> List(0, 1, 2), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-replica-topic-6 -> List(0, 2, 1), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-06 21:15:16,619] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 21:15:16,620] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 21:15:16,620] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:15:16,620] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:15:16,620] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:15:16,620] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:20:16,624] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 21:20:16,624] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 21:20:16,627] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), multi-replica-topic-0 -> List(0, 2, 1), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), multi-replica-topic-3 -> List(0, 1, 2), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-replica-topic-6 -> List(0, 2, 1), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-06 21:20:16,627] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 21:20:16,628] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 21:20:16,628] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:20:16,628] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:20:16,628] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:20:16,628] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:25:16,638] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 21:25:16,638] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 21:25:16,639] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), multi-replica-topic-0 -> List(0, 2, 1), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), multi-replica-topic-3 -> List(0, 1, 2), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-replica-topic-6 -> List(0, 2, 1), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-06 21:25:16,639] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 21:25:16,640] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 21:25:16,640] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:25:16,640] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:25:16,640] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:25:16,640] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:26:26,176] INFO [Controller id=1] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-09-06 21:26:26,177] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-06 21:26:26,183] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-09-06 21:26:26,184] INFO [Controller id=1] New broker startup callback for 0 (kafka.controller.KafkaController)
[2024-09-06 21:26:26,192] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 21:26:26,192] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 21:26:26,195] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 21:26:26,220] DEBUG [Controller id=1] Register BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2024-09-06 21:26:26,221] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 21:26:26,221] INFO [Controller id=1] Updated broker epochs cache: HashMap(0 -> 875, 1 -> 704, 2 -> 702) (kafka.controller.KafkaController)
[2024-09-06 21:26:26,233] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-06 21:26:26,305] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 21:26:26,414] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 21:26:26,670] DEBUG [Controller id=1] Updating ISRs for partitions: Set(multi-replica-topic-5). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,674] DEBUG [Controller id=1] ISR for partition multi-replica-topic-5 updated to LeaderAndIsr(leader=1, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,684] DEBUG [Controller id=1] Updating ISRs for partitions: Set(multi-replica-topic-6). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,686] DEBUG [Controller id=1] ISR for partition multi-replica-topic-6 updated to LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,689] DEBUG [Controller id=1] Updating ISRs for partitions: Set(multi-replica-topic-2, multi-replica-topic-3, multi-broker-topic-topic-1, multi-broker-topic-topic-4, multi-broker-topic-topic-5). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,694] DEBUG [Controller id=1] ISR for partition multi-replica-topic-2 updated to LeaderAndIsr(leader=1, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,694] DEBUG [Controller id=1] ISR for partition multi-broker-topic-topic-5 updated to LeaderAndIsr(leader=1, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,694] DEBUG [Controller id=1] ISR for partition multi-broker-topic-topic-1 updated to LeaderAndIsr(leader=1, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,694] DEBUG [Controller id=1] ISR for partition multi-replica-topic-3 updated to LeaderAndIsr(leader=1, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,694] DEBUG [Controller id=1] ISR for partition multi-broker-topic-topic-4 updated to LeaderAndIsr(leader=1, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,700] DEBUG [Controller id=1] Updating ISRs for partitions: Set(multi-replica-topic-4, multi-broker-topic-topic-0, multi-replica-topic-0, multi-broker-topic-topic-2, multi-replica-topic-1, multi-broker-topic-topic-3, multi-broker-topic-topic-6). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,706] DEBUG [Controller id=1] ISR for partition multi-replica-topic-4 updated to LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,706] DEBUG [Controller id=1] ISR for partition multi-broker-topic-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,706] DEBUG [Controller id=1] ISR for partition multi-replica-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,706] DEBUG [Controller id=1] ISR for partition multi-broker-topic-topic-3 updated to LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,706] DEBUG [Controller id=1] ISR for partition multi-broker-topic-topic-6 updated to LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,706] DEBUG [Controller id=1] ISR for partition multi-broker-topic-topic-2 updated to LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:26:26,706] DEBUG [Controller id=1] ISR for partition multi-replica-topic-1 updated to LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-06 21:30:16,650] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 21:30:16,650] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 21:30:16,677] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(multi-replica-topic-0 -> List(0, 2, 1), multi-replica-topic-3 -> List(0, 1, 2), multi-replica-topic-6 -> List(0, 2, 1), multi-broker-topic-topic-5 -> List(0, 1, 2), multi-broker-topic-topic-2 -> List(0, 2, 1)) (kafka.controller.KafkaController)
[2024-09-06 21:30:16,677] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.18518518518518517 (kafka.controller.KafkaController)
[2024-09-06 21:30:16,677] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions multi-replica-topic-0,multi-replica-topic-3,multi-replica-topic-6,multi-broker-topic-topic-5,multi-broker-topic-topic-2 triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 21:30:16,691] INFO [Controller id=1] Partition multi-replica-topic-0 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-06 21:30:16,691] INFO [Controller id=1] Partition multi-replica-topic-3 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-06 21:30:16,692] INFO [Controller id=1] Partition multi-replica-topic-6 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-06 21:30:16,692] INFO [Controller id=1] Partition multi-broker-topic-topic-5 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-06 21:30:16,692] INFO [Controller id=1] Partition multi-broker-topic-topic-2 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-06 21:30:16,692] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:30:16,692] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:30:16,692] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:30:16,692] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:35:16,696] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 21:35:16,696] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 21:35:16,697] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:35:16,697] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:35:16,697] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:35:16,697] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:35:16,698] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:35:16,698] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:40:16,702] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 21:40:16,702] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 21:40:16,705] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:40:16,705] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:40:16,705] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:40:16,705] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:40:16,706] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:40:16,706] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:45:16,714] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 21:45:16,714] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 21:45:16,717] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:45:16,717] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:45:16,717] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:45:16,717] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:45:16,717] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:45:16,717] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:50:16,730] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 21:50:16,730] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 21:50:16,732] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:50:16,732] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:50:16,732] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:50:16,732] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:50:16,732] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:50:16,732] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:55:16,743] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 21:55:16,744] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 21:55:16,746] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:55:16,746] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:55:16,746] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:55:16,746] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 21:55:16,746] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 21:55:16,746] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 22:00:16,749] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 22:00:16,755] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 22:00:16,758] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 22:00:16,758] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 22:00:16,758] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 22:00:16,758] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 22:00:16,758] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 22:00:16,759] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 18:37:28,720] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 18:37:28,744] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 8 and epoch zk version is now 8 (kafka.controller.KafkaController)
[2024-09-09 18:37:28,746] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2024-09-09 18:37:28,749] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-09 18:37:28,752] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-09 18:37:28,754] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2024-09-09 18:37:28,773] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 969) (kafka.controller.KafkaController)
[2024-09-09 18:37:28,795] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2024-09-09 18:37:28,839] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-09 18:37:28,852] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-09-09 18:37:28,853] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2024-09-09 18:37:28,853] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-09 18:37:28,853] INFO [Controller id=2] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, multi-broker-topic-topic, multi-replica-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2024-09-09 18:37:28,853] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-09 18:37:28,860] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-09 18:37:28,860] INFO [Controller id=2] List of topics ineligible for deletion: multi-broker-topic,test-topic,multi-broker-topic-topic,__consumer_offsets,multi-replica-topic (kafka.controller.KafkaController)
[2024-09-09 18:37:28,860] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-09 18:37:28,861] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, multi-broker-topic-topic, __consumer_offsets, multi-replica-topic) (kafka.controller.TopicDeletionManager)
[2024-09-09 18:37:28,863] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-09 18:37:28,875] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-09 18:37:28,885] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-09 18:37:28,891] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 18:37:28,913] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-09 18:37:28,996] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-09 18:37:28,997] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-09 18:37:29,000] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-09 18:37:29,007] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-09 18:37:29,041] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, multi-broker-topic-topic-1 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, multi-replica-topic-5 -> OnlinePartition, multi-broker-topic-5 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, multi-replica-topic-1 -> OnlinePartition, multi-broker-topic-topic-5 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, multi-broker-topic-topic-2 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, multi-replica-topic-4 -> OnlinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, multi-replica-topic-0 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, multi-broker-topic-topic-6 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, test-topic-4 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, multi-replica-topic-3 -> OnlinePartition, multi-broker-topic-topic-3 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, multi-broker-topic-topic-0 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, multi-replica-topic-6 -> OnlinePartition, multi-broker-topic-2 -> OnlinePartition, test-topic-3 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, multi-replica-topic-2 -> OnlinePartition, __consumer_offsets-39 -> OfflinePartition, multi-broker-topic-topic-4 -> OnlinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-09 18:37:29,041] INFO [Controller id=2] Ready to serve as the new controller with epoch 8 (kafka.controller.KafkaController)
[2024-09-09 18:37:29,044] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-09 18:37:29,044] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-09 18:37:29,044] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-09 18:37:29,045] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-09 18:37:29,045] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-09 18:37:29,053] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-09 18:37:34,059] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 18:37:34,059] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 18:37:34,063] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), multi-replica-topic-0 -> List(0, 2, 1), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), multi-replica-topic-3 -> List(0, 1, 2), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-replica-topic-6 -> List(0, 2, 1), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-09 18:37:34,064] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-09 18:37:34,065] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-09 18:37:34,066] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(multi-broker-topic-0 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), multi-broker-topic-3 -> List(1), __consumer_offsets-8 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), multi-replica-topic-2 -> List(1, 0, 2), __consumer_offsets-38 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), multi-replica-topic-5 -> List(1, 2, 0), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-09 18:37:34,066] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-09 18:37:34,066] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-09 18:37:34,066] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 18:37:34,066] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 18:39:27,609] INFO [Controller id=2] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,2 (kafka.controller.KafkaController)
[2024-09-09 18:39:27,609] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-09 18:39:27,616] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-09-09 18:39:27,617] INFO [Controller id=2] New broker startup callback for 0 (kafka.controller.KafkaController)
[2024-09-09 18:39:27,623] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 18:39:27,643] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 18:39:27,662] DEBUG [Controller id=0] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-09 18:39:27,663] DEBUG [Controller id=2] Register BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2024-09-09 18:39:27,666] INFO [Controller id=2] Updated broker epochs cache: HashMap(0 -> 1074, 2 -> 969) (kafka.controller.KafkaController)
[2024-09-09 18:39:27,740] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 18:39:27,848] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-09 18:39:28,074] DEBUG [Controller id=2] Updating ISRs for partitions: Set(multi-broker-topic-topic-0). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,078] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,088] DEBUG [Controller id=2] Updating ISRs for partitions: Set(multi-broker-topic-topic-1, multi-broker-topic-topic-2, multi-replica-topic-6, multi-replica-topic-4, multi-replica-topic-5, multi-replica-topic-2, multi-replica-topic-3, multi-replica-topic-0, multi-replica-topic-1, multi-broker-topic-topic-3, multi-broker-topic-topic-4, multi-broker-topic-topic-5, multi-broker-topic-topic-6). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,095] DEBUG [Controller id=2] ISR for partition multi-replica-topic-4 updated to LeaderAndIsr(leader=2, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,095] DEBUG [Controller id=2] ISR for partition multi-replica-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,095] DEBUG [Controller id=2] ISR for partition multi-replica-topic-6 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,095] DEBUG [Controller id=2] ISR for partition multi-replica-topic-2 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,095] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-3 updated to LeaderAndIsr(leader=2, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,095] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-6 updated to LeaderAndIsr(leader=2, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,095] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-2 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,095] DEBUG [Controller id=2] ISR for partition multi-replica-topic-3 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,095] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-4 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,095] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-5 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,095] DEBUG [Controller id=2] ISR for partition multi-replica-topic-5 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,095] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-1 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-09-09 18:39:28,095] DEBUG [Controller id=2] ISR for partition multi-replica-topic-1 updated to LeaderAndIsr(leader=2, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2024-09-09 18:39:37,772] INFO [Controller id=2] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-09-09 18:39:37,773] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-09 18:39:37,781] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-09-09 18:39:37,781] INFO [Controller id=2] New broker startup callback for 1 (kafka.controller.KafkaController)
[2024-09-09 18:39:37,787] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 18:39:37,807] DEBUG [Controller id=2] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-09-09 18:39:37,809] INFO [Controller id=2] Updated broker epochs cache: HashMap(0 -> 1074, 1 -> 1127, 2 -> 969) (kafka.controller.KafkaController)
[2024-09-09 18:39:37,821] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 18:39:37,835] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-09 18:39:37,895] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 18:39:38,002] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-09 18:39:38,231] DEBUG [Controller id=2] Updating ISRs for partitions: Set(multi-broker-topic-topic-0). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,235] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,239] DEBUG [Controller id=2] Updating ISRs for partitions: Set(multi-broker-topic-topic-1, multi-broker-topic-topic-2, multi-replica-topic-6, multi-replica-topic-4, multi-replica-topic-5, multi-replica-topic-2, multi-replica-topic-3, multi-replica-topic-0, multi-replica-topic-1, multi-broker-topic-topic-3, multi-broker-topic-topic-4, multi-broker-topic-topic-5, multi-broker-topic-topic-6). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,253] DEBUG [Controller id=2] ISR for partition multi-replica-topic-4 updated to LeaderAndIsr(leader=2, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,253] DEBUG [Controller id=2] ISR for partition multi-replica-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,253] DEBUG [Controller id=2] ISR for partition multi-replica-topic-6 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,253] DEBUG [Controller id=2] ISR for partition multi-replica-topic-2 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,253] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-3 updated to LeaderAndIsr(leader=2, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,253] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-6 updated to LeaderAndIsr(leader=2, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,253] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-2 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,253] DEBUG [Controller id=2] ISR for partition multi-replica-topic-3 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,253] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-4 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,253] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-5 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=8). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,253] DEBUG [Controller id=2] ISR for partition multi-replica-topic-5 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,253] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-1 updated to LeaderAndIsr(leader=2, leaderEpoch=4, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=7). (kafka.controller.KafkaController)
[2024-09-09 18:39:38,254] DEBUG [Controller id=2] ISR for partition multi-replica-topic-1 updated to LeaderAndIsr(leader=2, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-09-09 18:41:26,386] INFO [Controller id=2] New topics: [HashSet(test-topic-no-rack)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test-topic-no-rack,Some(Y8J1uw98QaStVB_VwOiL5g),Map(test-topic-no-rack-0 -> ReplicaAssignment(replicas=0,2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-09 18:41:26,387] INFO [Controller id=2] New partition creation callback for test-topic-no-rack-0 (kafka.controller.KafkaController)
[2024-09-09 18:42:34,074] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 18:42:34,074] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 18:42:34,083] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(multi-replica-topic-0 -> List(0, 2, 1), multi-replica-topic-3 -> List(0, 1, 2), multi-replica-topic-6 -> List(0, 2, 1), multi-broker-topic-topic-5 -> List(0, 1, 2), multi-broker-topic-topic-2 -> List(0, 2, 1)) (kafka.controller.KafkaController)
[2024-09-09 18:42:34,083] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.17857142857142858 (kafka.controller.KafkaController)
[2024-09-09 18:42:34,083] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions multi-replica-topic-0,multi-replica-topic-3,multi-replica-topic-6,multi-broker-topic-topic-5,multi-broker-topic-topic-2 triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-09 18:42:34,094] INFO [Controller id=2] Partition multi-replica-topic-0 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-09 18:42:34,094] INFO [Controller id=2] Partition multi-replica-topic-3 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-09 18:42:34,094] INFO [Controller id=2] Partition multi-replica-topic-6 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-09 18:42:34,094] INFO [Controller id=2] Partition multi-broker-topic-topic-5 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-09 18:42:34,094] INFO [Controller id=2] Partition multi-broker-topic-topic-2 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-09 18:42:34,094] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(multi-broker-topic-topic-4 -> List(1, 2, 0), multi-replica-topic-2 -> List(1, 0, 2), multi-replica-topic-5 -> List(1, 2, 0), multi-broker-topic-topic-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-09-09 18:42:34,094] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.17391304347826086 (kafka.controller.KafkaController)
[2024-09-09 18:42:34,094] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions multi-broker-topic-topic-4,multi-replica-topic-2,multi-replica-topic-5,multi-broker-topic-topic-1 triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-09 18:42:34,102] INFO [Controller id=2] Partition multi-broker-topic-topic-4 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-09-09 18:42:34,102] INFO [Controller id=2] Partition multi-replica-topic-2 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-09-09 18:42:34,102] INFO [Controller id=2] Partition multi-replica-topic-5 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-09-09 18:42:34,102] INFO [Controller id=2] Partition multi-broker-topic-topic-1 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-09-09 18:42:34,102] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 18:42:34,102] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 18:47:34,111] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 18:47:34,111] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 18:47:34,112] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 18:47:34,112] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 18:47:34,112] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 18:47:34,112] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 18:47:34,112] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 18:47:34,112] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 18:52:34,116] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 18:52:34,116] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 18:52:34,119] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 18:52:34,119] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 18:52:34,119] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 18:52:34,119] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 18:52:34,119] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 18:52:34,119] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 18:57:34,124] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 18:57:34,124] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 18:57:34,125] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 18:57:34,125] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 18:57:34,125] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 18:57:34,125] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 18:57:34,125] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 18:57:34,125] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:02:34,136] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 19:02:34,137] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 19:02:34,138] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:02:34,138] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:02:34,138] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:02:34,138] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:02:34,138] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:02:34,138] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:06:20,321] INFO [Controller id=2] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-09-09 19:06:20,321] DEBUG [Controller id=2] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-09-09 19:06:20,322] DEBUG [Controller id=2] Live brokers: 1,2 (kafka.controller.KafkaController)
[2024-09-09 19:06:20,350] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-09 19:06:20,350] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-09 19:06:20,350] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-09 19:06:20,362] TRACE [Controller id=2] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-1 -> (Leader:1,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),multi-broker-topic-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),test-topic-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-replica-topic-5 -> (Leader:1,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:9,ControllerEpoch:8),multi-broker-topic-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:8),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),multi-replica-topic-1 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:7,ControllerEpoch:8),multi-broker-topic-topic-5 -> (Leader:1,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),multi-broker-topic-topic-2 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),multi-replica-topic-4 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:7,ControllerEpoch:8),multi-broker-topic-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),test-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-0 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-6 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:7,ControllerEpoch:8),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),test-topic-no-rack-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:8),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),test-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),multi-broker-topic-3 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),test-topic-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-3 -> (Leader:1,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-topic-3 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:7,ControllerEpoch:8),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-0 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:7,ControllerEpoch:8),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-6 -> (Leader:2,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),test-topic-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-replica-topic-2 -> (Leader:1,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-topic-4 -> (Leader:1,ISR:2,1,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) (kafka.controller.KafkaController)
[2024-09-09 19:06:20,413] WARN [RequestSendThread controllerId=2] Controller 2 epoch 8 fails to send request (type=StopReplicaRequest, controllerId=2, controllerEpoch=8, brokerEpoch=1074, deletePartitions=false, topicStates=StopReplicaTopicState(topicName='multi-broker-topic-topic', partitionStates=[StopReplicaPartitionState(partitionIndex=0, leaderEpoch=3, deletePartition=false), StopReplicaPartitionState(partitionIndex=1, leaderEpoch=5, deletePartition=false), StopReplicaPartitionState(partitionIndex=3, leaderEpoch=3, deletePartition=false), StopReplicaPartitionState(partitionIndex=4, leaderEpoch=5, deletePartition=false), StopReplicaPartitionState(partitionIndex=6, leaderEpoch=3, deletePartition=false)]),StopReplicaTopicState(topicName='multi-replica-topic', partitionStates=[StopReplicaPartitionState(partitionIndex=4, leaderEpoch=3, deletePartition=false), StopReplicaPartitionState(partitionIndex=5, leaderEpoch=5, deletePartition=false), StopReplicaPartitionState(partitionIndex=2, leaderEpoch=5, deletePartition=false), StopReplicaPartitionState(partitionIndex=1, leaderEpoch=3, deletePartition=false)])) to broker localhost:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 0 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:259)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:20,545] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:20,660] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:20,769] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:20,880] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:21,001] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:21,121] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:21,229] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:21,335] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:21,442] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:21,549] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:21,560] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 19:06:21,562] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 19:06:21,562] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 19:06:21,563] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-09-09 19:06:21,563] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-09-09 19:06:21,564] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-09 19:06:21,564] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-09 19:06:21,566] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-09-09 19:06:21,577] INFO [Controller id=2] Newly added brokers: , deleted brokers: 0, bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2024-09-09 19:06:21,577] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2024-09-09 19:06:21,577] WARN [RequestSendThread controllerId=2] Controller 2 epoch 8 fails to send request (type=StopReplicaRequest, controllerId=2, controllerEpoch=8, brokerEpoch=1074, deletePartitions=false, topicStates=StopReplicaTopicState(topicName='multi-broker-topic-topic', partitionStates=[StopReplicaPartitionState(partitionIndex=0, leaderEpoch=3, deletePartition=false), StopReplicaPartitionState(partitionIndex=1, leaderEpoch=5, deletePartition=false), StopReplicaPartitionState(partitionIndex=3, leaderEpoch=3, deletePartition=false), StopReplicaPartitionState(partitionIndex=4, leaderEpoch=5, deletePartition=false), StopReplicaPartitionState(partitionIndex=6, leaderEpoch=3, deletePartition=false)]),StopReplicaTopicState(topicName='multi-replica-topic', partitionStates=[StopReplicaPartitionState(partitionIndex=4, leaderEpoch=3, deletePartition=false), StopReplicaPartitionState(partitionIndex=5, leaderEpoch=5, deletePartition=false), StopReplicaPartitionState(partitionIndex=2, leaderEpoch=5, deletePartition=false), StopReplicaPartitionState(partitionIndex=1, leaderEpoch=3, deletePartition=false)])) to broker localhost:9092 (id: 0 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:276)
	at org.apache.kafka.server.util.ShutdownableThread.pause(ShutdownableThread.java:121)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:240)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:21,578] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2024-09-09 19:06:21,578] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2024-09-09 19:06:21,578] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-09 19:06:21,581] INFO [Controller id=2] Broker failure callback for 0 (kafka.controller.KafkaController)
[2024-09-09 19:06:21,582] INFO [Controller id=2] Removed 0 from list of shutting down brokers. (kafka.controller.KafkaController)
[2024-09-09 19:06:21,622] DEBUG [Controller id=2] Unregister BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2024-09-09 19:06:21,623] INFO [Controller id=2] Updated broker epochs cache: HashMap(1 -> 1127, 2 -> 969) (kafka.controller.KafkaController)
[2024-09-09 19:06:30,124] INFO [Controller id=2] Shutting down broker 1 (kafka.controller.KafkaController)
[2024-09-09 19:06:30,125] DEBUG [Controller id=2] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2024-09-09 19:06:30,125] DEBUG [Controller id=2] Live brokers: 2 (kafka.controller.KafkaController)
[2024-09-09 19:06:30,143] TRACE [Controller id=2] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-9 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-42 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-21 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),multi-broker-topic-1 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),test-topic-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-30 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),multi-replica-topic-5 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-5 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),multi-replica-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),multi-broker-topic-topic-5 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-45 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-12 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),multi-broker-topic-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-24 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),multi-replica-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),multi-broker-topic-4 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),test-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-6 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-33 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),test-topic-no-rack-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:8),__consumer_offsets-15 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-48 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),test-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),multi-broker-topic-3 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),test-topic-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),multi-broker-topic-topic-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-3 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-36 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-18 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-6 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),multi-broker-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),test-topic-3 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-27 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),multi-replica-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-39 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),multi-broker-topic-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-6 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8) (kafka.controller.KafkaController)
[2024-09-09 19:06:30,156] WARN [RequestSendThread controllerId=2] Controller 2 epoch 8 fails to send request (type=StopReplicaRequest, controllerId=2, controllerEpoch=8, brokerEpoch=1127, deletePartitions=false, topicStates=StopReplicaTopicState(topicName='multi-broker-topic-topic', partitionStates=[StopReplicaPartitionState(partitionIndex=0, leaderEpoch=4, deletePartition=false), StopReplicaPartitionState(partitionIndex=2, leaderEpoch=7, deletePartition=false), StopReplicaPartitionState(partitionIndex=3, leaderEpoch=4, deletePartition=false), StopReplicaPartitionState(partitionIndex=6, leaderEpoch=4, deletePartition=false)]),StopReplicaTopicState(topicName='multi-replica-topic', partitionStates=[StopReplicaPartitionState(partitionIndex=6, leaderEpoch=7, deletePartition=false), StopReplicaPartitionState(partitionIndex=4, leaderEpoch=4, deletePartition=false), StopReplicaPartitionState(partitionIndex=0, leaderEpoch=7, deletePartition=false), StopReplicaPartitionState(partitionIndex=1, leaderEpoch=4, deletePartition=false)])) to broker localhost:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 1 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:100)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:259)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:30,272] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:30,380] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:30,488] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:30,595] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:30,703] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:30,813] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:30,921] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:31,019] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 19:06:31,021] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 19:06:31,021] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 19:06:31,022] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2024-09-09 19:06:31,022] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-09-09 19:06:31,023] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-09 19:06:31,023] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-09 19:06:31,024] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2024-09-09 19:06:31,031] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:31,032] INFO [Controller id=2] Newly added brokers: , deleted brokers: 1, bounced brokers: , all live brokers: 2 (kafka.controller.KafkaController)
[2024-09-09 19:06:31,032] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2024-09-09 19:06:31,032] WARN [RequestSendThread controllerId=2] Controller 2 epoch 8 fails to send request (type=StopReplicaRequest, controllerId=2, controllerEpoch=8, brokerEpoch=1127, deletePartitions=false, topicStates=StopReplicaTopicState(topicName='multi-broker-topic-topic', partitionStates=[StopReplicaPartitionState(partitionIndex=0, leaderEpoch=4, deletePartition=false), StopReplicaPartitionState(partitionIndex=2, leaderEpoch=7, deletePartition=false), StopReplicaPartitionState(partitionIndex=3, leaderEpoch=4, deletePartition=false), StopReplicaPartitionState(partitionIndex=6, leaderEpoch=4, deletePartition=false)]),StopReplicaTopicState(topicName='multi-replica-topic', partitionStates=[StopReplicaPartitionState(partitionIndex=6, leaderEpoch=7, deletePartition=false), StopReplicaPartitionState(partitionIndex=4, leaderEpoch=4, deletePartition=false), StopReplicaPartitionState(partitionIndex=0, leaderEpoch=7, deletePartition=false), StopReplicaPartitionState(partitionIndex=1, leaderEpoch=4, deletePartition=false)])) to broker localhost:9093 (id: 1 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.lang.InterruptedException
	at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireSharedNanos(AbstractQueuedSynchronizer.java:1081)
	at java.base/java.util.concurrent.CountDownLatch.await(CountDownLatch.java:276)
	at org.apache.kafka.server.util.ShutdownableThread.pause(ShutdownableThread.java:121)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:240)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:06:31,032] TRACE [RequestSendThread controllerId=2] shutdownInitiated latch count reached zero. Shutdown called. (kafka.controller.RequestSendThread)
[2024-09-09 19:06:31,032] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2024-09-09 19:06:31,032] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-09 19:06:31,033] INFO [Controller id=2] Broker failure callback for 1 (kafka.controller.KafkaController)
[2024-09-09 19:06:31,033] INFO [Controller id=2] Removed 1 from list of shutting down brokers. (kafka.controller.KafkaController)
[2024-09-09 19:06:31,074] DEBUG [Controller id=2] Unregister BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-09-09 19:06:31,074] INFO [Controller id=2] Updated broker epochs cache: HashMap(2 -> 969) (kafka.controller.KafkaController)
[2024-09-09 19:06:43,145] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2024-09-09 19:06:43,146] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2024-09-09 19:06:43,146] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2024-09-09 19:06:43,152] TRACE [Controller id=2] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-9 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-42 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-21 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-17 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-1 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),test-topic-2 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-30 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),multi-replica-topic-5 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-5 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-26 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-replica-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),multi-broker-topic-topic-5 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-5 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-38 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-45 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-12 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-41 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-24 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-20 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-0 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-29 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-replica-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),multi-broker-topic-4 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),test-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-8 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-6 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-33 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),test-topic-no-rack-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:8),__consumer_offsets-15 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-48 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-11 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-44 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-23 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),test-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-32 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-3 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),test-topic-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),multi-broker-topic-topic-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-3 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-36 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-47 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-14 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-18 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-6 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),multi-broker-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),test-topic-3 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-27 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),multi-replica-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-39 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),multi-broker-topic-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-6 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-35 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-2 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) (kafka.controller.KafkaController)
[2024-09-09 19:06:48,168] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2024-09-09 19:06:48,168] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2024-09-09 19:06:48,169] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2024-09-09 19:06:48,176] TRACE [Controller id=2] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-9 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-42 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-21 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-17 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-1 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),test-topic-2 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-30 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),multi-replica-topic-5 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-5 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-26 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-replica-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),multi-broker-topic-topic-5 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-5 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-38 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-45 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-12 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-41 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-24 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-20 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-0 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-29 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-replica-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),multi-broker-topic-4 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),test-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-8 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-6 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-33 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),test-topic-no-rack-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:8),__consumer_offsets-15 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-48 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-11 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-44 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-23 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),test-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-32 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-3 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),test-topic-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),multi-broker-topic-topic-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-3 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-36 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-47 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-14 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-18 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-6 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),multi-broker-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),test-topic-3 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-27 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),multi-replica-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-39 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),multi-broker-topic-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-6 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-35 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-2 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) (kafka.controller.KafkaController)
[2024-09-09 19:06:53,191] INFO [Controller id=2] Shutting down broker 2 (kafka.controller.KafkaController)
[2024-09-09 19:06:53,191] DEBUG [Controller id=2] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2024-09-09 19:06:53,191] DEBUG [Controller id=2] Live brokers:  (kafka.controller.KafkaController)
[2024-09-09 19:06:53,201] TRACE [Controller id=2] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-9 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-42 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-21 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-17 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-1 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),test-topic-2 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-30 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),multi-replica-topic-5 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-5 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:9,ControllerEpoch:8),__consumer_offsets-26 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-replica-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),multi-broker-topic-topic-5 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-5 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-38 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-45 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-12 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-41 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-24 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-20 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-0 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-29 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-replica-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),multi-broker-topic-4 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),test-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-8 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-6 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-33 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),test-topic-no-rack-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:8),__consumer_offsets-15 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-48 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-11 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-44 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-23 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),test-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-32 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),multi-broker-topic-3 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),test-topic-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),multi-broker-topic-topic-3 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-3 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-36 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-47 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-14 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-broker-topic-topic-0 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:8,ControllerEpoch:8),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),__consumer_offsets-18 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),multi-replica-topic-6 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:8),multi-broker-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:6),test-topic-3 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-27 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),multi-replica-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-39 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),multi-broker-topic-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-6 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:11,ControllerEpoch:8),__consumer_offsets-35 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8),__consumer_offsets-2 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) (kafka.controller.KafkaController)
[2024-09-09 19:06:54,006] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 19:06:54,006] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 19:06:54,006] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 19:06:54,007] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2024-09-09 19:06:54,007] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2024-09-09 19:06:54,007] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-09 19:06:54,008] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-09 19:06:54,008] INFO [RequestSendThread controllerId=2] Shutting down (kafka.controller.RequestSendThread)
[2024-09-09 19:06:54,008] INFO [RequestSendThread controllerId=2] Stopped (kafka.controller.RequestSendThread)
[2024-09-09 19:06:54,008] INFO [RequestSendThread controllerId=2] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-09 19:06:54,009] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2024-09-09 19:07:06,703] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 19:07:06,722] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 9 and epoch zk version is now 9 (kafka.controller.KafkaController)
[2024-09-09 19:07:06,723] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2024-09-09 19:07:06,726] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-09 19:07:06,728] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-09 19:07:06,729] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2024-09-09 19:07:06,743] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 1268) (kafka.controller.KafkaController)
[2024-09-09 19:07:06,756] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2024-09-09 19:07:06,783] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-09 19:07:06,798] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-09-09 19:07:06,800] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2024-09-09 19:07:06,800] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-09 19:07:06,800] INFO [Controller id=2] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, multi-broker-topic-topic, multi-replica-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-09 19:07:06,800] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-09 19:07:06,806] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-09 19:07:06,806] INFO [Controller id=2] List of topics ineligible for deletion: multi-broker-topic,test-topic,multi-broker-topic-topic,multi-replica-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-09 19:07:06,807] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-09 19:07:06,807] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, multi-broker-topic-topic, multi-replica-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-09 19:07:06,808] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-09 19:07:06,816] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-09 19:07:06,821] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-09 19:07:06,827] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9094 (id: 2 rack: 0) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: 0) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:07:06,842] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-09 19:07:06,900] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-09 19:07:06,900] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-09 19:07:06,904] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-09 19:07:06,931] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9094 (id: 2 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-09 19:07:06,935] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, multi-broker-topic-topic-1 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, multi-replica-topic-5 -> OnlinePartition, multi-broker-topic-5 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, multi-replica-topic-1 -> OnlinePartition, multi-broker-topic-topic-5 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, multi-broker-topic-topic-2 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, multi-replica-topic-4 -> OnlinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, multi-replica-topic-0 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, multi-broker-topic-topic-6 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, test-topic-no-rack-0 -> OnlinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, test-topic-4 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, multi-replica-topic-3 -> OnlinePartition, multi-broker-topic-topic-3 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, multi-broker-topic-topic-0 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, multi-replica-topic-6 -> OnlinePartition, multi-broker-topic-2 -> OnlinePartition, test-topic-3 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, multi-replica-topic-2 -> OnlinePartition, __consumer_offsets-39 -> OfflinePartition, multi-broker-topic-topic-4 -> OnlinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-09 19:07:06,935] INFO [Controller id=2] Ready to serve as the new controller with epoch 9 (kafka.controller.KafkaController)
[2024-09-09 19:07:06,938] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-09 19:07:06,938] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-09 19:07:06,938] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-09 19:07:06,938] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-09 19:07:06,940] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-09 19:07:06,945] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-09 19:07:11,951] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 19:07:11,951] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 19:07:11,960] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), multi-replica-topic-0 -> List(0, 2, 1), __consumer_offsets-36 -> List(0), __consumer_offsets-42 -> List(0), multi-replica-topic-3 -> List(0, 1, 2), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-replica-topic-6 -> List(0, 2, 1), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), test-topic-no-rack-0 -> List(0, 2), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-09 19:07:11,962] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-09 19:07:11,965] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-09 19:07:11,965] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(multi-broker-topic-0 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), multi-broker-topic-3 -> List(1), __consumer_offsets-8 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), multi-replica-topic-2 -> List(1, 0, 2), __consumer_offsets-38 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), multi-replica-topic-5 -> List(1, 2, 0), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-09 19:07:11,965] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-09 19:07:11,966] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-09 19:07:11,966] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:07:11,967] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:07:16,219] INFO [Controller id=2] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,2 (kafka.controller.KafkaController)
[2024-09-09 19:07:16,220] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-09 19:07:16,226] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-09-09 19:07:16,227] INFO [Controller id=2] New broker startup callback for 0 (kafka.controller.KafkaController)
[2024-09-09 19:07:16,234] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: 0) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: 0) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:07:16,266] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 19:07:16,269] DEBUG [Controller id=2] Register BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2024-09-09 19:07:16,271] INFO [Controller id=2] Updated broker epochs cache: HashMap(0 -> 1327, 2 -> 1268) (kafka.controller.KafkaController)
[2024-09-09 19:07:16,280] DEBUG [Controller id=0] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-09 19:07:16,350] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: 0) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: 0) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:07:16,455] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9092 (id: 0 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-09 19:07:16,687] DEBUG [Controller id=2] Updating ISRs for partitions: Set(multi-broker-topic-topic-0). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,690] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=9). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,699] DEBUG [Controller id=2] Updating ISRs for partitions: Set(multi-broker-topic-topic-1, multi-broker-topic-topic-2, multi-replica-topic-6, multi-replica-topic-4, multi-replica-topic-5, multi-replica-topic-2, multi-replica-topic-3, multi-replica-topic-0, multi-replica-topic-1, multi-broker-topic-topic-3, multi-broker-topic-topic-4, multi-broker-topic-topic-5, multi-broker-topic-topic-6, test-topic-no-rack-0). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,706] DEBUG [Controller id=2] ISR for partition multi-replica-topic-4 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=9). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,707] DEBUG [Controller id=2] ISR for partition multi-replica-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=12). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,707] DEBUG [Controller id=2] ISR for partition multi-replica-topic-6 updated to LeaderAndIsr(leader=2, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=12). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,707] DEBUG [Controller id=2] ISR for partition multi-replica-topic-2 updated to LeaderAndIsr(leader=2, leaderEpoch=7, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=11). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,707] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-3 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=9). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,707] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-2 updated to LeaderAndIsr(leader=2, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=12). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,707] DEBUG [Controller id=2] ISR for partition multi-replica-topic-3 updated to LeaderAndIsr(leader=2, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=12). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,707] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-4 updated to LeaderAndIsr(leader=2, leaderEpoch=7, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=11). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,707] DEBUG [Controller id=2] ISR for partition test-topic-no-rack-0 updated to LeaderAndIsr(leader=2, leaderEpoch=1, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,707] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-6 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=9). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,707] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-5 updated to LeaderAndIsr(leader=2, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=12). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,707] DEBUG [Controller id=2] ISR for partition multi-replica-topic-5 updated to LeaderAndIsr(leader=2, leaderEpoch=7, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=11). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,707] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-1 updated to LeaderAndIsr(leader=2, leaderEpoch=7, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=11). (kafka.controller.KafkaController)
[2024-09-09 19:07:16,707] DEBUG [Controller id=2] ISR for partition multi-replica-topic-1 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=9). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,459] INFO [Controller id=2] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-09-09 19:07:21,459] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-09 19:07:21,465] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-09-09 19:07:21,465] INFO [Controller id=2] New broker startup callback for 1 (kafka.controller.KafkaController)
[2024-09-09 19:07:21,472] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: 1) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: 1) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:07:21,488] DEBUG [Controller id=2] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-09-09 19:07:21,489] INFO [Controller id=2] Updated broker epochs cache: HashMap(0 -> 1327, 1 -> 1380, 2 -> 1268) (kafka.controller.KafkaController)
[2024-09-09 19:07:21,507] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-09 19:07:21,517] DEBUG [Controller id=1] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-09 19:07:21,594] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9093 (id: 1 rack: 1) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: 1) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-09 19:07:21,700] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9093 (id: 1 rack: 1) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-09 19:07:21,880] DEBUG [Controller id=2] Updating ISRs for partitions: Set(multi-broker-topic-topic-0). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,884] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=10). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,892] DEBUG [Controller id=2] Updating ISRs for partitions: Set(multi-broker-topic-topic-1, multi-broker-topic-topic-2, multi-replica-topic-6, multi-replica-topic-4, multi-replica-topic-5, multi-replica-topic-2, multi-replica-topic-3, multi-replica-topic-0, multi-replica-topic-1, multi-broker-topic-topic-3, multi-broker-topic-topic-4, multi-broker-topic-topic-5, multi-broker-topic-topic-6). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,901] DEBUG [Controller id=2] ISR for partition multi-replica-topic-4 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=10). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,901] DEBUG [Controller id=2] ISR for partition multi-replica-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=13). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,901] DEBUG [Controller id=2] ISR for partition multi-replica-topic-6 updated to LeaderAndIsr(leader=2, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=13). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,901] DEBUG [Controller id=2] ISR for partition multi-replica-topic-2 updated to LeaderAndIsr(leader=2, leaderEpoch=7, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=12). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,901] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-3 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=10). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,901] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-6 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=10). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,901] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-2 updated to LeaderAndIsr(leader=2, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=13). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,901] DEBUG [Controller id=2] ISR for partition multi-replica-topic-3 updated to LeaderAndIsr(leader=2, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=13). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,901] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-4 updated to LeaderAndIsr(leader=2, leaderEpoch=7, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=12). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,901] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-5 updated to LeaderAndIsr(leader=2, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=13). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,901] DEBUG [Controller id=2] ISR for partition multi-replica-topic-5 updated to LeaderAndIsr(leader=2, leaderEpoch=7, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=12). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,901] DEBUG [Controller id=2] ISR for partition multi-broker-topic-topic-1 updated to LeaderAndIsr(leader=2, leaderEpoch=7, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=12). (kafka.controller.KafkaController)
[2024-09-09 19:07:21,901] DEBUG [Controller id=2] ISR for partition multi-replica-topic-1 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=0, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=10). (kafka.controller.KafkaController)
[2024-09-09 19:07:37,348] INFO [Controller id=2] New topics: [HashSet(rack-test-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(rack-test-topic,Some(TUuajIuJTTSUti_B_0vvzg),Map(rack-test-topic-0 -> ReplicaAssignment(replicas=2,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-09 19:07:37,349] INFO [Controller id=2] New partition creation callback for rack-test-topic-0 (kafka.controller.KafkaController)
[2024-09-09 19:12:11,979] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 19:12:11,979] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 19:12:11,997] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(multi-replica-topic-0 -> List(0, 2, 1), multi-replica-topic-3 -> List(0, 1, 2), multi-replica-topic-6 -> List(0, 2, 1), test-topic-no-rack-0 -> List(0, 2), multi-broker-topic-topic-5 -> List(0, 1, 2), multi-broker-topic-topic-2 -> List(0, 2, 1)) (kafka.controller.KafkaController)
[2024-09-09 19:12:11,997] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.21428571428571427 (kafka.controller.KafkaController)
[2024-09-09 19:12:11,997] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions multi-replica-topic-0,multi-replica-topic-3,multi-replica-topic-6,test-topic-no-rack-0,multi-broker-topic-topic-5,multi-broker-topic-topic-2 triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-09 19:12:12,021] INFO [Controller id=2] Partition multi-replica-topic-0 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-09 19:12:12,021] INFO [Controller id=2] Partition multi-replica-topic-3 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-09 19:12:12,021] INFO [Controller id=2] Partition multi-replica-topic-6 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-09 19:12:12,021] INFO [Controller id=2] Partition test-topic-no-rack-0 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-09 19:12:12,021] INFO [Controller id=2] Partition multi-broker-topic-topic-5 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-09 19:12:12,021] INFO [Controller id=2] Partition multi-broker-topic-topic-2 completed preferred replica leader election. New leader is 0 (kafka.controller.KafkaController)
[2024-09-09 19:12:12,021] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(multi-broker-topic-topic-4 -> List(1, 2, 0), multi-replica-topic-2 -> List(1, 0, 2), multi-replica-topic-5 -> List(1, 2, 0), multi-broker-topic-topic-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-09-09 19:12:12,021] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.17391304347826086 (kafka.controller.KafkaController)
[2024-09-09 19:12:12,022] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions multi-broker-topic-topic-4,multi-replica-topic-2,multi-replica-topic-5,multi-broker-topic-topic-1 triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-09 19:12:12,028] INFO [Controller id=2] Partition multi-broker-topic-topic-4 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-09-09 19:12:12,028] INFO [Controller id=2] Partition multi-replica-topic-2 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-09-09 19:12:12,028] INFO [Controller id=2] Partition multi-replica-topic-5 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-09-09 19:12:12,028] INFO [Controller id=2] Partition multi-broker-topic-topic-1 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-09-09 19:12:12,028] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:12:12,028] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:17:12,041] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 19:17:12,041] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 19:17:12,045] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:17:12,046] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:17:12,046] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:17:12,046] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:17:12,046] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:17:12,046] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:22:12,059] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 19:22:12,059] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 19:22:12,061] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:22:12,061] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:22:12,062] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:22:12,062] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:22:12,062] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:22:12,062] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:27:12,063] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 19:27:12,063] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 19:27:12,064] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:27:12,064] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:27:12,064] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:27:12,064] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:27:12,064] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:27:12,064] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:32:12,068] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 19:32:12,068] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 19:32:12,069] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:32:12,070] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:32:12,070] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:32:12,070] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:32:12,070] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:32:12,070] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:37:12,083] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 19:37:12,083] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 19:37:12,085] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:37:12,085] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:37:12,086] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:37:12,086] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:37:12,086] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:37:12,086] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:42:12,098] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 19:42:12,098] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 19:42:12,101] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:42:12,101] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:42:12,101] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:42:12,101] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:42:12,101] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:42:12,101] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:47:12,113] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 19:47:12,113] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 19:47:12,114] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:47:12,114] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:47:12,114] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:47:12,114] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:47:12,114] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:47:12,114] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:52:12,115] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 19:52:12,115] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 19:52:12,115] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:52:12,115] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:52:12,115] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:52:12,116] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:52:12,116] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:52:12,116] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:57:12,116] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 19:57:12,116] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 19:57:12,117] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:57:12,117] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:57:12,117] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:57:12,117] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 19:57:12,117] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 19:57:12,117] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:02:12,119] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 20:02:12,121] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 20:02:12,122] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:02:12,122] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:02:12,123] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:02:12,123] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:02:12,123] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:02:12,123] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:07:12,131] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 20:07:12,131] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 20:07:12,132] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:07:12,132] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:07:12,132] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:07:12,132] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:07:12,132] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:07:12,132] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:12:12,137] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 20:12:12,137] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 20:12:12,138] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:12:12,138] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:12:12,138] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:12:12,138] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:12:12,138] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:12:12,138] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:17:12,149] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 20:17:12,149] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 20:17:12,150] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:17:12,150] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:17:12,150] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:17:12,150] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:17:12,150] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:17:12,150] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:22:12,155] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 20:22:12,155] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 20:22:12,156] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:22:12,156] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:22:12,156] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:22:12,156] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:22:12,156] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:22:12,156] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:27:12,166] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 20:27:12,166] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 20:27:12,167] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:27:12,167] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:27:12,167] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:27:12,167] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:27:12,167] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:27:12,167] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:32:12,170] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-09 20:32:12,170] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-09 20:32:12,170] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:32:12,170] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:32:12,171] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:32:12,171] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:32:12,171] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-09 20:32:12,171] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-09 20:34:46,283] DEBUG [Controller id=2] Delete topics listener fired for topics multi-replica-topic to be deleted (kafka.controller.KafkaController)
[2024-09-09 20:34:46,283] INFO [Controller id=2] Starting topic deletion for topics multi-replica-topic (kafka.controller.KafkaController)
[2024-09-09 20:34:46,288] INFO [Topic Deletion Manager 2] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-09 20:34:46,290] INFO [Topic Deletion Manager 2] Deletion of topic multi-replica-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-09-09 20:34:46,303] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9094 (id: 2 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-09 20:34:46,303] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9092 (id: 0 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-09 20:34:46,303] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9093 (id: 1 rack: 1) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-09 20:34:46,408] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = HashMap(multi-replica-topic-4 -> KAFKA_STORAGE_ERROR, multi-replica-topic-0 -> KAFKA_STORAGE_ERROR, multi-replica-topic-3 -> KAFKA_STORAGE_ERROR, multi-replica-topic-6 -> KAFKA_STORAGE_ERROR, multi-replica-topic-2 -> KAFKA_STORAGE_ERROR, multi-replica-topic-5 -> KAFKA_STORAGE_ERROR, multi-replica-topic-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2024-09-09 20:34:46,411] DEBUG [Topic Deletion Manager 2] Deletion failed for replicas [Topic=multi-replica-topic,Partition=6,Replica=2],[Topic=multi-replica-topic,Partition=0,Replica=2],[Topic=multi-replica-topic,Partition=4,Replica=2],[Topic=multi-replica-topic,Partition=2,Replica=2],[Topic=multi-replica-topic,Partition=3,Replica=2],[Topic=multi-replica-topic,Partition=1,Replica=2],[Topic=multi-replica-topic,Partition=5,Replica=2]. Halting deletion for topics HashSet(multi-replica-topic) (kafka.controller.TopicDeletionManager)
[2024-09-09 20:34:46,413] INFO [Topic Deletion Manager 2] Halted deletion of topics multi-replica-topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2024-09-09 20:34:46,413] INFO [Topic Deletion Manager 2] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:21:56,724] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 13:21:56,745] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 10 and epoch zk version is now 10 (kafka.controller.KafkaController)
[2024-09-12 13:21:56,747] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-12 13:21:56,752] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-12 13:21:56,757] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-12 13:21:56,759] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-12 13:21:56,776] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 1470) (kafka.controller.KafkaController)
[2024-09-12 13:21:56,798] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-12 13:21:56,842] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:21:56,854] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:21:56,855] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-12 13:21:56,856] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-12 13:21:56,856] INFO [Controller id=0] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-12 13:21:56,856] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-12 13:21:56,862] INFO [Controller id=0] List of topics to be deleted: multi-replica-topic (kafka.controller.KafkaController)
[2024-09-12 13:21:56,863] INFO [Controller id=0] List of topics ineligible for deletion: multi-broker-topic,test-topic,rack-test-topic,multi-broker-topic-topic,multi-replica-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-12 13:21:56,863] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-12 13:21:56,863] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(multi-replica-topic), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:21:56,865] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-12 13:21:56,877] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:21:56,883] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:21:56,892] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: 0) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: 0) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:21:56,910] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:21:56,977] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=rack-test-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:21:56,977] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:21:56,979] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:21:57,013] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 13:21:57,019] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, multi-broker-topic-topic-1 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OnlinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, multi-replica-topic-5 -> OfflinePartition, multi-broker-topic-5 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, multi-replica-topic-1 -> OfflinePartition, multi-broker-topic-topic-5 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, multi-broker-topic-topic-2 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, multi-replica-topic-4 -> OfflinePartition, multi-broker-topic-4 -> OnlinePartition, test-topic-1 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, multi-replica-topic-0 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, multi-broker-topic-topic-6 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, test-topic-no-rack-0 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, test-topic-4 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OnlinePartition, rack-test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, multi-replica-topic-3 -> OfflinePartition, multi-broker-topic-topic-3 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, multi-broker-topic-topic-0 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, multi-replica-topic-6 -> OfflinePartition, multi-broker-topic-2 -> OfflinePartition, test-topic-3 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, multi-replica-topic-2 -> OfflinePartition, __consumer_offsets-39 -> OnlinePartition, multi-broker-topic-topic-4 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:21:57,019] INFO [Controller id=0] Ready to serve as the new controller with epoch 10 (kafka.controller.KafkaController)
[2024-09-12 13:21:57,020] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:21:57,023] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:21:57,023] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:21:57,023] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-12 13:21:57,023] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-12 13:21:57,024] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-12 13:21:57,030] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-12 13:22:02,038] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:22:02,039] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:22:02,047] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 13:22:02,048] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 13:22:02,048] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(multi-broker-topic-0 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), multi-broker-topic-3 -> List(1), __consumer_offsets-8 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 13:22:02,048] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:22:02,050] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:22:02,050] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), multi-broker-topic-2 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 13:22:02,050] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:22:02,051] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:22:09,092] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2024-09-12 13:22:09,092] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:22:09,100] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:22:09,101] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2024-09-12 13:22:09,108] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: 1) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: 1) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:22:09,146] INFO [Controller id=0] Some replicas [Topic=multi-replica-topic,Partition=6,Replica=1],[Topic=multi-replica-topic,Partition=3,Replica=1],[Topic=multi-replica-topic,Partition=5,Replica=1],[Topic=multi-replica-topic,Partition=4,Replica=1],[Topic=multi-replica-topic,Partition=0,Replica=1],[Topic=multi-replica-topic,Partition=1,Replica=1],[Topic=multi-replica-topic,Partition=2,Replica=1] for topics scheduled for deletion multi-replica-topic are on the newly restarted brokers 1. Signaling restart of topic deletion for these topics (kafka.controller.KafkaController)
[2024-09-12 13:22:09,147] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 13:22:09,147] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:22:09,148] INFO [Topic Deletion Manager 0] Deletion of topic multi-replica-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-09-12 13:22:09,155] DEBUG [Topic Deletion Manager 0] Dead Replicas ([Topic=multi-replica-topic,Partition=6,Replica=2],[Topic=multi-replica-topic,Partition=0,Replica=2],[Topic=multi-replica-topic,Partition=4,Replica=2],[Topic=multi-replica-topic,Partition=2,Replica=2],[Topic=multi-replica-topic,Partition=3,Replica=2],[Topic=multi-replica-topic,Partition=1,Replica=2],[Topic=multi-replica-topic,Partition=5,Replica=2]) found for topic multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:22:09,163] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-12 13:22:09,169] INFO [Topic Deletion Manager 0] Halted deletion of topics multi-replica-topic due to offline replicas (kafka.controller.TopicDeletionManager)
[2024-09-12 13:22:09,169] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-09-12 13:22:09,171] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 1470, 1 -> 1556) (kafka.controller.KafkaController)
[2024-09-12 13:22:09,220] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: 1) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: 1) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:22:09,228] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(multi-replica-topic-4 -> KAFKA_STORAGE_ERROR, multi-replica-topic-0 -> KAFKA_STORAGE_ERROR, multi-replica-topic-3 -> KAFKA_STORAGE_ERROR, multi-replica-topic-6 -> KAFKA_STORAGE_ERROR, multi-replica-topic-2 -> KAFKA_STORAGE_ERROR, multi-replica-topic-5 -> KAFKA_STORAGE_ERROR, multi-replica-topic-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2024-09-12 13:22:09,231] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=multi-replica-topic,Partition=6,Replica=0],[Topic=multi-replica-topic,Partition=2,Replica=0],[Topic=multi-replica-topic,Partition=0,Replica=0],[Topic=multi-replica-topic,Partition=1,Replica=0],[Topic=multi-replica-topic,Partition=5,Replica=0],[Topic=multi-replica-topic,Partition=4,Replica=0],[Topic=multi-replica-topic,Partition=3,Replica=0]. Halting deletion for topics HashSet(multi-replica-topic) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:22:09,232] INFO [Topic Deletion Manager 0] Halted deletion of topics multi-replica-topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2024-09-12 13:22:09,232] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:22:16,572] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 13:22:16,585] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-12 13:22:29,302] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 11 and epoch zk version is now 11 (kafka.controller.KafkaController)
[2024-09-12 13:22:29,303] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2024-09-12 13:22:29,305] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-12 13:22:29,305] DEBUG [Controller id=1] Broker 2 was elected as controller instead of broker 1 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2024-09-12 13:22:29,308] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-12 13:22:29,309] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2024-09-12 13:22:29,316] INFO [Controller id=2] Initialized broker epochs cache: HashMap(1 -> 1556, 2 -> 1591) (kafka.controller.KafkaController)
[2024-09-12 13:22:29,329] DEBUG [Controller id=2] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2024-09-12 13:22:29,360] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:22:29,368] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:22:29,374] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:22:29,375] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:22:29,375] INFO [Controller id=2] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2024-09-12 13:22:29,376] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-12 13:22:29,376] INFO [Controller id=2] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-12 13:22:29,376] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-12 13:22:29,381] INFO [Controller id=2] List of topics to be deleted: multi-replica-topic (kafka.controller.KafkaController)
[2024-09-12 13:22:29,382] INFO [Controller id=2] List of topics ineligible for deletion: multi-broker-topic,test-topic,multi-broker-topic-topic,multi-replica-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-12 13:22:29,382] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-12 13:22:29,382] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(multi-replica-topic), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, multi-broker-topic-topic, multi-replica-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:22:29,385] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-12 13:22:29,393] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:22:29,404] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:22:29,405] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9093 (id: 1 rack: 1) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 13:22:29,405] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9094 (id: 2 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 13:22:29,443] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:22:29,526] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=rack-test-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:22:29,527] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:22:29,533] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:22:29,664] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, multi-broker-topic-topic-1 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, multi-replica-topic-5 -> OfflinePartition, multi-broker-topic-5 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, multi-replica-topic-1 -> OfflinePartition, multi-broker-topic-topic-5 -> OfflinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, multi-broker-topic-topic-2 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, multi-broker-topic-0 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, multi-replica-topic-4 -> OfflinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, multi-replica-topic-0 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, multi-broker-topic-topic-6 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, test-topic-no-rack-0 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, test-topic-4 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, multi-broker-topic-3 -> OnlinePartition, test-topic-0 -> OfflinePartition, rack-test-topic-0 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, multi-replica-topic-3 -> OfflinePartition, multi-broker-topic-topic-3 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, multi-broker-topic-topic-0 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, multi-replica-topic-6 -> OfflinePartition, multi-broker-topic-2 -> OnlinePartition, test-topic-3 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, multi-replica-topic-2 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, multi-broker-topic-topic-4 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:22:29,665] INFO [Controller id=2] Ready to serve as the new controller with epoch 11 (kafka.controller.KafkaController)
[2024-09-12 13:22:29,668] INFO [Topic Deletion Manager 2] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:22:29,675] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:22:29,675] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:22:29,676] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-12 13:22:29,677] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-12 13:22:29,678] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-12 13:22:29,691] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-12 13:22:29,708] INFO [Controller id=2] New topics: [HashSet(test-log-segment-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test-log-segment-topic,Some(UUaVP81sTG-z8J02xNi3qg),Map(test-log-segment-topic-0 -> ReplicaAssignment(replicas=1,2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-12 13:22:29,710] INFO [Controller id=2] New partition creation callback for test-log-segment-topic-0 (kafka.controller.KafkaController)
[2024-09-12 13:22:29,960] DEBUG [Controller id=2] Updating ISRs for partitions: Set(rack-test-topic-0). (kafka.controller.KafkaController)
[2024-09-12 13:22:29,964] DEBUG [Controller id=2] ISR for partition rack-test-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=3, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=4). (kafka.controller.KafkaController)
[2024-09-12 13:22:34,704] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:22:34,705] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:22:34,714] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), test-topic-no-rack-0 -> List(0, 2), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-12 13:22:34,717] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:22:34,721] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:22:34,722] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(multi-broker-topic-topic-4 -> List(1, 2, 0), multi-broker-topic-topic-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-09-12 13:22:34,723] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.09090909090909091 (kafka.controller.KafkaController)
[2024-09-12 13:22:34,724] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap(multi-broker-topic-topic-0 -> List(2, 1, 0), multi-broker-topic-topic-3 -> List(2, 0, 1), multi-broker-topic-topic-6 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2024-09-12 13:22:34,724] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.125 (kafka.controller.KafkaController)
[2024-09-12 13:22:34,724] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:24:25,535] DEBUG [Controller id=2] Read current producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=6000, size=1000), Zk path version 7 (kafka.controller.KafkaController)
[2024-09-12 13:24:25,539] INFO [Controller id=2] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=7000, size=1000) by writing to Zk with path version 8 (kafka.controller.KafkaController)
[2024-09-12 13:24:25,661] DEBUG [Controller id=2] Read current producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=7000, size=1000), Zk path version 8 (kafka.controller.KafkaController)
[2024-09-12 13:24:25,666] INFO [Controller id=2] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=8000, size=1000) by writing to Zk with path version 9 (kafka.controller.KafkaController)
[2024-09-12 13:27:34,735] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:27:34,735] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:27:34,740] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), test-topic-no-rack-0 -> List(0, 2), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-12 13:27:34,741] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:27:34,742] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:27:34,743] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(multi-broker-topic-topic-4 -> List(1, 2, 0), multi-broker-topic-topic-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-09-12 13:27:34,743] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 0.09090909090909091 (kafka.controller.KafkaController)
[2024-09-12 13:27:34,743] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap(multi-broker-topic-topic-0 -> List(2, 1, 0), multi-broker-topic-topic-3 -> List(2, 0, 1), multi-broker-topic-topic-6 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2024-09-12 13:27:34,743] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.125 (kafka.controller.KafkaController)
[2024-09-12 13:27:34,744] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:30:48,202] INFO [Controller id=2] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-09-12 13:30:48,202] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:30:48,210] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:30:48,211] INFO [Controller id=2] New broker startup callback for 0 (kafka.controller.KafkaController)
[2024-09-12 13:30:48,220] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: 0) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: 0) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:30:48,255] INFO [Controller id=2] Some replicas [Topic=multi-replica-topic,Partition=6,Replica=0],[Topic=multi-replica-topic,Partition=2,Replica=0],[Topic=multi-replica-topic,Partition=0,Replica=0],[Topic=multi-replica-topic,Partition=1,Replica=0],[Topic=multi-replica-topic,Partition=5,Replica=0],[Topic=multi-replica-topic,Partition=4,Replica=0],[Topic=multi-replica-topic,Partition=3,Replica=0] for topics scheduled for deletion multi-replica-topic are on the newly restarted brokers 0. Signaling restart of topic deletion for these topics (kafka.controller.KafkaController)
[2024-09-12 13:30:48,256] INFO [Topic Deletion Manager 2] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:30:48,258] INFO [Topic Deletion Manager 2] Deletion of topic multi-replica-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-09-12 13:30:48,265] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 13:30:48,289] DEBUG [Controller id=0] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-12 13:30:48,294] DEBUG [Controller id=2] Register BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2024-09-12 13:30:48,296] INFO [Controller id=2] Updated broker epochs cache: HashMap(0 -> 1671, 1 -> 1556, 2 -> 1591) (kafka.controller.KafkaController)
[2024-09-12 13:30:48,369] WARN [RequestSendThread controllerId=2] Controller 2's connection to broker localhost:9092 (id: 0 rack: 0) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: 0) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:30:48,449] DEBUG [Controller id=2] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = HashMap(multi-replica-topic-4 -> KAFKA_STORAGE_ERROR, multi-replica-topic-0 -> KAFKA_STORAGE_ERROR, multi-replica-topic-3 -> KAFKA_STORAGE_ERROR, multi-replica-topic-6 -> KAFKA_STORAGE_ERROR, multi-replica-topic-2 -> KAFKA_STORAGE_ERROR, multi-replica-topic-5 -> KAFKA_STORAGE_ERROR, multi-replica-topic-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2024-09-12 13:30:48,451] DEBUG [Topic Deletion Manager 2] Deletion failed for replicas [Topic=multi-replica-topic,Partition=6,Replica=2],[Topic=multi-replica-topic,Partition=0,Replica=2],[Topic=multi-replica-topic,Partition=4,Replica=2],[Topic=multi-replica-topic,Partition=2,Replica=2],[Topic=multi-replica-topic,Partition=3,Replica=2],[Topic=multi-replica-topic,Partition=1,Replica=2],[Topic=multi-replica-topic,Partition=5,Replica=2]. Halting deletion for topics HashSet(multi-replica-topic) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:30:48,453] INFO [Topic Deletion Manager 2] Halted deletion of topics multi-replica-topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2024-09-12 13:30:48,454] INFO [Topic Deletion Manager 2] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:31:08,306] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 12 and epoch zk version is now 12 (kafka.controller.KafkaController)
[2024-09-12 13:31:08,308] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-12 13:31:08,310] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-12 13:31:08,312] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-12 13:31:08,313] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-12 13:31:08,320] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 1671) (kafka.controller.KafkaController)
[2024-09-12 13:31:08,334] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-12 13:31:08,363] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:31:08,372] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:31:08,373] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-12 13:31:08,373] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-12 13:31:08,373] INFO [Controller id=0] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-12 13:31:08,374] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-12 13:31:08,378] INFO [Controller id=0] List of topics to be deleted: multi-replica-topic (kafka.controller.KafkaController)
[2024-09-12 13:31:08,378] INFO [Controller id=0] List of topics ineligible for deletion: multi-broker-topic,test-topic,rack-test-topic,multi-broker-topic-topic,multi-replica-topic,test-log-segment-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-12 13:31:08,379] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-12 13:31:08,379] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(multi-replica-topic), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:31:08,381] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-12 13:31:08,389] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:31:08,397] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:31:08,397] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 13:31:08,421] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:31:08,495] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=rack-test-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:31:08,495] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:31:08,499] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:31:08,569] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, multi-broker-topic-topic-1 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OnlinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, multi-replica-topic-5 -> OfflinePartition, multi-broker-topic-5 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, multi-replica-topic-1 -> OfflinePartition, multi-broker-topic-topic-5 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, multi-broker-topic-topic-2 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, multi-replica-topic-4 -> OfflinePartition, multi-broker-topic-4 -> OnlinePartition, test-topic-1 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, multi-replica-topic-0 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, multi-broker-topic-topic-6 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, test-topic-no-rack-0 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, test-log-segment-topic-0 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, test-topic-4 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OnlinePartition, rack-test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, multi-replica-topic-3 -> OfflinePartition, multi-broker-topic-topic-3 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, multi-broker-topic-topic-0 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, multi-replica-topic-6 -> OfflinePartition, multi-broker-topic-2 -> OfflinePartition, test-topic-3 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, multi-replica-topic-2 -> OfflinePartition, __consumer_offsets-39 -> OnlinePartition, multi-broker-topic-topic-4 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:31:08,570] INFO [Controller id=0] Ready to serve as the new controller with epoch 12 (kafka.controller.KafkaController)
[2024-09-12 13:31:08,572] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:31:08,576] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:31:08,577] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:31:08,577] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-12 13:31:08,577] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-12 13:31:08,579] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-12 13:31:08,588] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-12 13:31:11,183] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,2 (kafka.controller.KafkaController)
[2024-09-12 13:31:11,183] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:31:11,189] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:31:11,190] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2024-09-12 13:31:11,205] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: 0) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: 0) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:31:11,222] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 13:31:11,235] INFO [Controller id=0] Some replicas [Topic=multi-replica-topic,Partition=6,Replica=2],[Topic=multi-replica-topic,Partition=0,Replica=2],[Topic=multi-replica-topic,Partition=4,Replica=2],[Topic=multi-replica-topic,Partition=2,Replica=2],[Topic=multi-replica-topic,Partition=3,Replica=2],[Topic=multi-replica-topic,Partition=1,Replica=2],[Topic=multi-replica-topic,Partition=5,Replica=2] for topics scheduled for deletion multi-replica-topic are on the newly restarted brokers 2. Signaling restart of topic deletion for these topics (kafka.controller.KafkaController)
[2024-09-12 13:31:11,235] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:31:11,236] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-12 13:31:11,236] INFO [Topic Deletion Manager 0] Deletion of topic multi-replica-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-09-12 13:31:11,244] DEBUG [Topic Deletion Manager 0] Dead Replicas ([Topic=multi-replica-topic,Partition=6,Replica=1],[Topic=multi-replica-topic,Partition=3,Replica=1],[Topic=multi-replica-topic,Partition=5,Replica=1],[Topic=multi-replica-topic,Partition=4,Replica=1],[Topic=multi-replica-topic,Partition=0,Replica=1],[Topic=multi-replica-topic,Partition=1,Replica=1],[Topic=multi-replica-topic,Partition=2,Replica=1]) found for topic multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:31:11,263] INFO [Topic Deletion Manager 0] Halted deletion of topics multi-replica-topic due to offline replicas (kafka.controller.TopicDeletionManager)
[2024-09-12 13:31:11,263] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2024-09-12 13:31:11,265] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 1671, 2 -> 1795) (kafka.controller.KafkaController)
[2024-09-12 13:31:11,321] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: 0) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: 0) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:31:11,335] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(multi-replica-topic-4 -> KAFKA_STORAGE_ERROR, multi-replica-topic-0 -> KAFKA_STORAGE_ERROR, multi-replica-topic-3 -> KAFKA_STORAGE_ERROR, multi-replica-topic-6 -> KAFKA_STORAGE_ERROR, multi-replica-topic-2 -> KAFKA_STORAGE_ERROR, multi-replica-topic-5 -> KAFKA_STORAGE_ERROR, multi-replica-topic-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2024-09-12 13:31:11,338] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=multi-replica-topic,Partition=6,Replica=0],[Topic=multi-replica-topic,Partition=2,Replica=0],[Topic=multi-replica-topic,Partition=0,Replica=0],[Topic=multi-replica-topic,Partition=1,Replica=0],[Topic=multi-replica-topic,Partition=5,Replica=0],[Topic=multi-replica-topic,Partition=4,Replica=0],[Topic=multi-replica-topic,Partition=3,Replica=0]. Halting deletion for topics HashSet(multi-replica-topic) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:31:11,339] INFO [Topic Deletion Manager 0] Halted deletion of topics multi-replica-topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2024-09-12 13:31:11,339] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:31:29,328] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 13 and epoch zk version is now 13 (kafka.controller.KafkaController)
[2024-09-12 13:31:29,330] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2024-09-12 13:31:29,333] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-12 13:31:29,335] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-12 13:31:29,337] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2024-09-12 13:31:29,344] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 1795) (kafka.controller.KafkaController)
[2024-09-12 13:31:29,362] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2024-09-12 13:31:29,389] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:31:29,398] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:31:29,399] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2024-09-12 13:31:29,399] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-12 13:31:29,399] INFO [Controller id=2] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-12 13:31:29,400] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-12 13:31:29,404] INFO [Controller id=2] List of topics to be deleted: multi-replica-topic (kafka.controller.KafkaController)
[2024-09-12 13:31:29,404] INFO [Controller id=2] List of topics ineligible for deletion: multi-broker-topic,test-topic,rack-test-topic,multi-broker-topic-topic,multi-replica-topic,test-log-segment-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-12 13:31:29,405] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-12 13:31:29,405] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(multi-replica-topic), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:31:29,408] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-12 13:31:29,416] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:31:29,422] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:31:29,423] INFO [RequestSendThread controllerId=2] Controller 2 connected to localhost:9094 (id: 2 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 13:31:29,451] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:31:29,524] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:31:29,524] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:31:29,529] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:31:29,590] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, multi-broker-topic-topic-1 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, multi-replica-topic-5 -> OfflinePartition, multi-broker-topic-5 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, multi-replica-topic-1 -> OfflinePartition, multi-broker-topic-topic-5 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, multi-broker-topic-topic-2 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, multi-replica-topic-4 -> OfflinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, multi-replica-topic-0 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, multi-broker-topic-topic-6 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, test-topic-no-rack-0 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, test-log-segment-topic-0 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, test-topic-4 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OfflinePartition, rack-test-topic-0 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, multi-replica-topic-3 -> OfflinePartition, multi-broker-topic-topic-3 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, multi-broker-topic-topic-0 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, multi-replica-topic-6 -> OfflinePartition, multi-broker-topic-2 -> OnlinePartition, test-topic-3 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, multi-replica-topic-2 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, multi-broker-topic-topic-4 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:31:29,590] INFO [Controller id=2] Ready to serve as the new controller with epoch 13 (kafka.controller.KafkaController)
[2024-09-12 13:31:29,594] INFO [Topic Deletion Manager 2] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:31:29,598] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:31:29,599] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:31:29,599] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-12 13:31:29,599] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-12 13:31:29,600] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-12 13:31:29,607] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-12 13:31:34,610] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:31:34,610] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:31:34,613] DEBUG [Controller id=2] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), test-topic-no-rack-0 -> List(0, 2), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-12 13:31:34,615] TRACE [Controller id=2] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:31:34,617] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:31:34,617] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), multi-broker-topic-0 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), multi-broker-topic-3 -> List(1), __consumer_offsets-8 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 13:31:34,617] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:31:34,618] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:31:34,619] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap(multi-broker-topic-topic-0 -> List(2, 1, 0), multi-broker-topic-topic-3 -> List(2, 0, 1), multi-broker-topic-topic-6 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2024-09-12 13:31:34,619] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.125 (kafka.controller.KafkaController)
[2024-09-12 13:31:34,619] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:32:25,649] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 13:32:25,662] DEBUG [Controller id=0] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-12 13:32:26,312] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 14 and epoch zk version is now 14 (kafka.controller.KafkaController)
[2024-09-12 13:32:26,313] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-12 13:32:26,316] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-12 13:32:26,317] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-12 13:32:26,319] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-12 13:32:26,324] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 1892) (kafka.controller.KafkaController)
[2024-09-12 13:32:26,337] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-12 13:32:26,360] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:32:26,367] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:32:26,368] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-12 13:32:26,368] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-12 13:32:26,368] INFO [Controller id=0] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-12 13:32:26,368] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-12 13:32:26,372] INFO [Controller id=0] List of topics to be deleted: multi-replica-topic (kafka.controller.KafkaController)
[2024-09-12 13:32:26,372] INFO [Controller id=0] List of topics ineligible for deletion: multi-broker-topic,test-topic,rack-test-topic,multi-broker-topic-topic,multi-replica-topic,test-log-segment-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-12 13:32:26,372] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-12 13:32:26,373] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(multi-replica-topic), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:32:26,374] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-12 13:32:26,386] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:32:26,394] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:32:26,395] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 13:32:26,412] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:32:26,461] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=rack-test-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:32:26,461] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:32:26,464] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:32:26,523] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, multi-broker-topic-topic-1 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OnlinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, multi-replica-topic-5 -> OfflinePartition, multi-broker-topic-5 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, multi-replica-topic-1 -> OfflinePartition, multi-broker-topic-topic-5 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, multi-broker-topic-topic-2 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, multi-replica-topic-4 -> OfflinePartition, multi-broker-topic-4 -> OnlinePartition, test-topic-1 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, multi-replica-topic-0 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, multi-broker-topic-topic-6 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, test-topic-no-rack-0 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, test-log-segment-topic-0 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, test-topic-4 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OnlinePartition, rack-test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, multi-replica-topic-3 -> OfflinePartition, multi-broker-topic-topic-3 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, multi-broker-topic-topic-0 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, multi-replica-topic-6 -> OfflinePartition, multi-broker-topic-2 -> OfflinePartition, test-topic-3 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, multi-replica-topic-2 -> OfflinePartition, __consumer_offsets-39 -> OnlinePartition, multi-broker-topic-topic-4 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:32:26,524] INFO [Controller id=0] Ready to serve as the new controller with epoch 14 (kafka.controller.KafkaController)
[2024-09-12 13:32:26,526] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:32:26,528] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:32:26,529] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:32:26,529] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-12 13:32:26,529] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-12 13:32:26,530] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-12 13:32:26,537] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-12 13:32:31,422] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2024-09-12 13:32:31,423] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:32:31,429] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:32:31,430] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2024-09-12 13:32:31,437] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: 1) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: 1) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:32:31,473] INFO [Controller id=0] Some replicas [Topic=multi-replica-topic,Partition=6,Replica=1],[Topic=multi-replica-topic,Partition=3,Replica=1],[Topic=multi-replica-topic,Partition=5,Replica=1],[Topic=multi-replica-topic,Partition=4,Replica=1],[Topic=multi-replica-topic,Partition=0,Replica=1],[Topic=multi-replica-topic,Partition=1,Replica=1],[Topic=multi-replica-topic,Partition=2,Replica=1] for topics scheduled for deletion multi-replica-topic are on the newly restarted brokers 1. Signaling restart of topic deletion for these topics (kafka.controller.KafkaController)
[2024-09-12 13:32:31,474] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:32:31,475] INFO [Topic Deletion Manager 0] Deletion of topic multi-replica-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-09-12 13:32:31,479] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 13:32:31,482] DEBUG [Topic Deletion Manager 0] Dead Replicas ([Topic=multi-replica-topic,Partition=6,Replica=2],[Topic=multi-replica-topic,Partition=0,Replica=2],[Topic=multi-replica-topic,Partition=4,Replica=2],[Topic=multi-replica-topic,Partition=2,Replica=2],[Topic=multi-replica-topic,Partition=3,Replica=2],[Topic=multi-replica-topic,Partition=1,Replica=2],[Topic=multi-replica-topic,Partition=5,Replica=2]) found for topic multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:32:31,501] INFO [Topic Deletion Manager 0] Halted deletion of topics multi-replica-topic due to offline replicas (kafka.controller.TopicDeletionManager)
[2024-09-12 13:32:31,501] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-09-12 13:32:31,501] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-12 13:32:31,503] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 1892, 1 -> 1989) (kafka.controller.KafkaController)
[2024-09-12 13:32:31,548] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:32:31,549] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:32:31,552] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 13:32:31,555] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 13:32:31,556] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), multi-broker-topic-topic-4 -> List(1, 2, 0), multi-broker-topic-topic-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-09-12 13:32:31,556] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.13636363636363635 (kafka.controller.KafkaController)
[2024-09-12 13:32:31,557] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: 1) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: 1) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:32:31,558] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:32:31,558] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), multi-broker-topic-2 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 13:32:31,559] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:32:31,559] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:32:31,591] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(multi-replica-topic-4 -> KAFKA_STORAGE_ERROR, multi-replica-topic-0 -> KAFKA_STORAGE_ERROR, multi-replica-topic-3 -> KAFKA_STORAGE_ERROR, multi-replica-topic-6 -> KAFKA_STORAGE_ERROR, multi-replica-topic-2 -> KAFKA_STORAGE_ERROR, multi-replica-topic-5 -> KAFKA_STORAGE_ERROR, multi-replica-topic-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2024-09-12 13:32:31,597] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=multi-replica-topic,Partition=6,Replica=0],[Topic=multi-replica-topic,Partition=2,Replica=0],[Topic=multi-replica-topic,Partition=0,Replica=0],[Topic=multi-replica-topic,Partition=1,Replica=0],[Topic=multi-replica-topic,Partition=5,Replica=0],[Topic=multi-replica-topic,Partition=4,Replica=0],[Topic=multi-replica-topic,Partition=3,Replica=0]. Halting deletion for topics HashSet(multi-replica-topic) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:32:31,598] INFO [Topic Deletion Manager 0] Halted deletion of topics multi-replica-topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2024-09-12 13:32:31,598] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:32:38,210] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 13:32:38,223] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-12 13:32:50,305] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 15 and epoch zk version is now 15 (kafka.controller.KafkaController)
[2024-09-12 13:32:50,306] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2024-09-12 13:32:50,308] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-12 13:32:50,311] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-12 13:32:50,310] DEBUG [Controller id=2] Broker 1 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2024-09-12 13:32:50,312] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2024-09-12 13:32:50,320] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 1989, 2 -> 2024) (kafka.controller.KafkaController)
[2024-09-12 13:32:50,335] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2024-09-12 13:32:50,358] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:32:50,366] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:32:50,369] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:32:50,369] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:32:50,370] INFO [Controller id=1] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2024-09-12 13:32:50,371] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-12 13:32:50,371] INFO [Controller id=1] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-12 13:32:50,371] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-12 13:32:50,375] INFO [Controller id=1] List of topics to be deleted: multi-replica-topic (kafka.controller.KafkaController)
[2024-09-12 13:32:50,375] INFO [Controller id=1] List of topics ineligible for deletion: multi-broker-topic,test-topic,multi-broker-topic-topic,multi-replica-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-12 13:32:50,375] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-12 13:32:50,375] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(multi-replica-topic), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, multi-broker-topic-topic, multi-replica-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:32:50,381] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-12 13:32:50,392] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:32:50,401] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:32:50,401] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 1 rack: 1) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 13:32:50,401] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 2 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 13:32:50,424] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:32:50,473] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=rack-test-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:32:50,473] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:32:50,476] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:32:50,553] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, multi-broker-topic-topic-1 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, multi-replica-topic-5 -> OfflinePartition, multi-broker-topic-5 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, multi-replica-topic-1 -> OfflinePartition, multi-broker-topic-topic-5 -> OfflinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, multi-broker-topic-topic-2 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, multi-broker-topic-0 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, multi-replica-topic-4 -> OfflinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, multi-replica-topic-0 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, multi-broker-topic-topic-6 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, test-topic-no-rack-0 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, test-log-segment-topic-0 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, test-topic-4 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, multi-broker-topic-3 -> OnlinePartition, test-topic-0 -> OfflinePartition, rack-test-topic-0 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, multi-replica-topic-3 -> OfflinePartition, multi-broker-topic-topic-3 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, multi-broker-topic-topic-0 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, multi-replica-topic-6 -> OfflinePartition, multi-broker-topic-2 -> OnlinePartition, test-topic-3 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, multi-replica-topic-2 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, multi-broker-topic-topic-4 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:32:50,553] INFO [Controller id=1] Ready to serve as the new controller with epoch 15 (kafka.controller.KafkaController)
[2024-09-12 13:32:50,556] INFO [Topic Deletion Manager 1] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:32:50,560] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:32:50,560] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:32:50,560] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-12 13:32:50,561] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-12 13:32:50,561] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-12 13:32:50,570] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-12 13:32:51,491] DEBUG [Controller id=1] Updating ISRs for partitions: Set(rack-test-topic-0). (kafka.controller.KafkaController)
[2024-09-12 13:32:51,495] DEBUG [Controller id=1] ISR for partition rack-test-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=8, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=10). (kafka.controller.KafkaController)
[2024-09-12 13:32:51,503] DEBUG [Controller id=1] Updating ISRs for partitions: Set(test-log-segment-topic-0). (kafka.controller.KafkaController)
[2024-09-12 13:32:51,505] DEBUG [Controller id=1] ISR for partition test-log-segment-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=5, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=6). (kafka.controller.KafkaController)
[2024-09-12 13:32:55,584] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:32:55,585] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:32:55,596] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), test-topic-no-rack-0 -> List(0, 2), multi-broker-topic-5 -> List(0), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-12 13:32:55,599] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:32:55,603] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:32:55,605] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), multi-broker-topic-topic-4 -> List(1, 2, 0), multi-broker-topic-topic-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-09-12 13:32:55,605] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.13636363636363635 (kafka.controller.KafkaController)
[2024-09-12 13:32:55,605] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions test-log-segment-topic-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:32:55,615] INFO [Controller id=1] Partition test-log-segment-topic-0 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-09-12 13:32:55,615] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(multi-broker-topic-topic-0 -> List(2, 1, 0), multi-broker-topic-topic-3 -> List(2, 0, 1), multi-broker-topic-topic-6 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2024-09-12 13:32:55,615] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.125 (kafka.controller.KafkaController)
[2024-09-12 13:32:55,616] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:33:15,888] INFO [Controller id=1] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-09-12 13:33:15,888] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:33:15,894] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:33:15,896] INFO [Controller id=1] New broker startup callback for 0 (kafka.controller.KafkaController)
[2024-09-12 13:33:15,903] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 0 rack: 0) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: 0) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:33:15,927] INFO [Controller id=1] Some replicas [Topic=multi-replica-topic,Partition=6,Replica=0],[Topic=multi-replica-topic,Partition=2,Replica=0],[Topic=multi-replica-topic,Partition=0,Replica=0],[Topic=multi-replica-topic,Partition=1,Replica=0],[Topic=multi-replica-topic,Partition=5,Replica=0],[Topic=multi-replica-topic,Partition=4,Replica=0],[Topic=multi-replica-topic,Partition=3,Replica=0] for topics scheduled for deletion multi-replica-topic are on the newly restarted brokers 0. Signaling restart of topic deletion for these topics (kafka.controller.KafkaController)
[2024-09-12 13:33:15,928] INFO [Topic Deletion Manager 1] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:33:15,928] INFO [Topic Deletion Manager 1] Deletion of topic multi-replica-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-09-12 13:33:15,935] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 13:33:15,957] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-12 13:33:15,959] DEBUG [Controller id=1] Register BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2024-09-12 13:33:15,961] INFO [Controller id=1] Updated broker epochs cache: HashMap(0 -> 2099, 1 -> 1989, 2 -> 2024) (kafka.controller.KafkaController)
[2024-09-12 13:33:16,026] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 0 rack: 0) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: 0) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:33:16,035] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = HashMap(multi-replica-topic-4 -> KAFKA_STORAGE_ERROR, multi-replica-topic-0 -> KAFKA_STORAGE_ERROR, multi-replica-topic-3 -> KAFKA_STORAGE_ERROR, multi-replica-topic-6 -> KAFKA_STORAGE_ERROR, multi-replica-topic-2 -> KAFKA_STORAGE_ERROR, multi-replica-topic-5 -> KAFKA_STORAGE_ERROR, multi-replica-topic-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2024-09-12 13:33:16,037] DEBUG [Topic Deletion Manager 1] Deletion failed for replicas [Topic=multi-replica-topic,Partition=6,Replica=1],[Topic=multi-replica-topic,Partition=3,Replica=1],[Topic=multi-replica-topic,Partition=5,Replica=1],[Topic=multi-replica-topic,Partition=4,Replica=1],[Topic=multi-replica-topic,Partition=0,Replica=1],[Topic=multi-replica-topic,Partition=1,Replica=1],[Topic=multi-replica-topic,Partition=2,Replica=1]. Halting deletion for topics HashSet(multi-replica-topic) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:33:16,038] INFO [Topic Deletion Manager 1] Halted deletion of topics multi-replica-topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2024-09-12 13:33:16,038] INFO [Topic Deletion Manager 1] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:33:16,058] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = HashMap(multi-replica-topic-4 -> KAFKA_STORAGE_ERROR, multi-replica-topic-0 -> KAFKA_STORAGE_ERROR, multi-replica-topic-3 -> KAFKA_STORAGE_ERROR, multi-replica-topic-6 -> KAFKA_STORAGE_ERROR, multi-replica-topic-2 -> KAFKA_STORAGE_ERROR, multi-replica-topic-5 -> KAFKA_STORAGE_ERROR, multi-replica-topic-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2024-09-12 13:33:16,059] DEBUG [Topic Deletion Manager 1] Deletion failed for replicas [Topic=multi-replica-topic,Partition=6,Replica=2],[Topic=multi-replica-topic,Partition=0,Replica=2],[Topic=multi-replica-topic,Partition=4,Replica=2],[Topic=multi-replica-topic,Partition=2,Replica=2],[Topic=multi-replica-topic,Partition=3,Replica=2],[Topic=multi-replica-topic,Partition=1,Replica=2],[Topic=multi-replica-topic,Partition=5,Replica=2]. Halting deletion for topics HashSet(multi-replica-topic) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:33:16,060] INFO [Topic Deletion Manager 1] Halted deletion of topics multi-replica-topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2024-09-12 13:33:16,061] INFO [Topic Deletion Manager 1] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:33:35,304] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 16 and epoch zk version is now 16 (kafka.controller.KafkaController)
[2024-09-12 13:33:35,305] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-12 13:33:35,308] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-12 13:33:35,310] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-12 13:33:35,311] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-12 13:33:35,319] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 2099) (kafka.controller.KafkaController)
[2024-09-12 13:33:35,334] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-12 13:33:35,366] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:33:35,375] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:33:35,376] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-12 13:33:35,376] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-12 13:33:35,376] INFO [Controller id=0] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-12 13:33:35,376] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-12 13:33:35,380] INFO [Controller id=0] List of topics to be deleted: multi-replica-topic (kafka.controller.KafkaController)
[2024-09-12 13:33:35,380] INFO [Controller id=0] List of topics ineligible for deletion: multi-broker-topic,test-topic,rack-test-topic,multi-broker-topic-topic,multi-replica-topic,test-log-segment-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-12 13:33:35,380] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-12 13:33:35,380] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(multi-replica-topic), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:33:35,384] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-12 13:33:35,391] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:33:35,398] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 13:33:35,398] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:33:35,419] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:33:35,480] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=rack-test-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:33:35,480] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:33:35,483] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:33:35,531] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, multi-broker-topic-topic-1 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OnlinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, multi-replica-topic-5 -> OfflinePartition, multi-broker-topic-5 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, multi-replica-topic-1 -> OfflinePartition, multi-broker-topic-topic-5 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, multi-broker-topic-topic-2 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, multi-replica-topic-4 -> OfflinePartition, multi-broker-topic-4 -> OnlinePartition, test-topic-1 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, multi-replica-topic-0 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, multi-broker-topic-topic-6 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, test-topic-no-rack-0 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, test-log-segment-topic-0 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, test-topic-4 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OnlinePartition, rack-test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, multi-replica-topic-3 -> OfflinePartition, multi-broker-topic-topic-3 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, multi-broker-topic-topic-0 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, multi-replica-topic-6 -> OfflinePartition, multi-broker-topic-2 -> OfflinePartition, test-topic-3 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, multi-replica-topic-2 -> OfflinePartition, __consumer_offsets-39 -> OnlinePartition, multi-broker-topic-topic-4 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:33:35,531] INFO [Controller id=0] Ready to serve as the new controller with epoch 16 (kafka.controller.KafkaController)
[2024-09-12 13:33:35,533] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:33:35,536] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:33:35,537] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:33:35,537] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-12 13:33:35,537] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-12 13:33:35,538] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-12 13:33:35,545] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-12 13:33:40,559] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:33:40,560] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:33:40,564] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 13:33:40,565] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 13:33:40,565] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), multi-broker-topic-0 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), multi-broker-topic-3 -> List(1), __consumer_offsets-8 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 13:33:40,565] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:33:40,567] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:33:40,567] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), multi-broker-topic-2 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 13:33:40,567] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:33:40,567] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:36:49,618] DEBUG [Controller id=0] Delete topics listener fired for topics multi-broker-topic,multi-replica-topic to be deleted (kafka.controller.KafkaController)
[2024-09-12 13:36:49,619] INFO [Controller id=0] Starting topic deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.KafkaController)
[2024-09-12 13:36:49,620] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:36:49,620] INFO [Topic Deletion Manager 0] Deletion of topic multi-broker-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-09-12 13:36:49,626] DEBUG [Topic Deletion Manager 0] Dead Replicas ([Topic=multi-broker-topic,Partition=3,Replica=1],[Topic=multi-broker-topic,Partition=0,Replica=1],[Topic=multi-broker-topic,Partition=2,Replica=2]) found for topic multi-broker-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:36:49,637] INFO [Topic Deletion Manager 0] Halted deletion of topics multi-broker-topic due to offline replicas (kafka.controller.TopicDeletionManager)
[2024-09-12 13:36:49,671] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = Map(multi-broker-topic-1 -> KAFKA_STORAGE_ERROR, multi-broker-topic-4 -> KAFKA_STORAGE_ERROR, multi-broker-topic-5 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2024-09-12 13:36:49,673] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=multi-broker-topic,Partition=1,Replica=0],[Topic=multi-broker-topic,Partition=4,Replica=0],[Topic=multi-broker-topic,Partition=5,Replica=0]. Halting deletion for topics Set(multi-broker-topic) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:36:49,674] INFO [Topic Deletion Manager 0] Halted deletion of topics multi-broker-topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2024-09-12 13:36:49,674] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:36:49,675] DEBUG [Topic Deletion Manager 0] Retrying deletion of topics multi-broker-topic since replicas [Topic=multi-broker-topic,Partition=1,Replica=0],[Topic=multi-broker-topic,Partition=3,Replica=1],[Topic=multi-broker-topic,Partition=2,Replica=2],[Topic=multi-broker-topic,Partition=5,Replica=0],[Topic=multi-broker-topic,Partition=0,Replica=1],[Topic=multi-broker-topic,Partition=4,Replica=0] were not successfully deleted (kafka.controller.TopicDeletionManager)
[2024-09-12 13:37:59,938] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 13:37:59,957] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 17 and epoch zk version is now 17 (kafka.controller.KafkaController)
[2024-09-12 13:37:59,959] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-12 13:37:59,964] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-12 13:37:59,965] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-12 13:37:59,973] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-12 13:37:59,986] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 2217) (kafka.controller.KafkaController)
[2024-09-12 13:38:00,005] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-12 13:38:00,051] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:38:00,059] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:38:00,059] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-12 13:38:00,060] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-12 13:38:00,060] INFO [Controller id=0] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-12 13:38:00,060] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-12 13:38:00,065] INFO [Controller id=0] List of topics to be deleted: multi-broker-topic,multi-replica-topic (kafka.controller.KafkaController)
[2024-09-12 13:38:00,065] INFO [Controller id=0] List of topics ineligible for deletion: multi-broker-topic,test-topic,rack-test-topic,multi-broker-topic-topic,multi-replica-topic,test-log-segment-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-12 13:38:00,066] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-12 13:38:00,066] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(multi-broker-topic, multi-replica-topic), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:38:00,068] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-12 13:38:00,078] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:38:00,085] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:38:00,089] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: 0) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: 0) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:38:00,119] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:38:00,193] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=rack-test-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:38:00,193] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:38:00,196] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:38:00,204] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 13:38:00,244] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, multi-broker-topic-topic-1 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, multi-replica-topic-5 -> OfflinePartition, multi-broker-topic-5 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, multi-replica-topic-1 -> OfflinePartition, multi-broker-topic-topic-5 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, multi-broker-topic-topic-2 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, multi-replica-topic-4 -> OfflinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, multi-replica-topic-0 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, multi-broker-topic-topic-6 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, test-topic-no-rack-0 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, test-log-segment-topic-0 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, test-topic-4 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OnlinePartition, rack-test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, multi-replica-topic-3 -> OfflinePartition, multi-broker-topic-topic-3 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, multi-broker-topic-topic-0 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, multi-replica-topic-6 -> OfflinePartition, multi-broker-topic-2 -> OfflinePartition, test-topic-3 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, multi-replica-topic-2 -> OfflinePartition, __consumer_offsets-39 -> OnlinePartition, multi-broker-topic-topic-4 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:38:00,244] INFO [Controller id=0] Ready to serve as the new controller with epoch 17 (kafka.controller.KafkaController)
[2024-09-12 13:38:00,246] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:38:00,249] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:38:00,249] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:38:00,250] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-12 13:38:00,250] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-12 13:38:00,250] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-12 13:38:00,262] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-12 13:38:05,267] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:38:05,268] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:38:05,271] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 13:38:05,272] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 13:38:05,272] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 13:38:05,272] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:38:05,274] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:38:05,274] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 13:38:05,274] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:38:05,275] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:38:05,758] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2024-09-12 13:38:05,758] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:38:05,765] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:38:05,765] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2024-09-12 13:38:05,770] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: 1) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: 1) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:38:05,801] INFO [Controller id=0] Some replicas [Topic=multi-replica-topic,Partition=6,Replica=1],[Topic=multi-replica-topic,Partition=3,Replica=1],[Topic=multi-broker-topic,Partition=3,Replica=1],[Topic=multi-replica-topic,Partition=5,Replica=1],[Topic=multi-replica-topic,Partition=4,Replica=1],[Topic=multi-replica-topic,Partition=0,Replica=1],[Topic=multi-broker-topic,Partition=0,Replica=1],[Topic=multi-replica-topic,Partition=1,Replica=1],[Topic=multi-replica-topic,Partition=2,Replica=1] for topics scheduled for deletion multi-broker-topic,multi-replica-topic are on the newly restarted brokers 1. Signaling restart of topic deletion for these topics (kafka.controller.KafkaController)
[2024-09-12 13:38:05,801] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:38:05,803] INFO [Topic Deletion Manager 0] Deletion of topic multi-broker-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-09-12 13:38:05,803] INFO [Topic Deletion Manager 0] Deletion of topic multi-replica-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-09-12 13:38:05,804] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 13:38:05,806] DEBUG [Topic Deletion Manager 0] Dead Replicas ([Topic=multi-broker-topic,Partition=2,Replica=2]) found for topic multi-broker-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:38:05,806] DEBUG [Topic Deletion Manager 0] Dead Replicas ([Topic=multi-replica-topic,Partition=6,Replica=2],[Topic=multi-replica-topic,Partition=0,Replica=2],[Topic=multi-replica-topic,Partition=4,Replica=2],[Topic=multi-replica-topic,Partition=2,Replica=2],[Topic=multi-replica-topic,Partition=3,Replica=2],[Topic=multi-replica-topic,Partition=1,Replica=2],[Topic=multi-replica-topic,Partition=5,Replica=2]) found for topic multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:38:05,823] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-12 13:38:05,832] INFO [Topic Deletion Manager 0] Halted deletion of topics multi-broker-topic,multi-replica-topic due to offline replicas (kafka.controller.TopicDeletionManager)
[2024-09-12 13:38:05,832] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-09-12 13:38:05,833] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 2217, 1 -> 2283) (kafka.controller.KafkaController)
[2024-09-12 13:38:05,887] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: 1) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: 1) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:38:05,894] DEBUG [Controller id=0] Delete topic callback invoked on StopReplica response received from broker 0: request error = NONE, partition errors = HashMap(multi-replica-topic-4 -> KAFKA_STORAGE_ERROR, multi-replica-topic-0 -> KAFKA_STORAGE_ERROR, multi-replica-topic-3 -> KAFKA_STORAGE_ERROR, multi-replica-topic-6 -> KAFKA_STORAGE_ERROR, multi-replica-topic-2 -> KAFKA_STORAGE_ERROR, multi-broker-topic-4 -> KAFKA_STORAGE_ERROR, multi-broker-topic-5 -> KAFKA_STORAGE_ERROR, multi-replica-topic-5 -> KAFKA_STORAGE_ERROR, multi-broker-topic-1 -> KAFKA_STORAGE_ERROR, multi-replica-topic-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2024-09-12 13:38:05,896] DEBUG [Topic Deletion Manager 0] Deletion failed for replicas [Topic=multi-broker-topic,Partition=4,Replica=0],[Topic=multi-replica-topic,Partition=6,Replica=0],[Topic=multi-replica-topic,Partition=2,Replica=0],[Topic=multi-replica-topic,Partition=0,Replica=0],[Topic=multi-replica-topic,Partition=1,Replica=0],[Topic=multi-replica-topic,Partition=5,Replica=0],[Topic=multi-broker-topic,Partition=1,Replica=0],[Topic=multi-replica-topic,Partition=4,Replica=0],[Topic=multi-replica-topic,Partition=3,Replica=0],[Topic=multi-broker-topic,Partition=5,Replica=0]. Halting deletion for topics HashSet(multi-broker-topic, multi-replica-topic) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:38:05,897] INFO [Topic Deletion Manager 0] Halted deletion of topics multi-broker-topic,multi-replica-topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2024-09-12 13:38:05,897] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:38:12,871] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 13:38:12,882] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-12 13:38:26,320] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 18 and epoch zk version is now 18 (kafka.controller.KafkaController)
[2024-09-12 13:38:26,322] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2024-09-12 13:38:26,326] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-12 13:38:26,329] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-12 13:38:26,327] DEBUG [Controller id=2] Broker 1 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2024-09-12 13:38:26,330] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2024-09-12 13:38:26,338] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 2283, 2 -> 2321) (kafka.controller.KafkaController)
[2024-09-12 13:38:26,351] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2024-09-12 13:38:26,374] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:38:26,380] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:38:26,385] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:38:26,385] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:38:26,386] INFO [Controller id=1] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2024-09-12 13:38:26,387] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-12 13:38:26,387] INFO [Controller id=1] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-12 13:38:26,387] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-12 13:38:26,396] INFO [Controller id=1] List of topics to be deleted: multi-broker-topic,multi-replica-topic (kafka.controller.KafkaController)
[2024-09-12 13:38:26,396] INFO [Controller id=1] List of topics ineligible for deletion: multi-broker-topic,test-topic,multi-broker-topic-topic,multi-replica-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-12 13:38:26,396] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-12 13:38:26,396] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(multi-broker-topic, multi-replica-topic), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, multi-broker-topic-topic, multi-replica-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:38:26,400] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-12 13:38:26,408] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:38:26,417] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:38:26,419] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 1 rack: 1) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 13:38:26,419] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 2 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 13:38:26,439] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:38:26,492] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OnlineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=rack-test-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:38:26,493] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:38:26,497] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:38:26,585] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, multi-broker-topic-topic-1 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, multi-replica-topic-5 -> OfflinePartition, multi-broker-topic-5 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, multi-replica-topic-1 -> OfflinePartition, multi-broker-topic-topic-5 -> OfflinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, multi-broker-topic-topic-2 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, multi-replica-topic-4 -> OfflinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, multi-replica-topic-0 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, multi-broker-topic-topic-6 -> OfflinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, test-topic-no-rack-0 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, test-log-segment-topic-0 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, test-topic-4 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OfflinePartition, rack-test-topic-0 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, multi-replica-topic-3 -> OfflinePartition, multi-broker-topic-topic-3 -> OfflinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, multi-broker-topic-topic-0 -> OfflinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, multi-replica-topic-6 -> OfflinePartition, multi-broker-topic-2 -> OfflinePartition, test-topic-3 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, multi-replica-topic-2 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, multi-broker-topic-topic-4 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:38:26,585] INFO [Controller id=1] Ready to serve as the new controller with epoch 18 (kafka.controller.KafkaController)
[2024-09-12 13:38:26,587] INFO [Topic Deletion Manager 1] Handling deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:38:26,591] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:38:26,591] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:38:26,592] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-12 13:38:26,592] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-12 13:38:26,593] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-12 13:38:26,601] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-12 13:38:27,576] DEBUG [Controller id=1] Updating ISRs for partitions: Set(test-log-segment-topic-0). (kafka.controller.KafkaController)
[2024-09-12 13:38:27,579] DEBUG [Controller id=1] ISR for partition test-log-segment-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=10, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=12). (kafka.controller.KafkaController)
[2024-09-12 13:38:28,624] DEBUG [Controller id=1] Updating ISRs for partitions: Set(rack-test-topic-0). (kafka.controller.KafkaController)
[2024-09-12 13:38:28,626] DEBUG [Controller id=1] ISR for partition rack-test-topic-0 updated to LeaderAndIsr(leader=2, leaderEpoch=12, isrWithBrokerEpoch=List(BrokerState(brokerId=2, brokerEpoch=-1), BrokerState(brokerId=1, brokerEpoch=-1)), leaderRecoveryState=RECOVERED, partitionEpoch=15). (kafka.controller.KafkaController)
[2024-09-12 13:38:31,611] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:38:31,612] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:38:31,622] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-6 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), test-topic-no-rack-0 -> List(0, 2), test-topic-0 -> List(0), multi-broker-topic-topic-5 -> List(0, 1, 2), __consumer_offsets-0 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-topic-2 -> List(0, 2, 1), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-12 13:38:31,625] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:38:31,630] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:38:31,633] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), multi-broker-topic-topic-4 -> List(1, 2, 0), multi-broker-topic-topic-1 -> List(1, 0, 2)) (kafka.controller.KafkaController)
[2024-09-12 13:38:31,633] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.15 (kafka.controller.KafkaController)
[2024-09-12 13:38:31,633] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions test-log-segment-topic-0 triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:38:31,648] INFO [Controller id=1] Partition test-log-segment-topic-0 completed preferred replica leader election. New leader is 1 (kafka.controller.KafkaController)
[2024-09-12 13:38:31,649] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(multi-broker-topic-topic-0 -> List(2, 1, 0), multi-broker-topic-topic-3 -> List(2, 0, 1), multi-broker-topic-topic-6 -> List(2, 1, 0)) (kafka.controller.KafkaController)
[2024-09-12 13:38:31,649] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.13043478260869565 (kafka.controller.KafkaController)
[2024-09-12 13:38:31,650] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:39:11,897] INFO [Controller id=1] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-09-12 13:39:11,898] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:39:11,905] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:39:11,905] INFO [Controller id=1] New broker startup callback for 0 (kafka.controller.KafkaController)
[2024-09-12 13:39:11,916] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 0 rack: 0) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: 0) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:39:11,942] INFO [Controller id=1] Some replicas [Topic=multi-broker-topic,Partition=4,Replica=0],[Topic=multi-replica-topic,Partition=6,Replica=0],[Topic=multi-replica-topic,Partition=2,Replica=0],[Topic=multi-replica-topic,Partition=0,Replica=0],[Topic=multi-replica-topic,Partition=1,Replica=0],[Topic=multi-replica-topic,Partition=5,Replica=0],[Topic=multi-broker-topic,Partition=1,Replica=0],[Topic=multi-replica-topic,Partition=4,Replica=0],[Topic=multi-replica-topic,Partition=3,Replica=0],[Topic=multi-broker-topic,Partition=5,Replica=0] for topics scheduled for deletion multi-broker-topic,multi-replica-topic are on the newly restarted brokers 0. Signaling restart of topic deletion for these topics (kafka.controller.KafkaController)
[2024-09-12 13:39:11,943] INFO [Topic Deletion Manager 1] Handling deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:39:11,944] INFO [Topic Deletion Manager 1] Deletion of topic multi-broker-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-09-12 13:39:11,945] INFO [Topic Deletion Manager 1] Deletion of topic multi-replica-topic (re)started (kafka.controller.TopicDeletionManager)
[2024-09-12 13:39:11,957] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 13:39:11,983] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-12 13:39:12,003] DEBUG [Controller id=1] Register BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2024-09-12 13:39:12,007] INFO [Controller id=1] Updated broker epochs cache: HashMap(0 -> 2412, 1 -> 2283, 2 -> 2321) (kafka.controller.KafkaController)
[2024-09-12 13:39:12,041] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 0 rack: 0) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: 0) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-12 13:39:12,076] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 1: request error = NONE, partition errors = HashMap(multi-replica-topic-4 -> KAFKA_STORAGE_ERROR, multi-broker-topic-3 -> KAFKA_STORAGE_ERROR, multi-broker-topic-0 -> KAFKA_STORAGE_ERROR, multi-replica-topic-0 -> KAFKA_STORAGE_ERROR, multi-replica-topic-3 -> KAFKA_STORAGE_ERROR, multi-replica-topic-6 -> KAFKA_STORAGE_ERROR, multi-replica-topic-2 -> KAFKA_STORAGE_ERROR, multi-replica-topic-5 -> KAFKA_STORAGE_ERROR, multi-replica-topic-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2024-09-12 13:39:12,079] DEBUG [Topic Deletion Manager 1] Deletion failed for replicas [Topic=multi-replica-topic,Partition=6,Replica=1],[Topic=multi-replica-topic,Partition=3,Replica=1],[Topic=multi-broker-topic,Partition=3,Replica=1],[Topic=multi-replica-topic,Partition=5,Replica=1],[Topic=multi-replica-topic,Partition=4,Replica=1],[Topic=multi-replica-topic,Partition=0,Replica=1],[Topic=multi-broker-topic,Partition=0,Replica=1],[Topic=multi-replica-topic,Partition=1,Replica=1],[Topic=multi-replica-topic,Partition=2,Replica=1]. Halting deletion for topics HashSet(multi-broker-topic, multi-replica-topic) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:39:12,081] INFO [Topic Deletion Manager 1] Halted deletion of topics multi-broker-topic,multi-replica-topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2024-09-12 13:39:12,082] INFO [Topic Deletion Manager 1] Handling deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:39:12,083] DEBUG [Controller id=1] Delete topic callback invoked on StopReplica response received from broker 2: request error = NONE, partition errors = HashMap(multi-replica-topic-4 -> KAFKA_STORAGE_ERROR, multi-replica-topic-0 -> KAFKA_STORAGE_ERROR, multi-replica-topic-3 -> KAFKA_STORAGE_ERROR, multi-replica-topic-6 -> KAFKA_STORAGE_ERROR, multi-broker-topic-2 -> KAFKA_STORAGE_ERROR, multi-replica-topic-2 -> KAFKA_STORAGE_ERROR, multi-replica-topic-5 -> KAFKA_STORAGE_ERROR, multi-replica-topic-1 -> KAFKA_STORAGE_ERROR) (kafka.controller.KafkaController)
[2024-09-12 13:39:12,083] DEBUG [Topic Deletion Manager 1] Deletion failed for replicas [Topic=multi-replica-topic,Partition=6,Replica=2],[Topic=multi-replica-topic,Partition=0,Replica=2],[Topic=multi-replica-topic,Partition=4,Replica=2],[Topic=multi-replica-topic,Partition=2,Replica=2],[Topic=multi-replica-topic,Partition=3,Replica=2],[Topic=multi-broker-topic,Partition=2,Replica=2],[Topic=multi-replica-topic,Partition=1,Replica=2],[Topic=multi-replica-topic,Partition=5,Replica=2]. Halting deletion for topics HashSet(multi-broker-topic, multi-replica-topic) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:39:12,084] INFO [Topic Deletion Manager 1] Halted deletion of topics multi-broker-topic,multi-replica-topic due to replica deletion failure (kafka.controller.TopicDeletionManager)
[2024-09-12 13:39:12,084] INFO [Topic Deletion Manager 1] Handling deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:39:32,317] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 19 and epoch zk version is now 19 (kafka.controller.KafkaController)
[2024-09-12 13:39:32,322] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-12 13:39:32,329] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-12 13:39:32,336] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-12 13:39:32,342] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-12 13:39:32,366] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 2412) (kafka.controller.KafkaController)
[2024-09-12 13:39:32,421] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-12 13:39:32,504] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-12 13:39:32,521] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-12 13:39:32,523] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-12 13:39:32,523] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-12 13:39:32,524] INFO [Controller id=0] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-12 13:39:32,524] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-12 13:39:32,532] INFO [Controller id=0] List of topics to be deleted: multi-broker-topic,multi-replica-topic (kafka.controller.KafkaController)
[2024-09-12 13:39:32,533] INFO [Controller id=0] List of topics ineligible for deletion: multi-broker-topic,test-topic,rack-test-topic,multi-broker-topic-topic,multi-replica-topic,test-log-segment-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-12 13:39:32,533] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-12 13:39:32,533] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(multi-broker-topic, multi-replica-topic), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-12 13:39:32,537] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-12 13:39:32,549] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:39:32,560] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: 0) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 13:39:32,562] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:39:32,600] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:39:32,689] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=rack-test-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 13:39:32,689] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:39:32,695] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:39:32,756] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, multi-broker-topic-topic-1 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, multi-replica-topic-5 -> OfflinePartition, multi-broker-topic-5 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, multi-replica-topic-1 -> OfflinePartition, multi-broker-topic-topic-5 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, multi-broker-topic-topic-2 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, multi-replica-topic-4 -> OfflinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, multi-replica-topic-0 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, multi-broker-topic-topic-6 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, test-topic-no-rack-0 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, test-log-segment-topic-0 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, test-topic-4 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OnlinePartition, rack-test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, multi-replica-topic-3 -> OfflinePartition, multi-broker-topic-topic-3 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, multi-broker-topic-topic-0 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, multi-replica-topic-6 -> OfflinePartition, multi-broker-topic-2 -> OfflinePartition, test-topic-3 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, multi-replica-topic-2 -> OfflinePartition, __consumer_offsets-39 -> OnlinePartition, multi-broker-topic-topic-4 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 13:39:32,756] INFO [Controller id=0] Ready to serve as the new controller with epoch 19 (kafka.controller.KafkaController)
[2024-09-12 13:39:32,758] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 13:39:32,764] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:39:32,764] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 13:39:32,764] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-12 13:39:32,764] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-12 13:39:32,766] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-12 13:39:32,772] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-12 13:39:37,789] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:39:37,791] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:39:37,802] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 13:39:37,807] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 13:39:37,808] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 13:39:37,809] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:39:37,817] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:39:37,818] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 13:39:37,818] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:39:37,820] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:44:37,831] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:44:37,831] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:44:37,831] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 13:44:37,832] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 13:44:37,832] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 13:44:37,832] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:44:37,832] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:44:37,832] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 13:44:37,832] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:44:37,832] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:49:37,847] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:49:37,847] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:49:37,848] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 13:49:37,848] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 13:49:37,848] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 13:49:37,848] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:49:37,849] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:49:37,849] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 13:49:37,849] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:49:37,849] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:54:37,860] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:54:37,860] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:54:37,863] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 13:54:37,863] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 13:54:37,863] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 13:54:37,863] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:54:37,864] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:54:37,865] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 13:54:37,865] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:54:37,865] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:59:37,876] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 13:59:37,877] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 13:59:37,880] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 13:59:37,880] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 13:59:37,881] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 13:59:37,881] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:59:37,881] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 13:59:37,882] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 13:59:37,882] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 13:59:37,883] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:04:37,894] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 14:04:37,896] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 14:04:37,897] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 14:04:37,897] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 14:04:37,897] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 14:04:37,897] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:04:37,897] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:04:37,897] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 14:04:37,897] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:04:37,897] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:09:37,899] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 14:09:37,899] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 14:09:37,900] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 14:09:37,900] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 14:09:37,900] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 14:09:37,900] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:09:37,900] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:09:37,901] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 14:09:37,901] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:09:37,901] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:12:32,115] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-09-12 14:12:32,115] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-09-12 14:12:32,115] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-09-12 14:12:32,126] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-46 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-broker-topic-topic-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-17 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-broker-topic-1 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:24,ZkVersion:24,ControllerEpoch:18),test-topic-2 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),multi-replica-topic-5 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:26,ControllerEpoch:19),multi-broker-topic-5 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:18),__consumer_offsets-26 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-replica-topic-1 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:23,ControllerEpoch:19),multi-broker-topic-topic-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-5 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-38 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-1 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-34 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-16 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-41 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-broker-topic-topic-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-20 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-49 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-broker-topic-0 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:24,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-29 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-replica-topic-4 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:23,ControllerEpoch:19),multi-broker-topic-4 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:24,ZkVersion:24,ControllerEpoch:18),test-topic-1 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-25 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-replica-topic-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:27,ControllerEpoch:19),__consumer_offsets-8 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-37 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-broker-topic-topic-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:21,ControllerEpoch:19),__consumer_offsets-4 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),test-topic-no-rack-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:12,ControllerEpoch:19),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-11 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-44 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-23 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),test-log-segment-topic-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:13,ZkVersion:15,ControllerEpoch:19),__consumer_offsets-19 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),test-topic-4 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-32 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-broker-topic-3 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:24,ZkVersion:24,ControllerEpoch:19),test-topic-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),rack-test-topic-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:17,ControllerEpoch:19),__consumer_offsets-28 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-replica-topic-3 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:27,ControllerEpoch:19),multi-broker-topic-topic-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:21,ControllerEpoch:19),__consumer_offsets-7 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-40 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-47 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-14 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-43 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-broker-topic-topic-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:21,ControllerEpoch:19),__consumer_offsets-10 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-22 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-31 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-replica-topic-6 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:27,ControllerEpoch:19),multi-broker-topic-2 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:19,ControllerEpoch:19),test-topic-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),multi-replica-topic-2 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:26,ControllerEpoch:19),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),multi-broker-topic-topic-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-35 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-2 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19) (kafka.controller.KafkaController)
[2024-09-12 14:12:37,137] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-09-12 14:12:37,137] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-09-12 14:12:37,137] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-09-12 14:12:37,140] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-46 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-broker-topic-topic-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-17 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-broker-topic-1 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:24,ZkVersion:24,ControllerEpoch:18),test-topic-2 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),multi-replica-topic-5 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:26,ControllerEpoch:19),multi-broker-topic-5 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:18),__consumer_offsets-26 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-replica-topic-1 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:23,ControllerEpoch:19),multi-broker-topic-topic-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-5 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-38 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-1 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-34 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-16 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-41 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-broker-topic-topic-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-20 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-49 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-broker-topic-0 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:24,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-29 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-replica-topic-4 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:23,ControllerEpoch:19),multi-broker-topic-4 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:24,ZkVersion:24,ControllerEpoch:18),test-topic-1 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-25 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-replica-topic-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:27,ControllerEpoch:19),__consumer_offsets-8 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-37 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-broker-topic-topic-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:21,ControllerEpoch:19),__consumer_offsets-4 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),test-topic-no-rack-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:12,ControllerEpoch:19),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-11 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-44 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-23 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),test-log-segment-topic-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:13,ZkVersion:15,ControllerEpoch:19),__consumer_offsets-19 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),test-topic-4 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-32 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-broker-topic-3 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:24,ZkVersion:24,ControllerEpoch:19),test-topic-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),rack-test-topic-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:17,ControllerEpoch:19),__consumer_offsets-28 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-replica-topic-3 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:27,ControllerEpoch:19),multi-broker-topic-topic-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:21,ControllerEpoch:19),__consumer_offsets-7 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-40 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-47 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-14 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-43 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-broker-topic-topic-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:21,ControllerEpoch:19),__consumer_offsets-10 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-22 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-31 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-replica-topic-6 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:27,ControllerEpoch:19),multi-broker-topic-2 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:19,ControllerEpoch:19),test-topic-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),multi-replica-topic-2 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:26,ControllerEpoch:19),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),multi-broker-topic-topic-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-35 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-2 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19) (kafka.controller.KafkaController)
[2024-09-12 14:12:42,156] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-09-12 14:12:42,157] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-09-12 14:12:42,157] DEBUG [Controller id=0] Live brokers:  (kafka.controller.KafkaController)
[2024-09-12 14:12:42,172] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-46 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-broker-topic-topic-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-17 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-broker-topic-1 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:24,ZkVersion:24,ControllerEpoch:18),test-topic-2 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),multi-replica-topic-5 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:26,ControllerEpoch:19),multi-broker-topic-5 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:18),__consumer_offsets-26 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-replica-topic-1 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:23,ControllerEpoch:19),multi-broker-topic-topic-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-5 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-38 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-1 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-34 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-16 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-41 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-broker-topic-topic-2 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-20 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-49 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-broker-topic-0 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:24,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-29 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-replica-topic-4 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:23,ControllerEpoch:19),multi-broker-topic-4 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:24,ZkVersion:24,ControllerEpoch:18),test-topic-1 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-25 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-replica-topic-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:27,ControllerEpoch:19),__consumer_offsets-8 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-37 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-broker-topic-topic-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:21,ControllerEpoch:19),__consumer_offsets-4 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),test-topic-no-rack-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:12,ControllerEpoch:19),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-11 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-44 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-23 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),test-log-segment-topic-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:13,ZkVersion:15,ControllerEpoch:19),__consumer_offsets-19 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),test-topic-4 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-32 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),multi-broker-topic-3 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:24,ZkVersion:24,ControllerEpoch:19),test-topic-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),rack-test-topic-0 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:17,ControllerEpoch:19),__consumer_offsets-28 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-replica-topic-3 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:27,ControllerEpoch:19),multi-broker-topic-topic-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:21,ControllerEpoch:19),__consumer_offsets-7 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-40 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-47 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-14 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-43 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-broker-topic-topic-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:21,ControllerEpoch:19),__consumer_offsets-10 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-22 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-31 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:19),multi-replica-topic-6 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:27,ControllerEpoch:19),multi-broker-topic-2 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:19,ControllerEpoch:19),test-topic-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),multi-replica-topic-2 -> (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:26,ControllerEpoch:19),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),multi-broker-topic-topic-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:19,ZkVersion:24,ControllerEpoch:19),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:21,ZkVersion:21,ControllerEpoch:18),__consumer_offsets-35 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19),__consumer_offsets-2 -> (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:22,ZkVersion:22,ControllerEpoch:19) (kafka.controller.KafkaController)
[2024-09-12 14:12:43,135] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 14:12:43,135] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 14:12:43,135] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 14:12:43,136] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-09-12 14:12:43,136] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-12 14:12:43,137] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 14:12:43,137] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 14:12:43,138] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-09-12 14:12:43,138] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-09-12 14:12:43,138] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-12 14:12:43,139] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-09-12 14:12:54,938] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-12 14:12:54,955] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 20 and epoch zk version is now 20 (kafka.controller.KafkaController)
[2024-09-12 14:12:54,957] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-12 14:12:54,959] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-12 14:12:54,961] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-12 14:12:54,962] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-12 14:12:54,978] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 2523) (kafka.controller.KafkaController)
[2024-09-12 14:12:54,996] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-12 14:12:55,030] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-12 14:12:55,037] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-12 14:12:55,039] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-12 14:12:55,039] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-12 14:12:55,039] INFO [Controller id=0] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-12 14:12:55,040] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-12 14:12:55,044] INFO [Controller id=0] List of topics to be deleted: multi-broker-topic,multi-replica-topic (kafka.controller.KafkaController)
[2024-09-12 14:12:55,044] INFO [Controller id=0] List of topics ineligible for deletion: multi-broker-topic,test-topic,rack-test-topic,multi-broker-topic-topic,multi-replica-topic,test-log-segment-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-12 14:12:55,044] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-12 14:12:55,044] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(multi-broker-topic, multi-replica-topic), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-12 14:12:55,047] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-12 14:12:55,055] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 14:12:55,062] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 14:12:55,090] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 14:12:55,149] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=rack-test-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 14:12:55,150] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 14:12:55,152] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 14:12:55,187] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, multi-broker-topic-topic-1 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, multi-replica-topic-5 -> OfflinePartition, multi-broker-topic-5 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, multi-replica-topic-1 -> OfflinePartition, multi-broker-topic-topic-5 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, multi-broker-topic-topic-2 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, multi-replica-topic-4 -> OfflinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, multi-replica-topic-0 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, multi-broker-topic-topic-6 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, test-topic-no-rack-0 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, test-log-segment-topic-0 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, test-topic-4 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OnlinePartition, rack-test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, multi-replica-topic-3 -> OfflinePartition, multi-broker-topic-topic-3 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, multi-broker-topic-topic-0 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, multi-replica-topic-6 -> OfflinePartition, multi-broker-topic-2 -> OfflinePartition, test-topic-3 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, multi-replica-topic-2 -> OfflinePartition, __consumer_offsets-39 -> OnlinePartition, multi-broker-topic-topic-4 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 14:12:55,187] INFO [Controller id=0] Ready to serve as the new controller with epoch 20 (kafka.controller.KafkaController)
[2024-09-12 14:12:55,189] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 14:12:55,191] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 14:12:55,191] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 14:12:55,191] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-12 14:12:55,191] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-12 14:12:55,192] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-12 14:12:55,197] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-12 14:12:55,572] INFO [RequestSendThread controllerId=0] Controller 0 connected to AASPL176.alignedautomation.com:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 14:13:00,213] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 14:13:00,214] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 14:13:00,226] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 14:13:00,231] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 14:13:00,233] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 14:13:00,233] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:13:00,240] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:13:00,240] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 14:13:00,240] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:13:00,240] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:18:00,253] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 14:18:00,253] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 14:18:00,254] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 14:18:00,254] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 14:18:00,254] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 14:18:00,254] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:18:00,255] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:18:00,255] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 14:18:00,255] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:18:00,255] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:23:00,267] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 14:23:00,267] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 14:23:00,268] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 14:23:00,268] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 14:23:00,268] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 14:23:00,268] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:23:00,269] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:23:00,269] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 14:23:00,269] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:23:00,269] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:28:00,276] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 14:28:00,277] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 14:28:00,280] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 14:28:00,280] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 14:28:00,280] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 14:28:00,281] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:28:00,281] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:28:00,282] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 14:28:00,282] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:28:00,283] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:33:00,297] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 14:33:00,297] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 14:33:00,299] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 14:33:00,300] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 14:33:00,300] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 14:33:00,300] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:33:00,301] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:33:00,302] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 14:33:00,302] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:33:00,303] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:38:00,306] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 14:38:00,306] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 14:38:00,307] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 14:38:00,307] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 14:38:00,307] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 14:38:00,307] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:38:00,307] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:38:00,308] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 14:38:00,308] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:38:00,308] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:43:00,324] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 14:43:00,324] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 14:43:00,327] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 14:43:00,328] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 14:43:00,328] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 14:43:00,328] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:43:00,329] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:43:00,330] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 14:43:00,330] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:43:00,331] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:48:00,346] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 14:48:00,346] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 14:48:00,346] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 14:48:00,346] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 14:48:00,347] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 14:48:00,347] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:48:00,347] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:48:00,347] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 14:48:00,347] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:48:00,347] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:53:00,350] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 14:53:00,350] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 14:53:00,351] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 14:53:00,351] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 14:53:00,352] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 14:53:00,352] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:53:00,352] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:53:00,352] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 14:53:00,352] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:53:00,352] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:58:00,369] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 14:58:00,369] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 14:58:00,369] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 14:58:00,369] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 14:58:00,370] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 14:58:00,370] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:58:00,370] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 14:58:00,370] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 14:58:00,370] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 14:58:00,370] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:03:00,371] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 15:03:00,379] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 15:03:00,381] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 15:03:00,381] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 15:03:00,381] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 15:03:00,381] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:03:00,382] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:03:00,383] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 15:03:00,383] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:03:00,384] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:08:00,386] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 15:08:00,386] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 15:08:00,387] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 15:08:00,387] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 15:08:00,387] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 15:08:00,387] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:08:00,387] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:08:00,387] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 15:08:00,387] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:08:00,387] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:13:00,390] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 15:13:00,390] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 15:13:00,390] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 15:13:00,390] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 15:13:00,390] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 15:13:00,390] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:13:00,391] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:13:00,391] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 15:13:00,391] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:13:00,391] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:18:00,397] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 15:18:00,397] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 15:18:00,398] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 15:18:00,398] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 15:18:00,398] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 15:18:00,398] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:18:00,398] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:18:00,398] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 15:18:00,398] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:18:00,398] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:23:00,402] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 15:23:00,402] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 15:23:00,403] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 15:23:00,403] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 15:23:00,403] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 15:23:00,403] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:23:00,403] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:23:00,403] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 15:23:00,403] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:23:00,403] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:28:00,412] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 15:28:00,412] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 15:28:00,413] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 15:28:00,413] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 15:28:00,413] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 15:28:00,413] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:28:00,413] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:28:00,413] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 15:28:00,414] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:28:00,414] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:33:00,429] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 15:33:00,429] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 15:33:00,430] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 15:33:00,430] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 15:33:00,430] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 15:33:00,430] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:33:00,430] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:33:00,430] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 15:33:00,430] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:33:00,430] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:38:00,431] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 15:38:00,431] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 15:38:00,432] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 15:38:00,432] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 15:38:00,432] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 15:38:00,432] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:38:00,432] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:38:00,433] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 15:38:00,433] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:38:00,433] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:43:00,447] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 15:43:00,447] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 15:43:00,447] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 15:43:00,447] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 15:43:00,448] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 15:43:00,448] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:43:00,448] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:43:00,448] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 15:43:00,448] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:43:00,448] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:48:00,456] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 15:48:00,457] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 15:48:00,460] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 15:48:00,460] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 15:48:00,460] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 15:48:00,460] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:48:00,461] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:48:00,462] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 15:48:00,462] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:48:00,462] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:53:00,470] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 15:53:00,470] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 15:53:00,471] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 15:53:00,471] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 15:53:00,471] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 15:53:00,471] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:53:00,471] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:53:00,472] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 15:53:00,472] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:53:00,472] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:58:00,482] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 15:58:00,482] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 15:58:00,483] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 15:58:00,483] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 15:58:00,483] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 15:58:00,483] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:58:00,484] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 15:58:00,484] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 15:58:00,484] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 15:58:00,484] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:03:00,487] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 16:03:00,491] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 16:03:00,491] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 16:03:00,491] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 16:03:00,492] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 16:03:00,492] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:03:00,492] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:03:00,492] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 16:03:00,492] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:03:00,492] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:08:00,497] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 16:08:00,497] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 16:08:00,499] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 16:08:00,499] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 16:08:00,499] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 16:08:00,499] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:08:00,499] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:08:00,500] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 16:08:00,500] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:08:00,500] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:13:00,503] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 16:13:00,503] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 16:13:00,504] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 16:13:00,504] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 16:13:00,504] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 16:13:00,504] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:13:00,504] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:13:00,504] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 16:13:00,504] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:13:00,504] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:18:00,519] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 16:18:00,519] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 16:18:00,520] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 16:18:00,520] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 16:18:00,521] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 16:18:00,521] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:18:00,521] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:18:00,521] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 16:18:00,521] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:18:00,522] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:23:00,538] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 16:23:00,538] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 16:23:00,539] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 16:23:00,539] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 16:23:00,539] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 16:23:00,539] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:23:00,539] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:23:00,540] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 16:23:00,540] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:23:00,540] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:28:00,545] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 16:28:00,545] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 16:28:00,546] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 16:28:00,546] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 16:28:00,546] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 16:28:00,546] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:28:00,546] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:28:00,546] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 16:28:00,546] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:28:00,546] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:33:00,555] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 16:33:00,555] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 16:33:00,555] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 16:33:00,556] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 16:33:00,556] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 16:33:00,557] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:33:00,557] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:33:00,557] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 16:33:00,557] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:33:00,557] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:38:00,568] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 16:38:00,568] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 16:38:00,569] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 16:38:00,569] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 16:38:00,570] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 16:38:00,570] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:38:00,571] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:38:00,571] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 16:38:00,571] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:38:00,572] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:43:00,583] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 16:43:00,583] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 16:43:00,584] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 16:43:00,584] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 16:43:00,584] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 16:43:00,584] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:43:00,584] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:43:00,584] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 16:43:00,584] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:43:00,584] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:48:00,596] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 16:48:00,596] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 16:48:00,597] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 16:48:00,597] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 16:48:00,598] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 16:48:00,598] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:48:00,598] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:48:00,598] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 16:48:00,598] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:48:00,598] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:53:00,602] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 16:53:00,602] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 16:53:00,604] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 16:53:00,604] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 16:53:00,604] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 16:53:00,604] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:53:00,604] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:53:00,605] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 16:53:00,605] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:53:00,605] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:58:00,613] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 16:58:00,613] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 16:58:00,613] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 16:58:00,613] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 16:58:00,614] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 16:58:00,614] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:58:00,614] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 16:58:00,614] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 16:58:00,614] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 16:58:00,614] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:03:00,623] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 17:03:00,626] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 17:03:00,627] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 17:03:00,627] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 17:03:00,627] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 17:03:00,627] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:03:00,627] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:03:00,627] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 17:03:00,627] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:03:00,628] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:08:00,640] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 17:08:00,640] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 17:08:00,642] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 17:08:00,642] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 17:08:00,642] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 17:08:00,642] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:08:00,643] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:08:00,643] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 17:08:00,643] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:08:00,643] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:13:00,655] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 17:13:00,655] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 17:13:00,656] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 17:13:00,657] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 17:13:00,657] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 17:13:00,657] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:13:00,657] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:13:00,658] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 17:13:00,658] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:13:00,658] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:18:00,660] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 17:18:00,660] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 17:18:00,661] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 17:18:00,661] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 17:18:00,661] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 17:18:00,661] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:18:00,661] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:18:00,661] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 17:18:00,661] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:18:00,661] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:23:00,673] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 17:23:00,673] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 17:23:00,674] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 17:23:00,674] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 17:23:00,674] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 17:23:00,674] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:23:00,674] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:23:00,674] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 17:23:00,675] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:23:00,675] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:28:00,683] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 17:28:00,683] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 17:28:00,684] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 17:28:00,684] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 17:28:00,684] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 17:28:00,684] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:28:00,684] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:28:00,684] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 17:28:00,684] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:28:00,684] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:33:00,685] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 17:33:00,686] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 17:33:00,687] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 17:33:00,687] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 17:33:00,687] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 17:33:00,688] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:33:00,688] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:33:00,689] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 17:33:00,689] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:33:00,689] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:38:00,701] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 17:38:00,701] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 17:38:00,701] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 17:38:00,701] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 17:38:00,701] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 17:38:00,701] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:38:00,701] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:38:00,701] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 17:38:00,701] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:38:00,702] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:43:00,717] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 17:43:00,717] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 17:43:00,717] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 17:43:00,717] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 17:43:00,718] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 17:43:00,718] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:43:00,718] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:43:00,718] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 17:43:00,718] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:43:00,718] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:48:00,727] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 17:48:00,727] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 17:48:00,728] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 17:48:00,728] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 17:48:00,728] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 17:48:00,728] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:48:00,728] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:48:00,728] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 17:48:00,728] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:48:00,728] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:53:00,737] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 17:53:00,737] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 17:53:00,738] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 17:53:00,738] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 17:53:00,739] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 17:53:00,739] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:53:00,739] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:53:00,739] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 17:53:00,739] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:53:00,739] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:58:00,742] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 17:58:00,742] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 17:58:00,743] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 17:58:00,743] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 17:58:00,743] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 17:58:00,743] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:58:00,743] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 17:58:00,743] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 17:58:00,743] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 17:58:00,743] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:01:05,590] INFO [Controller id=0] New topics: [HashSet(test-custom-partitioner)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test-custom-partitioner,Some(ApKKjkmEStWg2FveQKP_Ag),Map(test-custom-partitioner-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), test-custom-partitioner-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), test-custom-partitioner-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-12 18:01:05,594] INFO [Controller id=0] New partition creation callback for test-custom-partitioner-0,test-custom-partitioner-1,test-custom-partitioner-2 (kafka.controller.KafkaController)
[2024-09-12 18:01:05,629] INFO [RequestSendThread controllerId=0] Controller 0 connected to AASPL176.alignedautomation.com:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 18:03:00,758] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 18:03:00,758] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 18:03:00,758] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 18:03:00,758] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 18:03:00,758] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 18:03:00,758] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:03:00,759] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:03:00,759] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 18:03:00,759] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:03:00,759] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:08:00,785] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 18:08:00,785] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 18:08:00,786] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 18:08:00,786] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 18:08:00,786] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 18:08:00,786] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:08:00,786] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:08:00,786] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 18:08:00,786] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:08:00,786] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:13:00,808] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 18:13:00,809] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 18:13:00,811] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 18:13:00,811] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 18:13:00,811] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 18:13:00,811] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:13:00,812] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:13:00,812] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 18:13:00,812] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:13:00,813] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:18:00,823] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 18:18:00,823] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 18:18:00,825] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 18:18:00,825] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 18:18:00,825] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 18:18:00,825] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:18:00,826] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:18:00,826] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 18:18:00,826] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:18:00,827] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:23:00,843] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 18:23:00,843] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 18:23:00,843] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 18:23:00,843] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 18:23:00,843] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 18:23:00,843] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:23:00,843] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:23:00,844] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 18:23:00,844] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:23:00,844] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:28:00,854] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 18:28:00,854] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 18:28:00,855] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 18:28:00,855] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 18:28:00,857] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 18:28:00,857] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:28:00,857] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:28:00,857] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 18:28:00,857] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:28:00,857] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:33:00,876] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 18:33:00,876] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 18:33:00,877] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 18:33:00,877] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 18:33:00,878] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 18:33:00,878] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:33:00,878] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:33:00,878] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 18:33:00,878] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:33:00,879] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:38:00,884] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 18:38:00,885] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 18:38:00,886] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 18:38:00,886] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 18:38:00,886] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 18:38:00,886] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:38:00,887] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:38:00,887] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 18:38:00,887] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:38:00,888] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:43:00,900] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 18:43:00,900] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 18:43:00,900] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 18:43:00,900] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 18:43:00,901] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 18:43:00,901] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:43:00,901] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:43:00,901] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 18:43:00,901] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:43:00,901] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:48:00,905] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 18:48:00,905] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 18:48:00,905] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 18:48:00,905] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 18:48:00,905] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 18:48:00,905] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:48:00,906] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:48:00,906] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 18:48:00,906] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:48:00,906] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:53:00,908] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 18:53:00,908] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 18:53:00,908] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 18:53:00,908] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 18:53:00,908] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 18:53:00,908] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:53:00,909] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:53:00,909] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 18:53:00,909] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:53:00,909] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:58:00,920] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 18:58:00,920] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 18:58:00,920] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 18:58:00,920] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 18:58:00,921] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 18:58:00,921] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:58:00,921] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 18:58:00,921] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 18:58:00,921] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 18:58:00,921] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:03:00,922] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 19:03:00,928] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 19:03:00,930] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 19:03:00,930] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 19:03:00,930] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 19:03:00,930] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:03:00,931] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:03:00,931] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 19:03:00,931] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:03:00,931] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:16:05,885] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-09-12 19:16:05,885] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-12 19:16:05,888] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 19:16:05,889] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 19:16:05,890] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-09-12 19:16:05,890] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-09-12 19:16:05,891] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-12 19:16:05,895] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-09-12 19:16:05,951] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 21 and epoch zk version is now 21 (kafka.controller.KafkaController)
[2024-09-12 19:16:05,952] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-12 19:16:05,964] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-12 19:16:05,966] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-12 19:16:05,967] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-12 19:16:05,975] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 2586) (kafka.controller.KafkaController)
[2024-09-12 19:16:05,982] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-12 19:16:06,012] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-12 19:16:06,018] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-12 19:16:06,018] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-12 19:16:06,018] INFO [Controller id=0] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, test-custom-partitioner, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-12 19:16:06,018] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-12 19:16:06,021] INFO [Controller id=0] List of topics to be deleted: multi-broker-topic,multi-replica-topic (kafka.controller.KafkaController)
[2024-09-12 19:16:06,021] INFO [Controller id=0] List of topics ineligible for deletion: multi-broker-topic,test-topic,rack-test-topic,multi-broker-topic-topic,multi-replica-topic,test-log-segment-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-12 19:16:06,021] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-12 19:16:06,021] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(multi-broker-topic, multi-replica-topic), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-12 19:16:06,021] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-12 19:16:06,077] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-12 19:16:06,113] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 19:16:06,114] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 19:16:06,116] INFO [RequestSendThread controllerId=0] Controller 0 connected to AASPL176.alignedautomation.com:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-12 19:16:06,120] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 19:16:06,182] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=rack-test-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=test-custom-partitioner,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=test-custom-partitioner,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=test-custom-partitioner,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-12 19:16:06,182] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 19:16:06,182] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 19:16:06,201] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, multi-broker-topic-topic-1 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, multi-replica-topic-5 -> OfflinePartition, multi-broker-topic-5 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, multi-replica-topic-1 -> OfflinePartition, multi-broker-topic-topic-5 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, test-custom-partitioner-1 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, multi-broker-topic-topic-2 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, multi-replica-topic-4 -> OfflinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, multi-replica-topic-0 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, multi-broker-topic-topic-6 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, test-custom-partitioner-0 -> OnlinePartition, test-topic-no-rack-0 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, test-log-segment-topic-0 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, test-topic-4 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OnlinePartition, rack-test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, multi-replica-topic-3 -> OfflinePartition, multi-broker-topic-topic-3 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, multi-broker-topic-topic-0 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, multi-replica-topic-6 -> OfflinePartition, multi-broker-topic-2 -> OfflinePartition, test-topic-3 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, multi-replica-topic-2 -> OfflinePartition, __consumer_offsets-39 -> OnlinePartition, multi-broker-topic-topic-4 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, test-custom-partitioner-2 -> OnlinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-12 19:16:06,201] INFO [Controller id=0] Ready to serve as the new controller with epoch 21 (kafka.controller.KafkaController)
[2024-09-12 19:16:06,202] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-12 19:16:06,204] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 19:16:06,204] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-12 19:16:06,204] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-12 19:16:06,204] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-12 19:16:06,204] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-12 19:16:06,206] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-12 19:16:11,213] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 19:16:11,213] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 19:16:11,214] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 19:16:11,214] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 19:16:11,214] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 19:16:11,214] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:16:11,214] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:16:11,214] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 19:16:11,214] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:16:11,214] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:21:11,228] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 19:21:11,228] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 19:21:11,228] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 19:21:11,228] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 19:21:11,228] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 19:21:11,228] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:21:11,228] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:21:11,229] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 19:21:11,229] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:21:11,229] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:26:11,253] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 19:26:11,253] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 19:26:11,253] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 19:26:11,253] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 19:26:11,253] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 19:26:11,253] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:26:11,253] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:26:11,253] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 19:26:11,253] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:26:11,254] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:31:11,262] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 19:31:11,262] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 19:31:11,262] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 19:31:11,262] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 19:31:11,262] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 19:31:11,262] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:31:11,262] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:31:11,262] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 19:31:11,263] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:31:11,263] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:36:11,276] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 19:36:11,276] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 19:36:11,276] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 19:36:11,276] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 19:36:11,276] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 19:36:11,277] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:36:11,277] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:36:11,277] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 19:36:11,277] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:36:11,278] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:41:11,294] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 19:41:11,294] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 19:41:11,294] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 19:41:11,295] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 19:41:11,295] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 19:41:11,295] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:41:11,295] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:41:11,295] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 19:41:11,295] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:41:11,295] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:46:11,303] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 19:46:11,303] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 19:46:11,303] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 19:46:11,303] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 19:46:11,303] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 19:46:11,303] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:46:11,303] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:46:11,303] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 19:46:11,303] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:46:11,303] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:51:11,317] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 19:51:11,317] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 19:51:11,317] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 19:51:11,317] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 19:51:11,318] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 19:51:11,318] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:51:11,318] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:51:11,318] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 19:51:11,318] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:51:11,319] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:56:11,340] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 19:56:11,341] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 19:56:11,342] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 19:56:11,342] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 19:56:11,342] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 19:56:11,342] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:56:11,343] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 19:56:11,343] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 19:56:11,343] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 19:56:11,343] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:01:11,351] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 20:01:11,353] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 20:01:11,353] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 20:01:11,353] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 20:01:11,353] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 20:01:11,353] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:01:11,354] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:01:11,354] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 20:01:11,354] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:01:11,354] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:06:11,368] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 20:06:11,368] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 20:06:11,368] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 20:06:11,368] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 20:06:11,368] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 20:06:11,370] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:06:11,370] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:06:11,370] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 20:06:11,370] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:06:11,370] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:11:11,383] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 20:11:11,383] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 20:11:11,384] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 20:11:11,384] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 20:11:11,384] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 20:11:11,384] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:11:11,384] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:11:11,384] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 20:11:11,384] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:11:11,384] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:16:11,390] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 20:16:11,390] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 20:16:11,391] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 20:16:11,391] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 20:16:11,391] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 20:16:11,391] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:16:11,391] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:16:11,391] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 20:16:11,391] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:16:11,392] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:21:11,399] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 20:21:11,399] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 20:21:11,399] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 20:21:11,399] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 20:21:11,399] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 20:21:11,399] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:21:11,399] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:21:11,399] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 20:21:11,399] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:21:11,399] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:26:11,409] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 20:26:11,409] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 20:26:11,409] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 20:26:11,409] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 20:26:11,409] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 20:26:11,409] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:26:11,410] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:26:11,410] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 20:26:11,410] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:26:11,410] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:31:11,424] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 20:31:11,424] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 20:31:11,425] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 20:31:11,425] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 20:31:11,425] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 20:31:11,426] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:31:11,426] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:31:11,426] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 20:31:11,426] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:31:11,426] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:36:11,428] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 20:36:11,428] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 20:36:11,429] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 20:36:11,429] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 20:36:11,429] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 20:36:11,430] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:36:11,430] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:36:11,430] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 20:36:11,430] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:36:11,431] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:41:11,438] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 20:41:11,438] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 20:41:11,438] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 20:41:11,438] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 20:41:11,438] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 20:41:11,439] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:41:11,439] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:41:11,439] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 20:41:11,439] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:41:11,439] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:46:11,449] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 20:46:11,449] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 20:46:11,450] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 20:46:11,450] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 20:46:11,450] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 20:46:11,451] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:46:11,451] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:46:11,451] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 20:46:11,451] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:46:11,452] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:51:11,463] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 20:51:11,463] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 20:51:11,463] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 20:51:11,463] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 20:51:11,464] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 20:51:11,464] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:51:11,464] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:51:11,464] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 20:51:11,464] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:51:11,464] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:56:11,471] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 20:56:11,471] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 20:56:11,472] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 20:56:11,472] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 20:56:11,472] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 20:56:11,472] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:56:11,473] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 20:56:11,473] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 20:56:11,473] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 20:56:11,473] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 21:01:11,481] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 21:01:11,482] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 21:01:11,483] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 21:01:11,483] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 21:01:11,483] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 21:01:11,483] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 21:01:11,483] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 21:01:11,483] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 21:01:11,483] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 21:01:11,483] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 21:06:11,491] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 21:06:11,491] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 21:06:11,492] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 21:06:11,493] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 21:06:11,493] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 21:06:11,493] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 21:06:11,494] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 21:06:11,494] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 21:06:11,494] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 21:06:11,494] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 21:11:11,503] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-12 21:11:11,504] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-12 21:11:11,504] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-12 21:11:11,504] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-12 21:11:11,505] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-12 21:11:11,505] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 21:11:11,505] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-12 21:11:11,505] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-12 21:11:11,506] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-12 21:11:11,506] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 11:32:19,669] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-09-13 11:32:19,730] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-13 11:32:19,730] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-13 11:32:19,730] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-13 11:32:19,730] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-09-13 11:32:19,730] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-13 11:32:19,730] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-09-13 11:32:19,732] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-09-13 11:32:19,888] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 22 and epoch zk version is now 22 (kafka.controller.KafkaController)
[2024-09-13 11:32:19,889] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-13 11:32:19,890] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-13 11:32:19,890] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-13 11:32:19,892] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-13 11:32:19,893] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 2639) (kafka.controller.KafkaController)
[2024-09-13 11:32:19,897] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-13 11:32:19,914] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-13 11:32:19,997] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-13 11:32:19,997] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-13 11:32:19,997] INFO [Controller id=0] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, test-custom-partitioner, __consumer_offsets, test-topic-no-rack) (kafka.controller.KafkaController)
[2024-09-13 11:32:19,997] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-13 11:32:19,999] INFO [Controller id=0] List of topics to be deleted: multi-broker-topic,multi-replica-topic (kafka.controller.KafkaController)
[2024-09-13 11:32:19,999] INFO [Controller id=0] List of topics ineligible for deletion: multi-broker-topic,test-topic,rack-test-topic,multi-broker-topic-topic,multi-replica-topic,test-log-segment-topic,__consumer_offsets,test-topic-no-rack (kafka.controller.KafkaController)
[2024-09-13 11:32:19,999] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-13 11:32:20,000] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(multi-broker-topic, multi-replica-topic), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, rack-test-topic, multi-broker-topic-topic, multi-replica-topic, test-log-segment-topic, __consumer_offsets, test-topic-no-rack) (kafka.controller.TopicDeletionManager)
[2024-09-13 11:32:20,000] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-13 11:32:20,019] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-13 11:32:20,030] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-13 11:32:20,031] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-13 11:32:20,033] INFO [RequestSendThread controllerId=0] Controller 0 connected to AASPL176.alignedautomation.com:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-13 11:32:20,033] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-13 11:32:20,085] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=27,Replica=0] -> OnlineReplica, [Topic=rack-test-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=0] -> OnlineReplica, [Topic=test-custom-partitioner,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OfflineReplica, [Topic=test-custom-partitioner,Partition=2,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=6,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-topic-no-rack,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=2] -> OfflineReplica, [Topic=test-log-segment-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=4,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OfflineReplica, [Topic=rack-test-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=4,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OnlineReplica, [Topic=test-custom-partitioner,Partition=0,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=3,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OfflineReplica, [Topic=multi-replica-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=multi-replica-topic,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=5,Replica=0] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OfflineReplica, [Topic=multi-broker-topic-topic,Partition=6,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OnlineReplica, [Topic=multi-broker-topic-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OnlineReplica, [Topic=multi-replica-topic,Partition=2,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-13 11:32:20,085] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-13 11:32:20,085] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-13 11:32:20,107] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, multi-broker-topic-topic-1 -> OnlinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, multi-replica-topic-5 -> OfflinePartition, multi-broker-topic-5 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, multi-replica-topic-1 -> OfflinePartition, multi-broker-topic-topic-5 -> OnlinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, test-custom-partitioner-1 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, multi-broker-topic-topic-2 -> OnlinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, multi-broker-topic-0 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, multi-replica-topic-4 -> OfflinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, multi-replica-topic-0 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, multi-broker-topic-topic-6 -> OnlinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, test-custom-partitioner-0 -> OnlinePartition, test-topic-no-rack-0 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, test-log-segment-topic-0 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, test-topic-4 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, multi-broker-topic-3 -> OfflinePartition, test-topic-0 -> OnlinePartition, rack-test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, multi-replica-topic-3 -> OfflinePartition, multi-broker-topic-topic-3 -> OnlinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, multi-broker-topic-topic-0 -> OnlinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, multi-replica-topic-6 -> OfflinePartition, multi-broker-topic-2 -> OfflinePartition, test-topic-3 -> OnlinePartition, __consumer_offsets-27 -> OnlinePartition, multi-replica-topic-2 -> OfflinePartition, __consumer_offsets-39 -> OnlinePartition, multi-broker-topic-topic-4 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, test-custom-partitioner-2 -> OnlinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-13 11:32:20,107] INFO [Controller id=0] Ready to serve as the new controller with epoch 22 (kafka.controller.KafkaController)
[2024-09-13 11:32:20,108] INFO [Topic Deletion Manager 0] Handling deletion for topics multi-broker-topic,multi-replica-topic (kafka.controller.TopicDeletionManager)
[2024-09-13 11:32:20,109] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-13 11:32:20,109] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-13 11:32:20,109] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-13 11:32:20,109] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-13 11:32:20,109] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-13 11:32:20,111] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-13 11:32:25,122] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 11:32:25,122] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 11:32:25,122] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 11:32:25,122] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 11:32:25,123] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 11:32:25,123] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 11:32:25,123] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 11:32:25,123] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 11:32:25,123] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 11:32:25,123] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 11:37:25,129] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 11:37:25,129] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 11:37:25,129] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 11:37:25,129] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 11:37:25,130] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 11:37:25,130] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 11:37:25,130] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 11:37:25,130] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 11:37:25,130] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 11:37:25,130] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 11:42:25,104] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 11:42:25,104] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 11:42:25,105] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 11:42:25,105] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 11:42:25,106] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 11:42:25,106] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 11:42:25,106] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 11:42:25,106] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 11:42:25,107] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 11:42:25,107] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 11:47:25,107] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 11:47:25,107] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 11:47:25,107] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 11:47:25,107] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 11:47:25,107] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 11:47:25,107] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 11:47:25,108] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 11:47:25,108] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 11:47:25,108] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 11:47:25,108] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 11:52:25,122] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 11:52:25,122] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 11:52:25,124] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 11:52:25,124] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 11:52:25,124] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 11:52:25,124] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 11:52:25,124] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 11:52:25,124] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 11:52:25,125] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 11:52:25,125] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 11:57:25,138] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 11:57:25,139] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 11:57:25,139] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 11:57:25,139] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 11:57:25,139] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 11:57:25,140] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 11:57:25,140] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 11:57:25,140] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 11:57:25,140] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 11:57:25,141] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:02:25,143] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 12:02:25,145] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 12:02:25,146] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 12:02:25,146] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 12:02:25,146] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 12:02:25,146] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:02:25,146] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:02:25,146] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 12:02:25,146] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:02:25,146] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:07:25,151] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 12:07:25,151] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 12:07:25,151] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 12:07:25,151] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 12:07:25,151] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 12:07:25,151] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:07:25,151] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:07:25,152] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 12:07:25,152] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:07:25,152] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:12:25,163] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 12:12:25,163] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 12:12:25,163] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 12:12:25,163] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 12:12:25,163] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 12:12:25,164] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:12:25,164] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:12:25,164] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 12:12:25,164] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:12:25,164] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:17:25,172] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 12:17:25,172] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 12:17:25,172] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 12:17:25,172] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 12:17:25,172] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 12:17:25,172] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:17:25,172] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:17:25,172] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 12:17:25,172] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:17:25,172] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:22:25,177] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 12:22:25,177] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 12:22:25,177] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 12:22:25,177] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 12:22:25,177] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 12:22:25,177] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:22:25,178] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:22:25,178] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 12:22:25,178] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:22:25,178] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:27:25,198] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 12:27:25,198] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 12:27:25,198] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 12:27:25,198] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 12:27:25,198] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 12:27:25,198] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:27:25,199] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:27:25,199] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 12:27:25,199] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:27:25,199] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:32:25,209] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 12:32:25,209] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 12:32:25,209] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 12:32:25,209] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 12:32:25,209] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 12:32:25,209] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:32:25,209] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:32:25,209] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 12:32:25,209] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:32:25,209] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:37:25,217] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 12:37:25,219] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 12:37:25,219] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 12:37:25,219] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 12:37:25,219] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 12:37:25,220] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:37:25,220] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:37:25,220] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 12:37:25,220] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:37:25,220] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:42:25,224] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 12:42:25,224] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 12:42:25,224] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 12:42:25,224] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 12:42:25,224] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 12:42:25,224] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:42:25,224] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:42:25,224] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 12:42:25,224] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:42:25,224] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:47:25,236] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 12:47:25,236] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 12:47:25,237] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 12:47:25,237] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 12:47:25,237] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 12:47:25,237] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:47:25,237] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:47:25,237] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 12:47:25,237] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:47:25,238] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:52:25,247] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 12:52:25,247] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 12:52:25,247] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 12:52:25,247] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 12:52:25,247] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 12:52:25,247] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:52:25,247] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:52:25,247] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 12:52:25,247] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:52:25,247] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:57:25,252] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-13 12:57:25,252] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-13 12:57:25,253] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-13 12:57:25,253] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-13 12:57:25,253] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test-log-segment-topic-0 -> List(1, 2), __consumer_offsets-8 -> List(1), __consumer_offsets-35 -> List(1), test-topic-2 -> List(1), __consumer_offsets-47 -> List(1), multi-broker-topic-topic-4 -> List(1, 2, 0), __consumer_offsets-38 -> List(1), __consumer_offsets-17 -> List(1), __consumer_offsets-11 -> List(1), __consumer_offsets-29 -> List(1), __consumer_offsets-41 -> List(1), __consumer_offsets-23 -> List(1), __consumer_offsets-2 -> List(1), __consumer_offsets-14 -> List(1), __consumer_offsets-20 -> List(1), __consumer_offsets-44 -> List(1), __consumer_offsets-5 -> List(1), __consumer_offsets-26 -> List(1), multi-broker-topic-topic-1 -> List(1, 0, 2), __consumer_offsets-32 -> List(1)) (kafka.controller.KafkaController)
[2024-09-13 12:57:25,253] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:57:25,256] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 12:57:25,256] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), multi-broker-topic-topic-0 -> List(2, 1, 0), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), multi-broker-topic-topic-6 -> List(2, 1, 0), rack-test-topic-0 -> List(2, 1), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-43 -> List(2), multi-broker-topic-topic-3 -> List(2, 0, 1), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-13 12:57:25,257] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-13 12:57:25,257] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-13 13:02:25,264] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
