[2024-09-02 19:55:43,927] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-02 19:55:43,947] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-09-02 19:55:43,951] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2024-09-02 19:55:43,986] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-02 19:55:43,990] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-02 19:55:43,993] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-02 19:55:43,995] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-02 19:55:44,009] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2024-09-02 19:55:44,014] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-02 19:55:44,020] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-02 19:55:44,028] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-02 19:55:44,030] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-02 19:55:44,030] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-02 19:55:44,031] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-02 19:55:44,031] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-02 19:55:44,036] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-02 19:55:44,036] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-09-02 19:55:44,036] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-02 19:55:44,038] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-09-02 19:55:44,039] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-02 19:55:44,052] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-02 19:55:44,053] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-02 19:55:44,058] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-02 19:55:44,058] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-09-02 19:55:44,059] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-02 19:55:44,059] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-02 19:55:44,063] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-09-02 19:55:44,064] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-09-02 19:55:44,069] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-02 19:55:44,070] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-02 19:55:44,070] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-02 19:55:44,071] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-02 19:55:44,073] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-02 19:55:44,085] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-02 19:55:44,563] INFO [RequestSendThread controllerId=0] Controller 0 connected to AASPL176.alignedautomation.com:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-02 19:55:49,088] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-02 19:55:49,089] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-02 19:57:09,150] INFO [Controller id=0] New topics: [Set(test-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test-topic,Some(t6GcBSxMSpiFZJa-VEBRYg),Map(test-topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-02 19:57:09,151] INFO [Controller id=0] New partition creation callback for test-topic-0 (kafka.controller.KafkaController)
[2024-09-02 19:59:17,307] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2024-09-02 19:59:17,312] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2024-09-02 19:59:37,595] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(dXKtqSXUQ26MKk2UozpO4Q),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-02 19:59:37,595] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-09-02 20:00:49,102] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-02 20:00:49,107] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-02 20:00:49,112] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-02 20:00:49,116] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-02 20:05:49,127] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-02 20:05:49,127] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-02 20:05:49,129] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-02 20:05:49,129] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-02 20:31:25,395] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-02 20:31:25,427] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-09-02 20:31:25,434] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2024-09-02 20:31:25,486] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-02 20:31:25,490] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-02 20:31:25,495] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-02 20:31:25,501] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-02 20:31:25,521] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2024-09-02 20:31:25,530] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-02 20:31:25,548] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-02 20:31:25,558] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-02 20:31:25,560] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-02 20:31:25,561] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-02 20:31:25,561] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-02 20:31:25,561] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-02 20:31:25,565] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-02 20:31:25,565] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-09-02 20:31:25,565] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-02 20:31:25,566] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-09-02 20:31:25,568] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-02 20:31:25,591] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-02 20:31:25,592] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-02 20:31:25,597] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-02 20:31:25,598] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-09-02 20:31:25,598] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-02 20:31:25,599] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-02 20:31:25,604] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-09-02 20:31:25,605] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-09-02 20:31:25,610] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-02 20:31:25,616] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-02 20:31:25,616] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-02 20:31:25,617] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-02 20:31:25,617] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-02 20:31:25,619] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-02 20:31:25,634] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-02 20:31:25,726] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-02 20:31:30,643] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-02 20:31:30,644] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-02 20:32:02,810] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2024-09-02 20:32:02,811] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-02 20:32:02,817] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-02 20:32:02,817] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2024-09-02 20:32:02,821] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-09-02 20:32:02,824] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 25, 1 -> 45) (kafka.controller.KafkaController)
[2024-09-02 20:32:02,825] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-02 20:32:02,847] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-02 20:32:02,861] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-02 20:32:02,946] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-02 20:32:03,053] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-02 20:32:13,044] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-09-02 20:32:13,044] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-02 20:32:13,051] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-02 20:32:13,051] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2024-09-02 20:32:13,051] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2024-09-02 20:32:13,053] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 25, 1 -> 45, 2 -> 61) (kafka.controller.KafkaController)
[2024-09-02 20:32:13,056] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-02 20:32:13,085] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-02 20:32:13,098] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-02 20:32:13,183] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-02 20:32:13,302] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-02 20:33:03,809] INFO [Controller id=0] New topics: [Set(test-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test-topic,Some(helxWf7RQd-U71umx16O3g),HashMap(test-topic-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), test-topic-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), test-topic-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), test-topic-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), test-topic-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-02 20:33:03,811] INFO [Controller id=0] New partition creation callback for test-topic-4,test-topic-2,test-topic-3,test-topic-1,test-topic-0 (kafka.controller.KafkaController)
[2024-09-02 20:34:14,272] INFO [Controller id=0] New topics: [Set(test_cluster-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test_cluster-topic,Some(jZx8BgHSQLam5AUkVaHVgw),HashMap(test_cluster-topic-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), test_cluster-topic-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), test_cluster-topic-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), test_cluster-topic-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), test_cluster-topic-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-02 20:34:14,272] INFO [Controller id=0] New partition creation callback for test_cluster-topic-3,test_cluster-topic-4,test_cluster-topic-0,test_cluster-topic-1,test_cluster-topic-2 (kafka.controller.KafkaController)
[2024-09-02 20:36:03,991] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-02 20:36:04,013] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2024-09-02 20:36:04,014] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-02 20:36:04,017] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-02 20:36:04,019] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-02 20:36:04,022] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-02 20:36:04,041] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 108) (kafka.controller.KafkaController)
[2024-09-02 20:36:04,055] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-02 20:36:04,075] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-02 20:36:04,084] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-02 20:36:04,085] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-02 20:36:04,086] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-02 20:36:04,087] INFO [Controller id=0] Current list of topics in the cluster: HashSet(test-topic, test_cluster-topic) (kafka.controller.KafkaController)
[2024-09-02 20:36:04,087] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-02 20:36:04,091] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-02 20:36:04,092] INFO [Controller id=0] List of topics ineligible for deletion: test-topic,test_cluster-topic (kafka.controller.KafkaController)
[2024-09-02 20:36:04,092] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-02 20:36:04,092] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(test-topic, test_cluster-topic) (kafka.controller.TopicDeletionManager)
[2024-09-02 20:36:04,094] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-02 20:36:04,108] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-02 20:36:04,115] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-02 20:36:04,125] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-02 20:36:04,143] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-02 20:36:04,181] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap([Topic=test-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=test_cluster-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=test_cluster-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=test_cluster-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=test-topic,Partition=4,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=1,Replica=0] -> OnlineReplica, [Topic=test-topic,Partition=2,Replica=2] -> OfflineReplica, [Topic=test-topic,Partition=3,Replica=1] -> OfflineReplica, [Topic=test_cluster-topic,Partition=0,Replica=1] -> OfflineReplica, [Topic=test_cluster-topic,Partition=1,Replica=0] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-02 20:36:04,181] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-02 20:36:04,184] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-02 20:36:04,221] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap(test_cluster-topic-0 -> OfflinePartition, test-topic-4 -> OnlinePartition, test-topic-2 -> OfflinePartition, test-topic-3 -> OfflinePartition, test-topic-0 -> OfflinePartition, test-topic-1 -> OnlinePartition, test_cluster-topic-4 -> OnlinePartition, test_cluster-topic-3 -> OfflinePartition, test_cluster-topic-2 -> OfflinePartition, test_cluster-topic-1 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-02 20:36:04,222] INFO [Controller id=0] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2024-09-02 20:36:04,229] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-02 20:36:04,230] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-02 20:36:04,230] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-02 20:36:04,230] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-02 20:36:04,231] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-02 20:36:04,241] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-02 20:36:04,245] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-02 20:36:09,248] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-02 20:36:09,249] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-02 20:36:09,251] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-02 20:36:09,252] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-02 20:36:09,252] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap(test_cluster-topic-3 -> List(1), test-topic-0 -> List(1), test_cluster-topic-0 -> List(1), test-topic-3 -> List(1)) (kafka.controller.KafkaController)
[2024-09-02 20:36:09,252] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2024-09-02 20:36:09,254] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-02 20:36:09,254] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap(test-topic-2 -> List(2), test_cluster-topic-2 -> List(2)) (kafka.controller.KafkaController)
[2024-09-02 20:36:09,254] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-02 20:36:09,254] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-02 20:36:13,294] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2024-09-02 20:36:13,294] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-02 20:36:13,301] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-02 20:36:13,302] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2024-09-02 20:36:13,313] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-02 20:36:13,332] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-09-02 20:36:13,339] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 108, 1 -> 132) (kafka.controller.KafkaController)
[2024-09-02 20:36:13,352] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-02 20:36:13,372] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-02 20:36:13,462] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-02 20:36:13,584] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-02 20:36:18,826] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-09-02 20:36:18,826] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-02 20:36:18,832] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-02 20:36:18,832] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2024-09-02 20:36:18,841] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-02 20:36:18,845] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2024-09-02 20:36:18,848] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 108, 1 -> 132, 2 -> 152) (kafka.controller.KafkaController)
[2024-09-02 20:36:18,872] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-02 20:36:18,886] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-02 20:36:18,967] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-02 20:36:19,071] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-02 20:36:40,512] INFO [Controller id=0] New topics: [Set(test-cluster-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test-cluster-topic,Some(LMGZ8sY-TkCrH-CvIqXTDQ),HashMap(test-cluster-topic-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), test-cluster-topic-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), test-cluster-topic-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), test-cluster-topic-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), test-cluster-topic-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-02 20:36:40,514] INFO [Controller id=0] New partition creation callback for test-cluster-topic-4,test-cluster-topic-2,test-cluster-topic-3,test-cluster-topic-1,test-cluster-topic-0 (kafka.controller.KafkaController)
[2024-09-06 12:55:56,437] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 12:55:56,467] INFO [Controller id=0] 0 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2024-09-06 12:55:56,471] INFO [Controller id=0] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2024-09-06 12:55:56,508] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2024-09-06 12:55:56,515] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-06 12:55:56,518] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-06 12:55:56,521] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2024-09-06 12:55:56,540] INFO [Controller id=0] Initialized broker epochs cache: HashMap(0 -> 25) (kafka.controller.KafkaController)
[2024-09-06 12:55:56,549] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2024-09-06 12:55:56,555] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-06 12:55:56,564] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-06 12:55:56,565] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2024-09-06 12:55:56,566] INFO [Controller id=0] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-06 12:55:56,567] INFO [Controller id=0] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-06 12:55:56,567] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-06 12:55:56,570] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-06 12:55:56,571] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2024-09-06 12:55:56,571] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-06 12:55:56,572] INFO [Topic Deletion Manager 0] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2024-09-06 12:55:56,589] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-06 12:55:56,602] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 12:55:56,602] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 12:55:56,609] INFO [ReplicaStateMachine controllerId=0] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 12:55:56,609] DEBUG [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 12:55:56,609] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 12:55:56,610] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 12:55:56,616] DEBUG [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 12:55:56,616] INFO [Controller id=0] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2024-09-06 12:55:56,619] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 12:55:56,623] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 12:55:56,624] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 12:55:56,624] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-06 12:55:56,626] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-06 12:55:56,626] INFO [Controller id=0] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-06 12:55:56,639] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-06 12:55:56,729] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 12:56:01,642] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 12:56:01,642] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 12:56:21,418] INFO [Controller id=0] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2024-09-06 12:56:21,419] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-06 12:56:21,423] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-06 12:56:21,423] INFO [Controller id=0] New broker startup callback for 1 (kafka.controller.KafkaController)
[2024-09-06 12:56:21,431] DEBUG [Controller id=0] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2024-09-06 12:56:21,432] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 12:56:21,433] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 25, 1 -> 45) (kafka.controller.KafkaController)
[2024-09-06 12:56:21,457] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 12:56:21,470] DEBUG [Controller id=1] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-06 12:56:21,542] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9093 (id: 1 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9093 (id: 1 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 12:56:21,657] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 12:56:33,918] INFO [Controller id=0] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-09-06 12:56:33,918] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-06 12:56:33,924] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2024-09-06 12:56:33,924] INFO [Controller id=0] New broker startup callback for 2 (kafka.controller.KafkaController)
[2024-09-06 12:56:33,925] DEBUG [Controller id=0] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2024-09-06 12:56:33,926] INFO [Controller id=0] Updated broker epochs cache: HashMap(0 -> 25, 1 -> 45, 2 -> 61) (kafka.controller.KafkaController)
[2024-09-06 12:56:33,928] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 12:56:33,955] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 12:56:33,968] DEBUG [Controller id=2] Broker 0 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-06 12:56:34,046] WARN [RequestSendThread controllerId=0] Controller 0's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 12:56:34,165] INFO [RequestSendThread controllerId=0] Controller 0 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 13:00:31,064] INFO [Controller id=0] New topics: [Set(test-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(test-topic,Some(REe8ARNrTE2yDJNN0Y2ywA),HashMap(test-topic-4 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), test-topic-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), test-topic-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), test-topic-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), test-topic-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-06 13:00:31,068] INFO [Controller id=0] New partition creation callback for test-topic-4,test-topic-2,test-topic-3,test-topic-1,test-topic-0 (kafka.controller.KafkaController)
[2024-09-06 13:01:01,654] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 13:01:01,654] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 13:01:01,656] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:01:01,657] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:01:01,657] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:01:01,657] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:01:01,657] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:01:01,657] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:01:13,384] DEBUG [Controller id=0] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2024-09-06 13:01:13,387] INFO [Controller id=0] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2024-09-06 13:01:48,030] INFO [Controller id=0] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(bc9kl0TcQLi6LdwYPw150A),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-06 13:01:48,030] INFO [Controller id=0] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2024-09-06 13:06:01,668] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 13:06:01,669] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 13:06:01,673] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:06:01,674] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:06:01,674] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:06:01,674] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:06:01,674] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:06:01,674] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:09:58,788] INFO [Controller id=0] New topics: [Set(multi-broker-topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(multi-broker-topic,Some(oWRWNyomT2C7HmfqT2tGHw),HashMap(multi-broker-topic-3 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), multi-broker-topic-0 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), multi-broker-topic-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), multi-broker-topic-4 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=), multi-broker-topic-1 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2024-09-06 13:09:58,788] INFO [Controller id=0] New partition creation callback for multi-broker-topic-3,multi-broker-topic-0,multi-broker-topic-2,multi-broker-topic-4,multi-broker-topic-1 (kafka.controller.KafkaController)
[2024-09-06 13:11:01,679] INFO [Controller id=0] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 13:11:01,679] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 13:11:01,680] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:11:01,680] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:11:01,680] DEBUG [Controller id=0] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:11:01,680] TRACE [Controller id=0] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:11:01,680] DEBUG [Controller id=0] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:11:01,680] TRACE [Controller id=0] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:14:00,706] INFO [Controller id=0] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-09-06 13:14:00,706] DEBUG [Controller id=0] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-09-06 13:14:00,707] DEBUG [Controller id=0] Live brokers: 1,2 (kafka.controller.KafkaController)
[2024-09-06 13:14:00,710] TRACE [Controller id=0] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),test-topic-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),test-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),test-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-3 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),test-topic-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),test-topic-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-09-06 13:14:01,340] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 13:14:01,341] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 13:14:01,341] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 13:14:01,341] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-09-06 13:14:01,342] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set(0, 1, 2) (kafka.controller.KafkaController)
[2024-09-06 13:14:01,343] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 13:14:01,344] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 13:14:01,344] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 13:14:01,344] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 13:14:01,344] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 13:14:01,345] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 13:14:01,345] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 13:14:01,345] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 13:14:01,346] INFO [RequestSendThread controllerId=0] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 13:14:01,346] INFO [RequestSendThread controllerId=0] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 13:14:01,346] INFO [RequestSendThread controllerId=0] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 13:14:01,347] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-09-06 13:14:01,366] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2024-09-06 13:14:01,370] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2024-09-06 13:14:01,373] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2024-09-06 13:14:01,375] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2024-09-06 13:14:01,372] DEBUG [Controller id=2] Broker 1 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2024-09-06 13:14:01,377] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2024-09-06 13:14:01,382] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 45, 2 -> 61) (kafka.controller.KafkaController)
[2024-09-06 13:14:01,395] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2024-09-06 13:14:01,414] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2024-09-06 13:14:01,421] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-06 13:14:01,425] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-09-06 13:14:01,426] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-09-06 13:14:01,426] INFO [Controller id=1] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2024-09-06 13:14:01,426] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2024-09-06 13:14:01,427] INFO [Controller id=1] Current list of topics in the cluster: HashSet(multi-broker-topic, test-topic, __consumer_offsets) (kafka.controller.KafkaController)
[2024-09-06 13:14:01,427] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2024-09-06 13:14:01,430] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2024-09-06 13:14:01,430] INFO [Controller id=1] List of topics ineligible for deletion: multi-broker-topic,test-topic,__consumer_offsets (kafka.controller.KafkaController)
[2024-09-06 13:14:01,430] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2024-09-06 13:14:01,431] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(multi-broker-topic, test-topic, __consumer_offsets) (kafka.controller.TopicDeletionManager)
[2024-09-06 13:14:01,432] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2024-09-06 13:14:01,438] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 13:14:01,440] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 13:14:01,440] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 13:14:01,442] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 13:14:01,457] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 13:14:01,501] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=34,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=46,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=1] -> OnlineReplica, [Topic=multi-broker-topic,Partition=4,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=0] -> OfflineReplica, [Topic=multi-broker-topic,Partition=3,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=2] -> OnlineReplica, [Topic=multi-broker-topic,Partition=1,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=1] -> OnlineReplica, [Topic=test-topic,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=1] -> OnlineReplica, [Topic=test-topic,Partition=2,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=0] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=1] -> OnlineReplica, [Topic=test-topic,Partition=0,Replica=0] -> OfflineReplica, [Topic=test-topic,Partition=3,Replica=0] -> OfflineReplica, [Topic=test-topic,Partition=1,Replica=2] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 13:14:01,504] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 13:14:01,507] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 13:14:01,535] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(__consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, multi-broker-topic-1 -> OfflinePartition, test-topic-2 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, multi-broker-topic-0 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, multi-broker-topic-4 -> OfflinePartition, test-topic-1 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, test-topic-4 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, multi-broker-topic-3 -> OnlinePartition, test-topic-0 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, multi-broker-topic-2 -> OnlinePartition, test-topic-3 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 13:14:01,535] INFO [Controller id=1] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2024-09-06 13:14:01,539] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 13:14:01,539] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2024-09-06 13:14:01,539] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2024-09-06 13:14:01,539] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2024-09-06 13:14:01,540] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2024-09-06 13:14:01,549] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2024-09-06 13:14:06,555] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 13:14:06,556] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 13:14:06,565] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-6 -> List(0), test-topic-0 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-06 13:14:06,567] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 13:14:06,572] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 13:14:06,572] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:14:06,572] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:14:06,572] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:14:06,572] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:16:58,723] INFO [Controller id=1] Shutting down broker 2 (kafka.controller.KafkaController)
[2024-09-06 13:16:58,723] DEBUG [Controller id=1] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2024-09-06 13:16:58,723] DEBUG [Controller id=1] Live brokers: 1 (kafka.controller.KafkaController)
[2024-09-06 13:16:58,726] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-9 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-42 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-21 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-1 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),test-topic-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-45 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-12 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-4 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),test-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-33 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-15 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-48 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),test-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-3 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),test-topic-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-3 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-36 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-18 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),test-topic-3 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-39 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-6 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-09-06 13:16:59,343] INFO [ControllerEventThread controllerId=2] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 13:16:59,343] INFO [ControllerEventThread controllerId=2] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 13:16:59,343] INFO [ControllerEventThread controllerId=2] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 13:16:59,343] DEBUG [Controller id=2] Resigning (kafka.controller.KafkaController)
[2024-09-06 13:16:59,344] DEBUG [Controller id=2] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-09-06 13:16:59,344] INFO [PartitionStateMachine controllerId=2] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 13:16:59,344] INFO [ReplicaStateMachine controllerId=2] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 13:16:59,345] INFO [Controller id=2] Resigned (kafka.controller.KafkaController)
[2024-09-06 13:16:59,354] INFO [Controller id=1] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 1 (kafka.controller.KafkaController)
[2024-09-06 13:16:59,355] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 13:16:59,355] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 13:16:59,355] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 13:16:59,359] INFO [Controller id=1] Broker failure callback for 2 (kafka.controller.KafkaController)
[2024-09-06 13:16:59,359] INFO [Controller id=1] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2024-09-06 13:16:59,394] DEBUG [Controller id=1] Unregister BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2024-09-06 13:16:59,394] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 45) (kafka.controller.KafkaController)
[2024-09-06 13:19:06,583] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 13:19:06,583] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 13:19:06,584] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap(__consumer_offsets-30 -> List(0), __consumer_offsets-21 -> List(0), __consumer_offsets-33 -> List(0), __consumer_offsets-36 -> List(0), __consumer_offsets-6 -> List(0), test-topic-0 -> List(0), __consumer_offsets-0 -> List(0), __consumer_offsets-27 -> List(0), __consumer_offsets-9 -> List(0), __consumer_offsets-42 -> List(0), __consumer_offsets-3 -> List(0), test-topic-3 -> List(0), __consumer_offsets-18 -> List(0), __consumer_offsets-15 -> List(0), __consumer_offsets-24 -> List(0), multi-broker-topic-4 -> List(0), __consumer_offsets-48 -> List(0), __consumer_offsets-39 -> List(0), __consumer_offsets-12 -> List(0), multi-broker-topic-1 -> List(0), __consumer_offsets-45 -> List(0)) (kafka.controller.KafkaController)
[2024-09-06 13:19:06,584] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 13:19:06,584] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 13:19:06,584] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:19:06,584] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:19:06,584] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-22 -> List(2), __consumer_offsets-4 -> List(2), __consumer_offsets-25 -> List(2), __consumer_offsets-49 -> List(2), __consumer_offsets-31 -> List(2), __consumer_offsets-37 -> List(2), multi-broker-topic-2 -> List(2), test-topic-1 -> List(2), __consumer_offsets-19 -> List(2), __consumer_offsets-13 -> List(2), __consumer_offsets-43 -> List(2), __consumer_offsets-1 -> List(2), __consumer_offsets-34 -> List(2), __consumer_offsets-7 -> List(2), test-topic-4 -> List(2), __consumer_offsets-46 -> List(2), __consumer_offsets-16 -> List(2), __consumer_offsets-28 -> List(2), __consumer_offsets-10 -> List(2), __consumer_offsets-40 -> List(2)) (kafka.controller.KafkaController)
[2024-09-06 13:19:06,584] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2024-09-06 13:19:06,585] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2024-09-06 13:19:48,112] DEBUG [Controller id=1] Read current producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=0, size=1000), Zk path version 1 (kafka.controller.KafkaController)
[2024-09-06 13:19:48,117] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=1000, size=1000) by writing to Zk with path version 2 (kafka.controller.KafkaController)
[2024-09-06 13:22:38,164] INFO [Controller id=1] Newly added brokers: 0, deleted brokers: , bounced brokers: , all live brokers: 0,1 (kafka.controller.KafkaController)
[2024-09-06 13:22:38,164] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2024-09-06 13:22:38,170] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-09-06 13:22:38,170] INFO [Controller id=1] New broker startup callback for 0 (kafka.controller.KafkaController)
[2024-09-06 13:22:38,179] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 13:22:38,210] DEBUG [Controller id=1] Register BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2024-09-06 13:22:38,211] INFO [Controller id=1] Updated broker epochs cache: HashMap(0 -> 257, 1 -> 45) (kafka.controller.KafkaController)
[2024-09-06 13:22:38,225] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 13:22:38,241] DEBUG [Controller id=0] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-06 13:22:38,298] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9092 (id: 0 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9092 (id: 0 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 13:22:38,412] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 13:22:57,049] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 0,1,2 (kafka.controller.KafkaController)
[2024-09-06 13:22:57,050] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2024-09-06 13:22:57,059] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2024-09-06 13:22:57,059] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2024-09-06 13:22:57,068] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 13:22:57,083] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2024-09-06 13:22:57,085] INFO [Controller id=1] Updated broker epochs cache: HashMap(0 -> 257, 1 -> 45, 2 -> 294) (kafka.controller.KafkaController)
[2024-09-06 13:22:57,108] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 13:22:57,125] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2024-09-06 13:22:57,187] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker localhost:9094 (id: 2 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to localhost:9094 (id: 2 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:71)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:299)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at org.apache.kafka.server.util.ShutdownableThread.run(ShutdownableThread.java:135)
[2024-09-06 13:22:57,301] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 13:24:06,598] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 13:24:06,598] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 13:24:06,599] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:24:06,599] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:24:06,599] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:24:06,599] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:24:06,599] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:24:06,599] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:29:06,610] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 13:29:06,611] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 13:29:06,613] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:29:06,613] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:29:06,613] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:29:06,613] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:29:06,613] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:29:06,613] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:34:06,628] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 13:34:06,628] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 13:34:06,629] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:34:06,629] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:34:06,629] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:34:06,629] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:34:06,629] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:34:06,629] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:39:06,632] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 13:39:06,632] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 13:39:06,634] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:39:06,634] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:39:06,634] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:39:06,634] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:39:06,634] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:39:06,634] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:44:06,649] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 13:44:06,649] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 13:44:06,651] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:44:06,651] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:44:06,651] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:44:06,651] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:44:06,651] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:44:06,651] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:45:56,133] DEBUG [Controller id=1] Read current producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=1000, size=1000), Zk path version 2 (kafka.controller.KafkaController)
[2024-09-06 13:45:56,139] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=2000, size=1000) by writing to Zk with path version 3 (kafka.controller.KafkaController)
[2024-09-06 13:49:06,660] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 13:49:06,660] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 13:49:06,661] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:49:06,661] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:49:06,661] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:49:06,661] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:49:06,661] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:49:06,661] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:54:06,674] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 13:54:06,674] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 13:54:06,677] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:54:06,677] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:54:06,677] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:54:06,677] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:54:06,678] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:54:06,678] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:59:06,691] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 13:59:06,691] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 13:59:06,692] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:59:06,692] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:59:06,692] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:59:06,692] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 13:59:06,692] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 13:59:06,692] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:04:06,707] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 14:04:06,709] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 14:04:06,709] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:04:06,709] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:04:06,709] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:04:06,709] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:04:06,709] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:04:06,709] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:09:06,719] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 14:09:06,719] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 14:09:06,720] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:09:06,720] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:09:06,720] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:09:06,720] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:09:06,720] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:09:06,720] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:14:06,730] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 14:14:06,730] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 14:14:06,731] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:14:06,731] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:14:06,731] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:14:06,731] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:14:06,731] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:14:06,731] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:19:06,737] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 14:19:06,737] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 14:19:06,739] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:19:06,739] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:19:06,739] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:19:06,739] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:19:06,739] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:19:06,739] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:24:06,747] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 14:24:06,747] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 14:24:06,748] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:24:06,748] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:24:06,748] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:24:06,748] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:24:06,748] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:24:06,748] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:29:06,757] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 14:29:06,757] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 14:29:06,757] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:29:06,757] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:29:06,758] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:29:06,758] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:29:06,758] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:29:06,758] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:34:06,769] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 14:34:06,769] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 14:34:06,769] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:34:06,769] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:34:06,769] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:34:06,769] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:34:06,769] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:34:06,769] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:39:06,778] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 14:39:06,778] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 14:39:06,779] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:39:06,779] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:39:06,779] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:39:06,779] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:39:06,779] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:39:06,779] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:44:06,789] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 14:44:06,789] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 14:44:06,790] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:44:06,790] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:44:06,790] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:44:06,790] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:44:06,790] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:44:06,790] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:49:06,803] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 14:49:06,803] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 14:49:06,804] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:49:06,804] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:49:06,804] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:49:06,804] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:49:06,804] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:49:06,804] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:54:06,811] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 14:54:06,811] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 14:54:06,813] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:54:06,813] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:54:06,813] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:54:06,813] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:54:06,813] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:54:06,813] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:59:06,826] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 14:59:06,826] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 14:59:06,828] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:59:06,828] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:59:06,828] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:59:06,828] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 14:59:06,828] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 14:59:06,828] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:04:06,842] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:04:06,847] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:04:06,848] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:04:06,848] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:04:06,848] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:04:06,848] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:04:06,849] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:04:06,849] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:09:06,859] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:09:06,859] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:09:06,859] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:09:06,859] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:09:06,860] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:09:06,860] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:09:06,860] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:09:06,860] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:14:06,866] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:14:06,866] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:14:06,868] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:14:06,868] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:14:06,868] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:14:06,868] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:14:06,868] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:14:06,868] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:19:06,871] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:19:06,871] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:19:06,871] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:19:06,871] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:19:06,871] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:19:06,871] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:19:06,871] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:19:06,872] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:24:06,873] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:24:06,873] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:24:06,873] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:24:06,873] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:24:06,874] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:24:06,874] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:24:06,874] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:24:06,874] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:29:06,875] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:29:06,875] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:29:06,875] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:29:06,875] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:29:06,875] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:29:06,875] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:29:06,876] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:29:06,876] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:34:06,877] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:34:06,877] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:34:06,877] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:34:06,878] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:34:06,878] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:34:06,878] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:34:06,878] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:34:06,878] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:39:06,889] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:39:06,889] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:39:06,891] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:39:06,891] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:39:06,891] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:39:06,891] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:39:06,891] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:39:06,891] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:40:16,993] INFO [Controller id=1] New partitions to be added HashMap(multi-broker-topic-5 -> ReplicaAssignment(replicas=0, addingReplicas=, removingReplicas=)) (kafka.controller.KafkaController)
[2024-09-06 15:40:16,997] INFO [Controller id=1] New partition creation callback for multi-broker-topic-5 (kafka.controller.KafkaController)
[2024-09-06 15:40:17,023] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 15:40:17,023] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 15:40:17,023] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2024-09-06 15:40:55,283] DEBUG [Controller id=1] Read current producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=2000, size=1000), Zk path version 3 (kafka.controller.KafkaController)
[2024-09-06 15:40:55,283] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=0, firstProducerId=3000, size=1000) by writing to Zk with path version 4 (kafka.controller.KafkaController)
[2024-09-06 15:44:06,893] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2024-09-06 15:44:06,893] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2024-09-06 15:44:06,893] DEBUG [Controller id=1] Topics not in preferred replica for broker 0 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:44:06,893] TRACE [Controller id=1] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:44:06,893] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:44:06,893] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:44:06,893] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2024-09-06 15:44:06,893] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2024-09-06 15:44:42,903] INFO [Controller id=1] Shutting down broker 0 (kafka.controller.KafkaController)
[2024-09-06 15:44:42,903] DEBUG [Controller id=1] All shutting down brokers: 0 (kafka.controller.KafkaController)
[2024-09-06 15:44:42,903] DEBUG [Controller id=1] Live brokers: 1,2 (kafka.controller.KafkaController)
[2024-09-06 15:44:42,904] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-9 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-42 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-21 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-1 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),test-topic-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),multi-broker-topic-5 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:2),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-45 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-12 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),multi-broker-topic-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-4 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),test-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-33 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-15 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-48 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),test-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-3 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),test-topic-0 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-36 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-18 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),multi-broker-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),test-topic-3 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-39 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-6 -> (Leader:0,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-09-06 15:44:43,627] INFO [ControllerEventThread controllerId=0] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:44:43,629] INFO [ControllerEventThread controllerId=0] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:44:43,629] INFO [ControllerEventThread controllerId=0] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:44:43,631] DEBUG [Controller id=0] Resigning (kafka.controller.KafkaController)
[2024-09-06 15:44:43,631] DEBUG [Controller id=0] Unregister BrokerModifications handler for Set() (kafka.controller.KafkaController)
[2024-09-06 15:44:43,633] INFO [PartitionStateMachine controllerId=0] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 15:44:43,633] INFO [ReplicaStateMachine controllerId=0] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:44:43,635] INFO [Controller id=0] Resigned (kafka.controller.KafkaController)
[2024-09-06 15:44:43,645] INFO [Controller id=1] Newly added brokers: , deleted brokers: 0, bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2024-09-06 15:44:43,645] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 15:44:43,646] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 15:44:43,646] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 15:44:43,650] INFO [Controller id=1] Broker failure callback for 0 (kafka.controller.KafkaController)
[2024-09-06 15:44:43,650] INFO [Controller id=1] Removed 0 from list of shutting down brokers. (kafka.controller.KafkaController)
[2024-09-06 15:44:43,684] DEBUG [Controller id=1] Unregister BrokerModifications handler for List(0) (kafka.controller.KafkaController)
[2024-09-06 15:44:43,684] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 45, 2 -> 294) (kafka.controller.KafkaController)
[2024-09-06 15:45:00,742] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2024-09-06 15:45:00,742] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2024-09-06 15:45:00,742] DEBUG [Controller id=1] Live brokers: 2 (kafka.controller.KafkaController)
[2024-09-06 15:45:00,743] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-46 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-9 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-42 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-21 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-17 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-1 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),test-topic-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-30 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),multi-broker-topic-5 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2),__consumer_offsets-26 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-5 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-38 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-34 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-16 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-45 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-12 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-41 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-24 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-20 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-49 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),multi-broker-topic-0 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-29 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-4 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),test-topic-1 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-25 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-8 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-37 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-33 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-15 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-48 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-23 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-19 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),test-topic-4 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-32 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),multi-broker-topic-3 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),test-topic-0 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-28 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-7 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-40 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-3 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-36 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-47 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-14 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-43 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-10 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-22 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),__consumer_offsets-18 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),multi-broker-topic-2 -> (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:2,ControllerEpoch:2),test-topic-3 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-39 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-6 -> (Leader:-1,ISR:0,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1),__consumer_offsets-2 -> (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:0,ZkVersion:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2024-09-06 15:45:01,430] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:45:01,430] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:45:01,431] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2024-09-06 15:45:01,431] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2024-09-06 15:45:01,431] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2024-09-06 15:45:01,431] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2024-09-06 15:45:01,432] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2024-09-06 15:45:01,432] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 15:45:01,433] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 15:45:01,433] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 15:45:01,434] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2024-09-06 15:45:01,434] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2024-09-06 15:45:01,434] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2024-09-06 15:45:01,435] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
